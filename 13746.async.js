"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[13746,44308],{44308:function(e,n,t){t.r(n),t.d(n,{hydratedAdapter:function(){return o}});var r=t(71354),i=t(82868),u=t(60508),c=t(67764),a=t(62197);const o={convertToGEGeometry:function(e,n){if(null==n)return null;let t="cache"in n?n.cache._geVersion:void 0;return null==t&&(t=e.convertJSONToGeometry(n),"cache"in n&&(n.cache._geVersion=t)),t},exportPoint:function(e,n,t){const r=e.hasZ(n),i=e.hasM(n),c=new u.Z({x:e.getPointX(n),y:e.getPointY(n),spatialReference:t});return r&&(c.z=e.getPointZ(n)),i&&(c.m=e.getPointM(n)),c.cache._geVersion=n,c},exportPolygon:function(e,n,t){const r=new c.Z({rings:e.exportPaths(n),hasZ:e.hasZ(n),hasM:e.hasM(n),spatialReference:t});return r.cache._geVersion=n,r},exportPolyline:function(e,n,t){const r=new a.Z({paths:e.exportPaths(n),hasZ:e.hasZ(n),hasM:e.hasM(n),spatialReference:t});return r.cache._geVersion=n,r},exportMultipoint:function(e,n,t){const r=new i.Z({hasZ:e.hasZ(n),hasM:e.hasM(n),points:e.exportPoints(n),spatialReference:t});return r.cache._geVersion=n,r},exportExtent:function(e,n,t){const i=e.hasZ(n),u=e.hasM(n),c=new r.Z({xmin:e.getXMin(n),ymin:e.getYMin(n),xmax:e.getXMax(n),ymax:e.getYMax(n),spatialReference:t});if(i){const t=e.getZExtent(n);c.zmin=t.vmin,c.zmax=t.vmax}if(u){const t=e.getMExtent(n);c.mmin=t.vmin,c.mmax=t.vmax}return c.cache._geVersion=n,c}}},13746:function(e,n,t){t.r(n),t.d(n,{buffer:function(){return D},changeDefaultSpatialReferenceTolerance:function(){return B},clearDefaultSpatialReferenceTolerance:function(){return W},clip:function(){return s},contains:function(){return l},convexHull:function(){return Z},crosses:function(){return p},cut:function(){return d},densify:function(){return N},difference:function(){return v},disjoint:function(){return g},distance:function(){return h},equals:function(){return M},extendedSpatialReferenceInfo:function(){return f},flipHorizontal:function(){return k},flipVertical:function(){return C},generalize:function(){return H},geodesicArea:function(){return Y},geodesicBuffer:function(){return z},geodesicDensify:function(){return O},geodesicLength:function(){return j},intersect:function(){return V},intersectLinesToPoints:function(){return q},intersects:function(){return y},isSimple:function(){return w},nearestCoordinate:function(){return _},nearestVertex:function(){return E},nearestVertices:function(){return L},offset:function(){return T},overlaps:function(){return x},planarArea:function(){return I},planarLength:function(){return X},relate:function(){return m},rotate:function(){return b},simplify:function(){return R},symmetricDifference:function(){return S},touches:function(){return G},union:function(){return P},within:function(){return A}});var r=t(95226),i=t(74309),u=t(27093),c=t(45213),a=t(44308);function o(e){const n=Array.isArray(e)?e[0].spatialReference:e.spatialReference;return n?(0,r.TJ)(c.Z,n):c.Z.WGS84}function f(e){return u.G.extendedSpatialReferenceInfo(e)}function s(e,n){return(0,i.M)(e),u.G.clip(a.hydratedAdapter,o(e),e,n)}function d(e,n){return(0,i.M)(e),u.G.cut(a.hydratedAdapter,o(e),e,n)}function l(e,n){return(0,i.M)(e),(0,i.M)(n),u.G.contains(a.hydratedAdapter,o(e),e,n)}function p(e,n){return(0,i.M)(e),(0,i.M)(n),u.G.crosses(a.hydratedAdapter,o(e),e,n)}function h(e,n,t){return(0,i.M)(e),(0,i.M)(n),u.G.distance(a.hydratedAdapter,o(e),e,n,t)}function M(e,n){return(0,i.M)(e),(0,i.M)(n),u.G.equals(a.hydratedAdapter,o(e),e,n)}function y(e,n){return(0,i.M)(e),(0,i.M)(n),u.G.intersects(a.hydratedAdapter,o(e),e,n)}function G(e,n){return(0,i.M)(e),(0,i.M)(n),u.G.touches(a.hydratedAdapter,o(e),e,n)}function A(e,n){return(0,i.M)(e),(0,i.M)(n),u.G.within(a.hydratedAdapter,o(e),e,n)}function g(e,n){return(0,i.M)(e),(0,i.M)(n),u.G.disjoint(a.hydratedAdapter,o(e),e,n)}function x(e,n){return(0,i.M)(e),(0,i.M)(n),u.G.overlaps(a.hydratedAdapter,o(e),e,n)}function m(e,n,t){return(0,i.M)(e),(0,i.M)(n),u.G.relate(a.hydratedAdapter,o(e),e,n,t)}function w(e){return(0,i.M)(e),u.G.isSimple(a.hydratedAdapter,o(e),e)}function R(e){return(0,i.M)(e),u.G.simplify(a.hydratedAdapter,o(e),e)}function Z(e,n=!1){return u.G.convexHull(a.hydratedAdapter,o(e),e,n)}function v(e,n){return(0,i.M)(n),u.G.difference(a.hydratedAdapter,o(e),e,n)}function S(e,n){return(0,i.M)(n),u.G.symmetricDifference(a.hydratedAdapter,o(e),e,n)}function V(e,n){return(0,i.M)(n),u.G.intersect(a.hydratedAdapter,o(e),e,n)}function P(e){return u.G.union(a.hydratedAdapter,o(e),e)}function T(e,n,t,r,i,c){return u.G.offset(a.hydratedAdapter,o(e),e,n,t,r,i,c)}function D(e,n,t,r=!1){return u.G.buffer(a.hydratedAdapter,o(e),e,n,t,r)}function z(e,n,t,r,i,c){return u.G.geodesicBuffer(a.hydratedAdapter,o(e),e,n,t,r,i,c)}function _(e,n,t=!0){return(0,i.M)(e),u.G.nearestCoordinate(a.hydratedAdapter,o(e),e,n,t)}function E(e,n){return(0,i.M)(e),u.G.nearestVertex(a.hydratedAdapter,o(e),e,n)}function L(e,n,t,r){return(0,i.M)(e),u.G.nearestVertices(a.hydratedAdapter,o(e),e,n,t,r)}function J(e){return"xmin"in e?"center"in e?e.center:null:"x"in e?e:"extent"in e?e.extent?.center??null:null}function b(e,n,t){if(null==e)throw new F;const r=e.spatialReference;if(null==(t=t??J(e)))throw new F;const i=e.constructor.fromJSON(u.G.rotate(e,n,t));return i.spatialReference=r,i}function k(e,n){if(null==e)throw new F;const t=e.spatialReference;if(null==(n=n??J(e)))throw new F;const r=e.constructor.fromJSON(u.G.flipHorizontal(e,n));return r.spatialReference=t,r}function C(e,n){if(null==e)throw new F;const t=e.spatialReference;if(null==(n=n??J(e)))throw new F;const r=e.constructor.fromJSON(u.G.flipVertical(e,n));return r.spatialReference=t,r}function H(e,n,t,r){return(0,i.M)(e),u.G.generalize(a.hydratedAdapter,o(e),e,n,t,r)}function N(e,n,t){return(0,i.M)(e),u.G.densify(a.hydratedAdapter,o(e),e,n,t)}function O(e,n,t,r=0){return(0,i.M)(e),u.G.geodesicDensify(a.hydratedAdapter,o(e),e,n,t,r)}function I(e,n){return(0,i.M)(e),u.G.planarArea(a.hydratedAdapter,o(e),e,n)}function X(e,n){return(0,i.M)(e),u.G.planarLength(a.hydratedAdapter,o(e),e,n)}function Y(e,n,t){return(0,i.M)(e),u.G.geodesicArea(a.hydratedAdapter,o(e),e,n,t)}function j(e,n,t){return(0,i.M)(e),u.G.geodesicLength(a.hydratedAdapter,o(e),e,n,t)}function q(e,n){return u.G.intersectLinesToPoints(a.hydratedAdapter,o(e),e,n)}function B(e,n){u.G.changeDefaultSpatialReferenceTolerance(e,n)}function W(e){u.G.clearDefaultSpatialReferenceTolerance(e)}class F extends Error{constructor(){super("Illegal Argument Exception")}}}}]);