"use strict";(self.webpackChunkscene_pro=self.webpackChunkscene_pro||[]).push([[14357],{46451:function(e,t,n){n.d(t,{Z:function(){return x}});var r,i=n(73440),s=n(997),o=n(89314),l=n(85168),a=n(63255),u=n(96711),p=n(90403),c=n(67908),h=n(17155),y=(n(61432),n(83850),n(48023)),f=n(69306),g=n(90756),m=n(98842),d=n(15083),b=n(68578);function _(e){if(null==e)return null;const t={};for(const n in e){const r=e[n];r&&(t[n]=r.toJSON())}return 0!==Object.keys(t).length?t:null}let x=class extends(o.Z.ClonableMixin(a.Z)){static{r=this}constructor(e){super(e),this.isAggregate=!1,this.layer=null,this.origin=null,this.sourceLayer=null,this._version=0,Object.defineProperty(this,"uid",{value:(0,c.D)(),configurable:!0}),Object.defineProperty(this,"_lastMeshTransform",{value:{},configurable:!0,writable:!0,enumerable:!1}),arguments.length>1&&(0,l.bP)(u.Z.getLogger(this),"Graphic",{version:"4.30"})}initialize(){this._watchMeshGeometryChanges()}set aggregateGeometries(e){const t=this._get("aggregateGeometries");JSON.stringify(t)!==JSON.stringify(e)&&this._set("aggregateGeometries",e)}set attributes(e){const t=this._get("attributes");t!==e&&(this._set("attributes",e),this._notifyLayer("attributes",t,e))}set geometry(e){const t=this._get("geometry");t!==e&&(this._set("geometry",e),"mesh"!==e?.type&&this._notifyLayer("geometry",t,e))}set popupTemplate(e){const t=this._get("popupTemplate");t!==e&&(this._set("popupTemplate",e),this._notifyLayer("popupTemplate",t,e))}set symbol(e){const t=this._get("symbol");t!==e&&(this._set("symbol",e),this._notifyLayer("symbol",t,e))}get version(){return this._version}set visible(e){const t=this._get("visible");t!==e&&(this._set("visible",e),this._notifyLayer("visible",t,e))}cloneShallow(){return new r({aggregateGeometries:this.aggregateGeometries,attributes:this.attributes,geometry:this.geometry,isAggregate:this.isAggregate,layer:this.layer,popupTemplate:this.popupTemplate,sourceLayer:this.sourceLayer,symbol:this.symbol,visible:this.visible,origin:this.origin})}getEffectivePopupTemplate(e=!1){if(this.popupTemplate)return this.popupTemplate;const t=this.origin&&"layer"in this.origin?this.origin.layer:null;for(const n of[t,this.sourceLayer,this.layer])if(n){if("popupTemplate"in n&&n.popupTemplate)return n.popupTemplate;if(e&&"defaultPopupTemplate"in n&&null!=n.defaultPopupTemplate)return n.defaultPopupTemplate}return null}getAttribute(e){return this.attributes?.[e]}setAttribute(e,t){if(this.attributes){const n=this.getAttribute(e);this.attributes[e]=t,this._notifyLayer("attributes",n,t,e)}else this.attributes={[e]:t}}getObjectId(){const e=this.sourceLayer??this.layer;return e?(0,d.v)(this,e):null}getGlobalId(){const e=this.sourceLayer??this.layer;return e&&"globalIdField"in e&&e.globalIdField?this.getAttribute(e.globalIdField):null}toJSON(){return{aggregateGeometries:_(this.aggregateGeometries),geometry:null!=this.geometry?this.geometry.toJSON():null,symbol:null!=this.symbol?this.symbol.toJSON():null,attributes:(0,f.A)(this.attributes)?this.attributes.toJSON():{...this.attributes},popupTemplate:this.popupTemplate?.toJSON()??null}}notifyMeshTransformChanged(e={}){const{geometry:t}=this;if("mesh"===t?.type){const n={origin:t.origin,transform:t.transform};this._notifyLayer("origin-transform",n,n,e.action)}}_notifyLayer(e,t,n,r){if(this._version++,!this.layer||!("graphicChanged"in this.layer))return;const i={graphic:this,property:e,oldValue:t,newValue:n};"origin-transform"===e&&(i.action=r),"attributes"===e&&(i.attributeName=r),this.layer.graphicChanged(i)}_watchMeshGeometryChanges(){this.addHandles([(0,p.gx)((()=>"mesh"===this.geometry?.type&&this.geometry.vertexSpace.origin?{localMatrix:this.geometry.transform?.localMatrix,origin:this.geometry.vertexSpace.origin}:void 0),(({localMatrix:e,origin:t})=>{this._lastMeshTransform.localMatrix===e&&this._lastMeshTransform.origin===t||(this._lastMeshTransform.localMatrix=e,this._lastMeshTransform.origin=t,this.notifyMeshTransformChanged())})),(0,p.gx)((()=>"mesh"===this.geometry?.type?{vertexAttributes:this.geometry.vertexAttributes}:void 0),(()=>{const e=this.geometry;"mesh"===e?.type&&e.vertexSpace.origin?(this._lastMeshTransform.localMatrix=e.transform?.localMatrix,this._lastMeshTransform.origin=e.vertexSpace.origin):(this._lastMeshTransform.localMatrix=void 0,this._lastMeshTransform.origin=void 0),this._notifyLayer("geometry",this.geometry,this.geometry)}),{equals:(e,t)=>e===t,sync:!0})])}};(0,i._)([(0,h.Cb)({value:null,json:{read:function(e){if(!e)return null;const t={};for(const n in e){const r=(0,g.im)(e[n]);r&&(t[n]=r)}return 0!==Object.keys(t).length?t:null}}})],x.prototype,"aggregateGeometries",null),(0,i._)([(0,h.Cb)({value:null})],x.prototype,"attributes",null),(0,i._)([(0,h.Cb)({value:null,types:m.qM,json:{read:g.im}})],x.prototype,"geometry",null),(0,i._)([(0,h.Cb)({type:Boolean})],x.prototype,"isAggregate",void 0),(0,i._)([(0,h.Cb)({clonable:!1})],x.prototype,"layer",void 0),(0,i._)([(0,h.Cb)({clonable:"reference"})],x.prototype,"origin",void 0),(0,i._)([(0,h.Cb)({type:s.Z,value:null})],x.prototype,"popupTemplate",null),(0,i._)([(0,h.Cb)({clonable:"reference"})],x.prototype,"sourceLayer",void 0),(0,i._)([(0,h.Cb)({value:null,types:b.LB})],x.prototype,"symbol",null),(0,i._)([(0,h.Cb)({clonable:!1,json:{read:!1,write:!1}})],x.prototype,"_version",void 0),(0,i._)([(0,h.Cb)({type:Boolean,value:!0})],x.prototype,"visible",null),x=r=(0,i._)([(0,y.j)("esri.Graphic")],x)},34042:function(e,t,n){n.d(t,{it:function(){return T},aX:function(){return M},hR:function(){return _}});var r=n(81001),i=n(88194),s=n(96711),o=n(67764),l=n(62197),a=n(76264),u=n(8554),p=n(97290),c=n(78619),h=n(90756),y=n(56545);var f=n(95490),g=n(93333);const m=()=>s.Z.getLogger("esri.geometry.support.normalizeUtils");function d(e){return"polygon"===e[0].type}function b(e){return"polyline"===e[0].type}function _(e,t){if(!(e instanceof l.Z||e instanceof o.Z)){const e="straightLineDensify: the input geometry is neither polyline nor polygon";throw m().error(e),new i.Z("internal:geometry",e)}const n=(0,a.x3)(e),r=[];for(const e of n){const n=[];r.push(n),n.push([e[0][0],e[0][1]]);for(let r=0;r<e.length-1;r++){const i=e[r][0],s=e[r][1],o=e[r+1][0],l=e[r+1][1],a=Math.sqrt((o-i)*(o-i)+(l-s)*(l-s)),u=(l-s)/a,p=(o-i)/a,c=a/t;if(c>1){for(let e=1;e<=c-1;e++){const r=e*t,o=p*r+i,l=u*r+s;n.push([o,l])}const e=(a+Math.floor(c-1)*t)/2,r=p*e+i,o=u*e+s;n.push([r,o])}n.push([o,l])}}return function(e){return"polygon"===e.type}(e)?new o.Z({rings:r,spatialReference:e.spatialReference}):new l.Z({paths:r,spatialReference:e.spatialReference})}function x(e,t,n){if(t){const t=_(e,1e6);e=(0,p.Sx)(t,!0)}return n&&(e=(0,a.Sy)(e,n)),e}function v(e,t,n){if(Array.isArray(e)){const r=e[0];if(r>t){const n=(0,a.XZ)(r,t);e[0]=r+n*(-2*t)}else if(r<n){const t=(0,a.XZ)(r,n);e[0]=r+t*(-2*n)}}else{const r=e.x;if(r>t){const n=(0,a.XZ)(r,t);e=e.clone().offset(n*(-2*t),0)}else if(r<n){const t=(0,a.XZ)(r,n);e=e.clone().offset(t*(-2*n),0)}}return e}function Z(e,t){let n=-1;for(let r=0;r<t.cutIndexes.length;r++){const i=t.cutIndexes[r],s=t.geometries[r],o=(0,a.x3)(s);for(let e=0;e<o.length;e++){const t=o[e];t.some((n=>{if(n[0]<180)return!0;{let n=0;for(let e=0;e<t.length;e++){const r=t[e][0];n=r>n?r:n}n=Number(n.toFixed(9));const r=-360*(0,a.XZ)(n,180);for(let n=0;n<t.length;n++){const t=s.getPoint(e,n);s.setPoint(e,n,t.clone().offset(r,0))}return!0}}))}if(i===n){if(d(e))for(const t of(0,a.x3)(s))e[i]=e[i].addRing(t);else if(b(e))for(const t of(0,a.x3)(s))e[i]=e[i].addPath(t)}else n=i,e[i]=s}return e}async function M(e,t,n){if(!Array.isArray(e))return M([e],t);t&&"string"!=typeof t&&m().warn("normalizeCentralMeridian()","The url object is deprecated, use the url string instead");const i="string"==typeof t?t:t?.url??r.default.geometryServiceUrl;let s,d,b,_,T,w,G,S,C=0;const R=[],L=[];for(const t of e)if(null!=t)if(s||(s=t.spatialReference,d=(0,u.C5)(s),b=s.isWebMercator,w=b?102100:4326,_=a.UZ[w].maxX,T=a.UZ[w].minX,G=a.UZ[w].plus180Line,S=a.UZ[w].minus180Line),d)if("mesh"===t.type)L.push(t);else if("point"===t.type)L.push(v(t.clone(),_,T));else if("multipoint"===t.type){const e=t.clone();e.points=e.points.map((e=>v(e,_,T))),L.push(e)}else if("extent"===t.type){const e=t.clone()._normalize(!1,!1,d);L.push(e.rings?new o.Z(e):e)}else if(t.extent){const e=t.extent,n=(0,a.XZ)(e.xmin,T)*(2*_);let r=0===n?t.clone():(0,a.Sy)(t.clone(),n);e.offset(n,0);let{xmin:i,xmax:s}=e;i=Number(i.toFixed(9)),s=Number(s.toFixed(9)),e.intersects(G)&&s!==_?(C=s>C?s:C,r=x(r,b),R.push(r),L.push("cut")):e.intersects(S)&&i!==T?(C=s*(2*_)>C?s*(2*_):C,r=x(r,b,360),R.push(r),L.push("cut")):L.push(r)}else L.push(t.clone());else L.push(t);else L.push(t);let N=(0,a.XZ)(C,_),P=-90;const O=N,j=new l.Z;for(;N>0;){const e=360*N-180;j.addPath([[e,P],[e,-1*P]]),P*=-1,N--}if(R.length>0&&O>0){const t=Z(R,await async function(e,t,n,r){const i=(0,y.en)(e),s=t[0].spatialReference,o={...r,responseType:"json",query:{...i.query,f:"json",sr:(0,u.B9)(s),target:JSON.stringify({geometryType:(0,h.Ji)(t[0]),geometries:t}),cutter:JSON.stringify(n)}},l=await(0,c.Z)(i.path+"/cut",o),{cutIndexes:a,geometries:p=[]}=l.data;return{cutIndexes:a,geometries:p.map((e=>{const t=(0,h.im)(e);return t.spatialReference=s,t}))}}(i,R,j,n)),r=[],s=[];for(let n=0;n<L.length;n++){const i=L[n];if("cut"!==i)s.push(i);else{const i=t.shift(),o=e[n];null!=o&&"polygon"===o.type&&o.rings&&o.rings.length>1&&i.rings.length>=o.rings.length?(r.push(i),s.push("simplify")):s.push(b?(0,p.$)(i):i)}}if(!r.length)return s;const o=await async function(e,t,n){const r="string"==typeof e?(0,f.mN)(e):e,i=t[0].spatialReference,s=(0,h.Ji)(t[0]),o={...n,query:{...r.query,f:"json",sr:(0,u.B9)(i),geometries:JSON.stringify((0,g.F)(t))}},{data:l}=await(0,c.Z)(r.path+"/simplify",o);return(0,g.o)(l.geometries,s,i)}(i,r,n),l=[];for(let e=0;e<s.length;e++){const t=s[e];"simplify"!==t?l.push(t):l.push(b?(0,p.$)(o.shift()):o.shift())}return l}const J=[];for(let e=0;e<L.length;e++){const t=L[e];if("cut"!==t)J.push(t);else{const e=R.shift();J.push(!0===b?(0,p.$)(e):e)}}return J}function T(e,t,n){const r=(0,u.C5)(n);if(null==r)return e;const[i,s]=r.valid,o=2*s;let l=0,a=0;t>s?l=Math.ceil(Math.abs(t-s)/o):t<i&&(l=-Math.ceil(Math.abs(t-i)/o)),e>s?a=Math.ceil(Math.abs(e-s)/o):e<i&&(a=-Math.ceil(Math.abs(e-i)/o));let p=e+(l-a)*o;const c=p-t;return c>s?p-=o:c<i&&(p+=o),p}},76264:function(e,t,n){n.d(t,{Sy:function(){return a},UZ:function(){return o},XZ:function(){return l},x3:function(){return u}});var r=n(62197),i=n(45213),s=n(90756);const o={102100:{maxX:20037508.342788905,minX:-20037508.342788905,plus180Line:new r.Z({paths:[[[20037508.342788905,-20037508.342788905],[20037508.342788905,20037508.342788905]]],spatialReference:i.Z.WebMercator}),minus180Line:new r.Z({paths:[[[-20037508.342788905,-20037508.342788905],[-20037508.342788905,20037508.342788905]]],spatialReference:i.Z.WebMercator})},4326:{maxX:180,minX:-180,plus180Line:new r.Z({paths:[[[180,-180],[180,180]]],spatialReference:i.Z.WGS84}),minus180Line:new r.Z({paths:[[[-180,-180],[-180,180]]],spatialReference:i.Z.WGS84})}};function l(e,t){return Math.ceil((e-t)/(2*t))}function a(e,t){const n=u(e);for(const e of n)for(const n of e)n[0]+=t;return e}function u(e){return(0,s.oU)(e)?e.rings:e.paths}},98842:function(e,t,n){n.d(t,{Mk:function(){return p},P$:function(){return c},qM:function(){return h}});var r=n(41773),i=n(71354),s=n(82890),o=n(82868),l=n(60508),a=n(67764),u=n(62197);const p=(0,r.w)()({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon"}),c=(0,r.w)()({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"extent",mesh:"mesh"}),h={base:s.Z,key:"type",typeMap:{extent:i.Z,multipoint:o.Z,point:l.Z,polyline:u.Z,polygon:a.Z}}},13878:function(e,t,n){n.d(t,{Z:function(){return b}});var r,i=n(73440),s=n(46451),o=n(41773),l=n(63255),a=n(28947),u=n(17155),p=(n(61432),n(96711),n(1194)),c=n(48023),h=n(29884),y=n(45213),f=n(90756),g=n(98842),m=n(49651);const d=new o.X({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"extent",mesh:"mesh","":null});let b=r=class extends l.Z{constructor(e){super(e),this.displayFieldName=null,this.exceededTransferLimit=!1,this.features=[],this.fields=null,this.geometryType=null,this.hasM=!1,this.hasZ=!1,this.queryGeometry=null,this.spatialReference=null}readFeatures(e,t){return this.readFeaturesWithClass(e,t,s.Z)}writeGeometryType(e,t,n,r){if(e)return void d.write(e,t,n,r);const{features:i}=this;if(i)for(const e of i)if(null!=e?.geometry)return void d.write(e.geometry.type,t,n,r)}readQueryGeometry(e,t){if(!e)return null;const n=!!e.spatialReference,r=(0,f.im)(e);return r&&!n&&t.spatialReference&&(r.spatialReference=y.Z.fromJSON(t.spatialReference)),r}writeSpatialReference(e,t){if(e)return void(t.spatialReference=e.toJSON());const{features:n}=this;if(n)for(const e of n)if(e&&null!=e.geometry&&e.geometry.spatialReference)return void(t.spatialReference=e.geometry.spatialReference.toJSON())}clone(){return new r(this.cloneProperties())}cloneProperties(){return(0,a.d9)({displayFieldName:this.displayFieldName,exceededTransferLimit:this.exceededTransferLimit,features:this.features,fields:this.fields,geometryType:this.geometryType,hasM:this.hasM,hasZ:this.hasZ,queryGeometry:this.queryGeometry,spatialReference:this.spatialReference,transform:this.transform})}toJSON(e){const t=this.write();if(t.features&&Array.isArray(e)&&e.length>0)for(let n=0;n<t.features.length;n++){const r=t.features[n];if(r.geometry){const t=e?.[n];r.geometry=t?.toJSON()||r.geometry}}return t}quantize(e){const{scale:[t,n],translate:[r,i]}=e,s=this.features,o=this._getQuantizationFunction(this.geometryType,(e=>Math.round((e-r)/t)),(e=>Math.round((i-e)/n)));for(let e=0,t=s.length;e<t;e++)o?.(s[e].geometry)||(s.splice(e,1),e--,t--);return this.transform=e,this}unquantize(){const{geometryType:e,features:t,transform:n}=this;if(!n)return this;const{translate:[r,i],scale:[s,o]}=n;let l=null,a=null;if(this.hasZ&&null!=n?.scale?.[2]){const{translate:[,,e],scale:[,,t]}=n;l=n=>n*t+e}if(this.hasM&&null!=n?.scale?.[3]){const{translate:[,,,e],scale:[,,,t]}=n;a=n=>null==n?n:n*t+e}const u=this._getHydrationFunction(e,(e=>e*s+r),(e=>i-e*o),l,a);for(const{geometry:e}of t)null!=e&&u&&u(e);return this.transform=null,this}readFeaturesWithClass(e,t,n){const r=y.Z.fromJSON(t.spatialReference),i=[];for(let t=0;t<e.length;t++){const s=e[t],o=n.fromJSON(s),l=s.geometry?.spatialReference;null==o.geometry||l||(o.geometry.spatialReference=r);const a=s.aggregateGeometries,u=o.aggregateGeometries;if(a&&null!=u)for(const e in u){const t=u[e],n=a[e]?.spatialReference;null==t||n||(t.spatialReference=r)}i.push(o)}return i}_quantizePoints(e,t,n){let r,i;const s=[];for(let o=0,l=e.length;o<l;o++){const l=e[o];if(o>0){const e=t(l[0]),o=n(l[1]);e===r&&o===i||(s.push([e-r,o-i]),r=e,i=o)}else r=t(l[0]),i=n(l[1]),s.push([r,i])}return s.length>0?s:null}_getQuantizationFunction(e,t,n){return"point"===e?e=>(e.x=t(e.x),e.y=n(e.y),e):"polyline"===e||"polygon"===e?e=>{const r=(0,f.oU)(e)?e.rings:e.paths,i=[];for(let e=0,s=r.length;e<s;e++){const s=r[e],o=this._quantizePoints(s,t,n);o&&i.push(o)}return i.length>0?((0,f.oU)(e)?e.rings=i:e.paths=i,e):null}:"multipoint"===e?e=>{const r=this._quantizePoints(e.points,t,n);return r&&r.length>0?(e.points=r,e):null}:"extent"===e?e=>e:null}_getHydrationFunction(e,t,n,r,i){return"point"===e?e=>{e.x=t(e.x),e.y=n(e.y),r&&(e.z=r(e.z))}:"polyline"===e||"polygon"===e?e=>{const s=(0,f.oU)(e)?e.rings:e.paths;let o,l;for(let e=0,r=s.length;e<r;e++){const r=s[e];for(let e=0,i=r.length;e<i;e++){const i=r[e];e>0?(o+=i[0],l+=i[1]):(o=i[0],l=i[1]),i[0]=t(o),i[1]=n(l)}}if(r&&i)for(let e=0,t=s.length;e<t;e++){const t=s[e];for(let e=0,n=t.length;e<n;e++){const n=t[e];n[2]=r(n[2]),n[3]=i(n[3])}}else if(r)for(let e=0,t=s.length;e<t;e++){const t=s[e];for(let e=0,n=t.length;e<n;e++){const n=t[e];n[2]=r(n[2])}}else if(i)for(let e=0,t=s.length;e<t;e++){const t=s[e];for(let e=0,n=t.length;e<n;e++){const n=t[e];n[2]=i(n[2])}}}:"extent"===e?e=>{e.xmin=t(e.xmin),e.ymin=n(e.ymin),e.xmax=t(e.xmax),e.ymax=n(e.ymax),r&&null!=e.zmax&&null!=e.zmin&&(e.zmax=r(e.zmax),e.zmin=r(e.zmin)),i&&null!=e.mmax&&null!=e.mmin&&(e.mmax=i(e.mmax),e.mmin=i(e.mmin))}:"multipoint"===e?e=>{const s=e.points;let o,l;for(let e=0,r=s.length;e<r;e++){const r=s[e];e>0?(o+=r[0],l+=r[1]):(o=r[0],l=r[1]),r[0]=t(o),r[1]=n(l)}if(r&&i)for(let e=0,t=s.length;e<t;e++){const t=s[e];t[2]=r(t[2]),t[3]=i(t[3])}else if(r)for(let e=0,t=s.length;e<t;e++){const t=s[e];t[2]=r(t[2])}else if(i)for(let e=0,t=s.length;e<t;e++){const t=s[e];t[2]=i(t[2])}}:null}};(0,i._)([(0,u.Cb)({type:String,json:{write:!0}})],b.prototype,"displayFieldName",void 0),(0,i._)([(0,u.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],b.prototype,"exceededTransferLimit",void 0),(0,i._)([(0,u.Cb)({type:[s.Z],json:{write:!0}})],b.prototype,"features",void 0),(0,i._)([(0,p.r)("features")],b.prototype,"readFeatures",null),(0,i._)([(0,u.Cb)({type:[m.Z],json:{write:!0}})],b.prototype,"fields",void 0),(0,i._)([(0,u.Cb)({type:["point","multipoint","polyline","polygon","extent","mesh"],json:{read:{reader:d.read}}})],b.prototype,"geometryType",void 0),(0,i._)([(0,h.c)("geometryType")],b.prototype,"writeGeometryType",null),(0,i._)([(0,u.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],b.prototype,"hasM",void 0),(0,i._)([(0,u.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],b.prototype,"hasZ",void 0),(0,i._)([(0,u.Cb)({types:g.qM,json:{write:!0}})],b.prototype,"queryGeometry",void 0),(0,i._)([(0,p.r)("queryGeometry")],b.prototype,"readQueryGeometry",null),(0,i._)([(0,u.Cb)({type:y.Z,json:{write:!0}})],b.prototype,"spatialReference",void 0),(0,i._)([(0,h.c)("spatialReference")],b.prototype,"writeSpatialReference",null),(0,i._)([(0,u.Cb)({json:{write:!0}})],b.prototype,"transform",void 0),b=r=(0,i._)([(0,c.j)("esri.rest.support.FeatureSet")],b),b.prototype.toJSON.isDefaultToJSON=!0}}]);