"use strict";(self.webpackChunkscene_pro=self.webpackChunkscene_pro||[]).push([[60613],{99550:function(e,t,a){a.r(t),a.d(t,{default:function(){return Z}});var i,n,o=a(73440),s=a(43033),r=a(43254),l=a(88194),h=a(96711),d=a(79577),c=a(84060),p=a(93568),u=a(90403),y=a(17155),g=(a(61432),a(83850),a(48023)),m=a(66951),f=a(71354),b=a(60508),L=a(62197),w=a(38209),M=a(64246),C=a(3849);(n=i||(i={})).MULTIPLIER="multiplier",n.ABSOLUTE="absolute-value";var k=a(86494),T=a(30176),D=a(81766),N=a(78694),x=a(41305),v=a(83263),_=a(85330),I=a(3752),E=a(93295),R=a(71276),S=a(61861);let A=class extends((0,_.q)((0,v.h7)((0,I.M)((0,c.R)(w.Z))))){constructor(e){if(super(e),this.url=null,this.dataPreloadedInLocalCache=!1,this.initializationLinkChartConfig=null,this.membershipModified=!0,this._currentLinkChartConfig={layoutMode:"organic-standard"},this._graphTypeLookup=new Map,this.dataManager=null,this.knowledgeGraph=null,this.layers=new(r.Z.ofType(T.Z)),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map,this.linkChartExtent=new f.Z({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7}),this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.operationalLayerType="LinkChartLayer",this.sublayerIdsCache=new Map,this.tables=new(r.Z.ofType(T.Z)),this.type="link-chart",this.chronologicalAuxiliaryGraphics=null,this._originalInclusionList=e?.initializationInclusionModeDefinition,e?.dataPreloadedInLocalCache&&!e?.initializationInclusionModeDefinition)throw new l.Z("knowledge-graph:linkchart-layer-constructor","If creating a link chart composite layer and configured that data is already loaded in the cache, you must specify an inclusion list so the Composite Layer knows what records belong to it");this.addHandles((0,u.YP)((()=>this.layers.concat(this.tables)),((e,t)=>this._handleSublayersChange(e,t)),u.Z_))}normalizeCtorArgs(e){if(!e)return{};const{url:t,title:a,dataPreloadedInLocalCache:i,initializationLinkChartConfig:n}=e;return{url:t,title:a,dataPreloadedInLocalCache:i,initializationLinkChartConfig:n}}_initializeLayerProperties(e){if(!this.title&&this.url){const e=this.url.split("/");this.title=e[e.length-2]}const t=new Set;let a=[],i=[];if(e.inclusionModeDefinition&&(!e.inclusionModeDefinition.namedTypeDefinitions||e.inclusionModeDefinition.namedTypeDefinitions.size<1))throw new l.Z("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined");e.inclusionModeDefinition?.generateAllSublayers?(a=e.knowledgeGraph.dataModel.entityTypes??[],i=e.knowledgeGraph.dataModel.relationshipTypes??[]):e.inclusionModeDefinition?.namedTypeDefinitions&&e.inclusionModeDefinition?.namedTypeDefinitions.size>0?e.inclusionModeDefinition?.namedTypeDefinitions.forEach(((n,o)=>{const s=this._graphTypeLookup.get(o);if(!s)return h.Z.getLogger(this).warn(`A named type, ${o}, was in the inclusion list that wasn't in the data model and will be removed`),void e.inclusionModeDefinition?.namedTypeDefinitions.delete(o);"relationship"===s.type?t.has(o)||(t.add(o),i.push(s)):"entity"===s.type?t.has(o)||(t.add(o),a.push(s)):(h.Z.getLogger(this).warn(`A named type, ${o}, was in the inclusion list that wasn't properly modeled and will be removed`),e.inclusionModeDefinition?.namedTypeDefinitions.delete(o))})):(a=e.knowledgeGraph.dataModel.entityTypes??[],i=e.knowledgeGraph.dataModel.relationshipTypes??[]);const n=new k.Q({knowledgeGraph:e.knowledgeGraph,inclusionModeDefinition:e.inclusionModeDefinition});this.knowledgeGraph=e.knowledgeGraph,this.memberEntityTypes=a,this.memberRelationshipTypes=i,this.dataManager=n}load(e){const t=async()=>{const e=[],t=[];this.loadLayerAssumingLocalCache(),this._layersLoadedFromAuthoritativeItem()||await(0,D.xk)(this),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach((e=>{e.useAllData=!1})),await this._initializeDiagram(),this.layers.forEach((a=>{t.push(a.refreshCachedQueryEngine()),e.push(new Promise((e=>{a.on("layerview-create",(()=>{e(null)}))})))})),this.tables.forEach((e=>{t.push(e.refreshCachedQueryEngine())})),await Promise.all(t)};return this.addResolvingPromise(new Promise((a=>{(0,S.fetchKnowledgeGraph)(this.url).then((async i=>{i.dataModel.entityTypes?.forEach((e=>{e.name&&this._graphTypeLookup.set(e.name,e)})),i.dataModel.relationshipTypes?.forEach((e=>{e.name&&this._graphTypeLookup.set(e.name,e)}));const n=this.linkChart?.linkChartProperties;if(n?.originIdOf("entitiesUrl")===m.s3.LINK_CHART&&(this.membershipModified=!1,this._originalInclusionList=await s.AX.fetchAndConvertSerializedLinkChart({entitiesUrl:n?.entitiesUrl,relationshipsUrl:n?.relationshipsUrl}),this._alignLayersDataModelAndInclusionDefinition(i.dataModel),this.initializationLinkChartConfig={layoutSettings:n?.layoutSettings??void 0,layoutMode:(0,x.no)(n.layoutType)}),this._initializeLayerProperties({knowledgeGraph:i,inclusionModeDefinition:this._originalInclusionList}),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.size||(this.dataManager.inclusionModeDefinition={generateAllSublayers:!1,namedTypeDefinitions:new Map},this.dataManager.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(e.name,{useAllData:!0})})),this.dataManager.knowledgeGraph.dataModel.relationshipTypes?.forEach((e=>{e.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(e.name,{useAllData:!0})}))),this.dataPreloadedInLocalCache){const e=N.Z.getInstance();for(const[t,a]of this.dataManager.inclusionModeDefinition?.namedTypeDefinitions??[])for(const i of a.members?.values()??[]){const a=e.readFromStoreById(`${t}__${i.id}`);a&&(0,d.s1)(this.dataManager.sublayerCaches,t,(()=>new Map)).set(i.id,a)}await t()}else{const a="geographic-organic-standard"===this.initializationLinkChartConfig?.layoutMode;this.addResolvingPromise(this.dataManager.refreshCacheContent(void 0,!1,a,!0).then((async()=>{(0,p.k_)(e),await t()})))}a(null)}))}))),Promise.resolve(this)}set initializationInclusionModeDefinition(e){"loaded"!==this.loadStatus&&"failed"!==this.loadStatus?this._set("initializationInclusionModeDefinition",e):h.Z.getLogger(this).error("#initializationInclusionModeDefinition","initializationInclusionModeDefinition cannot be changed after the layer is loaded.")}get linkChart(){return this.parent}async addRecords(e,t){let a=[];t?.cascadeAddRelationshipEndNodes&&this.dataManager.knowledgeGraph.dataModel&&(a=await(0,x.bv)(e,this.dataManager.knowledgeGraph));const i=e.concat(a).filter((e=>!this.sublayerIdsCache.get(e.typeName)?.has(e.id)));i.length>0&&(this.membershipModified=!0),await this._handleNewRecords(i,t)}async createSublayerForNamedType(e){await this.load();const t=this._graphTypeLookup.get(e);if(!t)throw new l.Z("knowledge-graph:missing-type","The specified type does not exist in the knowledge graph.");if(this.dataManager.sublayerCaches.has(e))throw new l.Z("knowledge-graph:duplicate-type","The specified type already exists as a sublayer.");this.dataManager.sublayerCaches.set(e,new Map),(0,d.s1)(this.sublayerIdsCache,e,(()=>new Set));const a=this._createSublayer(t);return"entity"===t.type?this.dataManager.entityTypeNames.add(e):this.dataManager.relationshipTypeNames.add(e),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.set(e,{useAllData:!1,members:new Map}),a.geometryType?this.layers.push(a):this.tables.push(a),await(0,D.xk)(this,[e]),this._refreshNamedTypes(),a}async removeRecords(e,{cascadeRemoveRelationships:t=!0,recalculateLayout:a=!1,overrideMembershipCheck:i=!1}={cascadeRemoveRelationships:!0,recalculateLayout:!1,overrideMembershipCheck:!1}){let n=[];for(const t of e)(i||!1===this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(t.typeName)?.useAllData&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(t.typeName)?.members?.has(t.id))&&n.push(t);if(t){const e=new Set,t=[];for(const t of n)if(this.dataManager.nodeConnectionsLookup.has(t.id))for(const a of this.dataManager.nodeConnectionsLookup.get(t.id))e.add(a);for(const a of e)if(this.dataManager.memberIdTypeLookup.has(a))for(const e of this.dataManager.memberIdTypeLookup.get(a))this.dataManager.relationshipTypeNames.has(e)&&t.push({id:a,typeName:e});n=n.concat(t)}this.dataManager.removeFromLayer(n);for(const e of n)this.sublayerIdsCache.get(e.typeName)?.delete(e.id),this.dataManager.relationshipTypeNames.has(e.typeName)?this.relationshipLinkChartDiagramLookup.delete(e.id):this.entityLinkChartDiagramLookup.delete(e.id);const o=a?void 0:this.getCurrentNodeLocations();await this._calculateLayoutWithSublayerTimeInfo(this._currentLinkChartConfig.layoutMode,{layoutSettings:this._currentLinkChartConfig.layoutSettings,lockedNodeLocations:o}),n.length>0&&(this.membershipModified=!0);const s=[];return this.layers.forEach((e=>{s.push(e.refreshCachedQueryEngine())})),await Promise.all(s),this._refreshNamedTypes(),n}async expand(e,t){let a=[];try{const i=await this.dataManager.getConnectedRecordIds(e,t?.relationshipTypeNames,t);a=i.filter((e=>!this.sublayerIdsCache.get(e.typeName)?.has(e.id))),await this._handleNewRecords(a,t),i.length>0&&(this.membershipModified=!0),(0,p.k_)(t?.signal)}catch(e){throw(0,p.D_)(e)&&a.length>0&&await this.removeRecords(a,{overrideMembershipCheck:!0}),e}return{records:a}}loadLayerAssumingLocalCache(){const e=[...this.memberRelationshipTypes,...this.memberEntityTypes];this.layers.length||this.originIdOf("tables")===m.s3.DEFAULTS?this.originIdOf("layers")===m.s3.DEFAULTS?this._createSublayers(e,this.layers,(e=>!!e.geometryType)):this._updateSublayers(e,this.layers):this.layers=new r.Z,this.tables.length||this.originIdOf("layers")===m.s3.DEFAULTS?this.originIdOf("tables")===m.s3.DEFAULTS?this._createSublayers(e,this.tables,(e=>!e.geometryType)):this._updateSublayers(e,this.tables):this.tables=new r.Z,this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach(((e,t)=>{const a=(0,d.s1)(this.sublayerIdsCache,t,(()=>new Set));e.members?.forEach((({id:e,linkChartLocation:i})=>{if(a.add(e),i){const a="coords"in i&&"lengths"in i?i:(0,M.GH)(i);this.dataManager.relationshipTypeNames.has(t)?this.relationshipLinkChartDiagramLookup.set(e,a):this.entityLinkChartDiagramLookup.set(e,a)}}))}))}async calculateLinkChartLayout(e="organic-standard",t){const a=[],i=[],n=[];this.dataManager.sublayerCaches.forEach(((e,t)=>{this.dataManager.entityTypeNames.has(t)?e.forEach((e=>{a.push({typeName:t,feature:e})})):this.dataManager.relationshipTypeNames.has(t)&&e.forEach((e=>{i.push({typeName:t,feature:e})}))})),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map;const o=new Map,s=new Map,r=new Map,c=new Map,u=new Uint8Array(a.length),y=new Float64Array(a.length),g=new Float64Array(a.length),m=new Float64Array(a.length),w=new Float64Array(a.length),k=new Uint32Array(i.length),T=new Uint32Array(i.length),D=new Float64Array(i.length),N=new Float64Array(i.length),x=[];let v=!1;const _=new f.Z({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7});let I,E="organic-standard",S=0,A=0;const Z=R.Dx.apply;switch(E="geographic-organic-standard"===e?"organic-standard":e,E){case"organic-standard":I=R.BI.apply;break;case"organic-community":I=R.L2.apply;break;case"hierarchical-bottom-to-top":I=R.Bc.apply;break;case"radial-root-centric":I=R.uc.apply;break;case"tree-left-to-right":I=R.Yw.apply;break;default:I=R.cu.apply}let z=!1;a.forEach((({typeName:a,feature:i})=>{if("chronological-mono-timeline"!==e&&"chronological-multi-timeline"!==e&&t?.lockedNodeLocations?.has(i.attributes[C.mR])){"geographic-organic-standard"===e&&this.dataManager.geographicLookup.has(a)?u[S]=R.iz.IsGeographic:u[S]=R.iz.None;const n=t.lockedNodeLocations.get(i.attributes[C.mR]);y[S]=n.x,g[S]=n.y}else if("geographic-organic-standard"===e&&this.dataManager.geographicLookup.has(a)){u[S]=R.iz.IsGeographic;let e=null;const t=i.attributes[this.dataManager.geographicLookup.get(a).name],n=this.dataManager.geographicLookup.get(a)?.geometryType;switch(n){case"esriGeometryPoint":y[S]=t?.x,g[S]=t?.y;break;case"esriGeometryPolygon":e=t?.centroid,null!=e?.x&&null!=e?.y?(y[S]=e.x,g[S]=e.y):u[S]=R.iz.IsMovable;break;case"esriGeometryPolyline":case"esriGeometryMultipoint":e=t?.extent?.center,null!=e?.x&&null!=e?.y?(y[S]=e.x,g[S]=e.y):u[S]=R.iz.IsMovable;break;default:u[S]=R.iz.IsMovable}(null==y[S]||null==g[S]||Number.isNaN(y[S])||Number.isNaN(g[S]))&&(u[S]=R.iz.IsMovable,y[S]=0,g[S]=0)}else if("chronological-mono-timeline"===e||"chronological-multi-timeline"===e){!z&&t?.lockedNodeLocations?.has(i.attributes[C.mR])&&(z=!0);const e=t?.timeInfoByTypeName?.get(a),n=e?.startField,o=n&&e?.startField?i.attributes[n]:null;m[S]=o?new Date(o).getTime():NaN;const s=e?.endField,r=s&&e?.endField?i.attributes[s]:null;w[S]=r?new Date(r).getTime():NaN,y[S]=0,g[S]=0,u[S]=R.iz.IsMovable}else u[S]=R.iz.IsMovable,y[S]=0,g[S]=0;c.set(i.attributes[C.mR],S),x[S]={feature:i,typeName:a},S++})),z&&h.Z.getLogger(this).warn("Locked node locations are not supported for chronological layout at this time.  Requested node locations were ignored");let G=!1;const F=new Map;i.forEach((a=>{const i=a.feature.attributes[C.TY],o=a.feature.attributes[C.l6],s=c.get(i),r=c.get(o),l=t?.timeInfoByTypeName?.get(a.typeName),h=t?.timeInfoByTypeName?l?.startField:null,d=h?a.feature.attributes[h]:null,p=l?.endField,u=p?a.feature.attributes[p]:null;if(void 0!==s&&void 0!==r){let t=i+"-"+o;"chronological-mono-timeline"!==e&&"chronological-multi-timeline"!==e||(t=t+"-"+d+"-"+u);const l=F.get(t),h=l?.has(a.typeName);h||(k[A]=s,T[A]=r,"chronological-mono-timeline"!==e&&"chronological-multi-timeline"!==e||(D[A]=d?new Date(d).getTime():NaN,N[A]=u?new Date(u).getTime():NaN),void 0===l?F.set(t,new Map([[a.typeName,A]])):l.set(a.typeName,A),A++),n.push(a)}else G=!0,this.relationshipLinkChartDiagramLookup.set(i,null)})),G&&h.Z.getLogger(this).warn("A relationship is a member of this layer that has either origin or destination entity nodes that are not members. The diagram geometry will be set to null");const P=this._validateOrganicLayoutSettings(e,t?.layoutSettings?.organicLayoutSettings),O=this._convertValidatedOrganicSettingsToCalculationSettings(P);await(0,R.zD)();let B=R.gQ.Error,U=null;if("chronological-mono-timeline"===e||"chronological-multi-timeline"===e){let a;({status:B,links:U,graphics:a}=Z((()=>t?.signal?.aborted??!1),u,y,g,m,w,k.subarray(0,A),T.subarray(0,A),D.subarray(0,A),N.subarray(0,A),"chronological-multi-timeline"===e,t?.layoutSettings?.chronologicalLayoutSettings)),B===R.gQ.Success&&(this.chronologicalAuxiliaryGraphics=a)}else({status:B,links:U}=I((()=>t?.signal?.aborted??!1),u,y,g,k.subarray(0,A),T.subarray(0,A),O.computationBudgetTime,O.idealEdgeLengthMultiplier,O.repulsionRadiusMultiplier));if((0,p.k_)(t?.signal),B===R.gQ.Error)throw new l.Z("knowledge-graph:layout-failed","Attempting to arrange the records in the specified layout failed");if(B===R.gQ.Canceled)throw(0,p.zE)();for(let e=0;e<x.length;e++){if(g[e]>84.9999?g[e]=84.9999:g[e]<-84.9999&&(g[e]=-84.9999),y[e]>179.9999?y[e]=179.9999:y[e]<-179.9999&&(y[e]=-179.9999),x[e].feature.attributes[C.xD]=new b.Z(y[e],g[e]),o.has(x[e].typeName)){o.get(x[e].typeName)?.set(x[e].feature.attributes[C.mR],x[e].feature)}else{const t=new Map;t.set(x[e].feature.attributes[C.mR],x[e].feature),o.set(x[e].typeName,t)}r.set(x[e].feature.attributes[C.mR],x[e].feature);const t=(0,M.GH)(x[e].feature.attributes[C.xD]);this.entityLinkChartDiagramLookup.set(x[e].feature.attributes[C.mR],x[e].feature.attributes[C.xD]?t:null);const a=(0,d.s1)(this.dataManager.inclusionModeDefinition.namedTypeDefinitions,x[e].typeName,(()=>({useAllData:!1,members:new Map})));(0,d.s1)(a.members,x[e].feature.attributes[C.mR],(()=>({id:x[e].feature.attributes[C.mR],linkChartLocation:void 0}))).linkChartLocation=x[e].feature.attributes[C.xD];const{x:i,y:n}=x[e].feature.attributes[C.xD];if(v)_.xmin=Math.min(_.xmin,i),_.xmax=Math.max(_.xmax,i),_.ymin=Math.min(_.ymin,n),_.ymax=Math.max(_.ymax,n);else{const e=1e-7;_.xmin=i-e,_.xmax=i+e,_.ymin=n-e,_.ymax=n+e,v=!0}}if(this.linkChartExtent.xmin=_.xmin,this.linkChartExtent.xmax=_.xmax,this.linkChartExtent.ymin=_.ymin,this.linkChartExtent.ymax=_.ymax,!U)throw new l.Z("knowledge-graph:layout-failed","Attempting to retrieve link geometry from diagram engine failed");const Q=new Map,j=new Map,H=new Map,Y=new Set;for(let a=0;a<n.length;a++){const i=[],o=n[a],l=o.feature.attributes[C.TY],p=o.feature.attributes[C.l6];let u=l+"-"+p;if("chronological-mono-timeline"===e||"chronological-multi-timeline"===e){const e=t?.timeInfoByTypeName?.get(o.typeName),a=t?.timeInfoByTypeName?e?.startField:null,i=a?o.feature.attributes[a]:null,n=e?.endField;u+="-"+i+"-"+(n?o.feature.attributes[n]:null)}const y=F.get(u).get(o.typeName),g=0===y?0:U?.vertexEndIndex[y-1];if(!Y.has(y)){if(Y.add(y),U.types[y]===R.Un.Recursive){const e=[U.vertices[2*g],U.vertices[2*g+1]],t=[U.vertices[2*(g+1)],U.vertices[2*(g+1)+1]],a=[.5*(e[0]+t[0]),.5*(e[1]+t[1])],n=[a[0]-e[0],a[1]-e[1]],o=[a[0]+n[1],a[1]-n[0]],s=[a[0]-n[1],a[1]+n[0]];i.push(e),i.push(o),i.push(t),i.push(s),i.push(e)}else{if(U.types[y]!==R.Un.Regular){h.Z.getLogger(this).warn("A relationship generated an unsupported link geometry type.  It will not be rendered");continue}for(let e=g;e<U.vertexEndIndex[y];e++)i.push([U.vertices[2*e],U.vertices[2*e+1]])}if("chronological-mono-timeline"!==e&&"chronological-multi-timeline"!==e){const e=x[c.get(l)]?.feature.attributes[C.xD],t=x[c.get(p)]?.feature.attributes[C.xD];i[0][0]===e.x&&i[0][1]===e.y||(i[0]=[e.x,e.y]),i[i.length-1][0]===t.x&&i[i.length-1][1]===t.y||(i[i.length-1]=[t.x,t.y])}for(let e=1;e<i.length-1;e++)i[e][1]>85.5?i[e][1]=85.5:i[e][1]<-85.5&&(i[e][1]=-85.5),i[e][0]>179.9999?i[e][0]=179.9999:i[e][0]<-179.9999&&(i[e][0]=-179.9999);Q.has(u)?Q.get(u).push(i):Q.set(u,[i])}const m=Q.get(u);j.has(u)||(j.set(u,new Map),H.set(u,new Map));const f=j.get(u),b=H.get(u);f.has(o.typeName)||(f.set(o.typeName,m.shift()),b.set(o.typeName,0));const w=f.get(o.typeName);b.set(o.typeName,b.get(o.typeName)+1);const k=new L.Z({paths:[w]});if(o.feature.attributes[C.xD]=k,s.has(o.typeName)){s.get(o.typeName)?.set(o.feature.attributes[C.mR],o.feature)}else{const e=new Map;e.set(o.feature.attributes[C.mR],o.feature),s.set(o.typeName,e)}r.set(o.feature.attributes[C.mR],o.feature);const T=(0,M.GH)(o.feature.attributes[C.xD]);this.relationshipLinkChartDiagramLookup.set(o.feature.attributes[C.mR],o.feature.attributes[C.xD]?T:null);const D=(0,d.s1)(this.dataManager.inclusionModeDefinition.namedTypeDefinitions,o.typeName,(()=>({useAllData:!1,members:new Map})));(0,d.s1)(D.members,o.feature.attributes[C.mR],(()=>({id:o.feature.attributes[C.mR],linkChartLocation:void 0}))).linkChartLocation=T}for(const e of n)e.feature.attributes[C._P]=H.get(e.feature.attributes[C.TY]+"-"+e.feature.attributes[C.l6])?.get(e.typeName)??null;return this._currentLinkChartConfig={layoutMode:e,layoutSettings:t?.layoutSettings?.clone()},{nodes:o,links:s,idMap:r}}async applyNewLinkChartLayout(e="organic-standard",t){const a=[];await this._calculateLayoutWithSublayerTimeInfo(e,t),this.layers.forEach((e=>{a.push(e.refreshCachedQueryEngine())})),this.membershipModified=!0,await Promise.all(a),this._refreshNamedTypes()}getCurrentNodeLocations(){const e=new Map;for(const[t,a]of this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.entries()??[])this.dataManager.relationshipTypeNames.has(t)||a?.members?.forEach((t=>{const a=t.linkChartLocation;let i;const n=t.id;a&&(i="x"in a?{x:a.x,y:a.y}:{x:a.coords[0],y:a.coords[1]},e.set(n,new b.Z({x:i.x,y:i.y})))}));return e}async refreshLinkChartCache(e){await this.dataManager.refreshCacheContent(e);const t=[];this.layers.forEach((e=>{t.push(e.refreshCachedQueryEngine())})),await Promise.all(t),this._refreshNamedTypes()}async connectBetweenEntities(e,t){if(!e.length)return{records:[]};let a=[];try{let i=[];for(const e of this.dataManager.relationshipTypeNames){const t=this.sublayerIdsCache.get(e);t&&(i=i.concat(Array.from(t.keys())))}a=await this.dataManager.getRelationshipsBetweenNodes(e,i,t),await this._handleNewRecords(a,t),(0,p.k_)(t)}catch(e){throw(0,p.D_)(e)&&this.removeRecords(a),e}return{records:a}}async connectFromEntities(e,t){if(!e.length)return{records:[]};let a=[];try{let i=[];for(const e of this.dataManager.relationshipTypeNames){const t=this.sublayerIdsCache.get(e);t&&(i=i.concat(Array.from(t.keys())))}let n=[];for(const e of this.dataManager.entityTypeNames){const t=this.sublayerIdsCache.get(e);t&&(n=n.concat(Array.from(t)))}a=await this.dataManager.getRelationshipsFromNodes(e,n,i,t),await this._handleNewRecords(a,t),a.length>0&&(this.membershipModified=!0),(0,p.k_)(t)}catch(e){throw(0,p.D_)(e)&&this.removeRecords(a),e}return{records:a}}getCurrentLayout(){return this._currentLinkChartConfig.layoutMode}async _calculateLayoutWithSublayerTimeInfo(e="organic-standard",t){const a=new Map;this.layers.forEach((e=>{a.set(e.objectType.name,e.timeInfo)})),await this.calculateLinkChartLayout(e,{timeInfoByTypeName:a,...t}),this.linkChart?.handleChronologicalOverlay()}async _handleNewRecords(e,t){const a=new Set,i=[],n=this.layers.concat(this.tables);for(const t of e)this._graphTypeLookup.has(t.typeName)&&(!1===n.some((e=>e.objectType.name===t.typeName))&&(this.dataManager.sublayerCaches.set(t.typeName,new Map),a.add(t.typeName)),(0,d.s1)(this.sublayerIdsCache,t.typeName,(()=>new Set)).add(t.id),i.push(t));this.dataManager.addToLayer(i);for(const e of a){const t=this._graphTypeLookup.get(e);if(t){const a=this._createSublayer(t);"entity"===t.type?this.dataManager.entityTypeNames.add(e):this.dataManager.relationshipTypeNames.add(e),a.geometryType?this.layers.push(a):this.tables.push(a)}}await(0,D.xk)(this,Array.from(a),t),await this.dataManager.refreshCacheContent(e.map((e=>e.id)),void 0,void 0,void 0,t);const o={layoutSettings:this._currentLinkChartConfig.layoutSettings,lockedNodeLocations:new Map};for(const[e,t]of this.entityLinkChartDiagramLookup.entries())t&&o.lockedNodeLocations.set(e,new b.Z(t.coords[0],t.coords[1]));await this.applyNewLinkChartLayout(this._currentLinkChartConfig.layoutMode,o)}_createSublayers(e,t,a){e.forEach((e=>{const i=this._createSublayer(e);a(i)&&t.push(i),this._updateSublayerCaches(e)}))}_updateSublayers(e,t){t.forEach((t=>{t.parentCompositeLayer=this;const a=e.find((e=>e.type===t.graphType&&e.name===t.graphTypeName));a&&(t.objectType=a,t.read({title:a.name},{origin:"service"}),this._updateSublayerCaches(a))}))}_updateSublayerCaches({name:e}){if(!e)return;const t=this.dataManager.sublayerCaches;t.has(e)||t.set(e,new Map)}_layersLoadedFromAuthoritativeItem(){const e=this.originIdOf("layers");return e>=m.s3.PORTAL_ITEM&&e<m.s3.USER}async _initializeDiagram(){this.initializationLinkChartConfig?this.initializationLinkChartConfig.doNotRecalculateLayout?(this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach(((e,t)=>{e?.members?.forEach((e=>{const a=e.linkChartLocation;let i;const n=e.id;if(!a)return;i="x"in a?{x:a.x,y:a.y}:{x:a.coords[0],y:a.coords[1]};const o=(0,M.GH)(i);this.dataManager.relationshipTypeNames.has(t)?this.relationshipLinkChartDiagramLookup.set(n,o):this.entityLinkChartDiagramLookup.set(n,o),this.linkChartExtent.xmin>i.x&&(this.linkChartExtent.xmin=i.x),this.linkChartExtent.xmax<i.x&&(this.linkChartExtent.xmax=i.x),this.linkChartExtent.ymin>i.y&&(this.linkChartExtent.ymin=i.y),this.linkChartExtent.ymax<i.y&&(this.linkChartExtent.ymax=i.y)}))})),this.memberRelationshipTypes.forEach((e=>{e.name&&this.dataManager.sublayerCaches.get(e.name)?.forEach((e=>{const t=this.relationshipLinkChartDiagramLookup.get(e.attributes[C.TY]),a=this.relationshipLinkChartDiagramLookup.get(e.attributes[C.l6]);if(t&&a){const i=(0,M.GH)(new L.Z({paths:[[[t.coords[0],t.coords[1]],[a.coords[0],a.coords[1]]]]}));this.relationshipLinkChartDiagramLookup.set(e.attributes[C.mR],i)}else this.relationshipLinkChartDiagramLookup.set(e.attributes[C.mR],null)}))}))):await this._calculateLayoutWithSublayerTimeInfo(this.initializationLinkChartConfig.layoutMode,{lockedNodeLocations:this.getCurrentNodeLocations(),...this.initializationLinkChartConfig||{}}):await this._calculateLayoutWithSublayerTimeInfo("organic-standard",{lockedNodeLocations:this.getCurrentNodeLocations()})}_refreshNamedTypes(){for(const e of this.layers)e.emit("refresh",{dataChanged:!0});for(const e of this.tables)e.emit("refresh",{dataChanged:!0})}_validateOrganicLayoutSettings(e,t){const a=e=>"number"==typeof e&&!isNaN(e),n=e=>a(e)&&e>=0,o={};if(!new Set(["organic-standard","organic-community","geographic-organic-standard","chronological-multi-timeline","chronological-mono-timeline"]).has(e)||!t)return o;const{computationBudgetTime:s,autoRepulsionRadius:r,repulsionRadiusMultiplier:l,absoluteIdealEdgeLength:d,multiplicativeIdealEdgeLength:c,idealEdgeLengthType:p}=t;return(e=>a(e)&&e>=1)(s)?o.computationBudgetTime=s:s&&h.Z.getLogger(this).warn("Invalid layout computationBudgetTime setting, will revert to default setting"),o.autoRepulsionRadius=r,!r&&(e=>a(e)&&e>=1)(l)?o.repulsionRadiusMultiplier=l:r||(o.autoRepulsionRadius=!0,h.Z.getLogger(this).warn("Invalid layout repulsionRadiusMultiplier setting, will revert to default setting")),"geographic-organic-standard"===e&&((e=>Object.values(i).includes(e))(p)?o.idealEdgeLengthType=p:void 0!==p&&h.Z.getLogger(this).warn('Invalid layout idealEdgeLengthType setting, will revert to "multiplier" setting'),"absolute-value"===p&&n(d)?o.absoluteIdealEdgeLength=d:"absolute-value"===p&&void 0!==d?h.Z.getLogger(this).warn("Invalid layout idealEdgeLength setting, will revert to default setting"):"multiplier"===p&&n(c)?o.multiplicativeIdealEdgeLength=c:"multiplier"===p&&void 0!==c&&h.Z.getLogger(this).warn("Invalid layout idealEdgeLength setting, will revert to default setting")),o}_convertValidatedOrganicSettingsToCalculationSettings(e){let t=e.idealEdgeLengthType===i.ABSOLUTE?e.absoluteIdealEdgeLength:e.multiplicativeIdealEdgeLength;return e.idealEdgeLengthType===i.ABSOLUTE&&(void 0===t?t=-1:t*=-1),{computationBudgetTime:e.computationBudgetTime??void 0,repulsionRadiusMultiplier:e.repulsionRadiusMultiplier&&!e.autoRepulsionRadius?e.repulsionRadiusMultiplier:void 0,idealEdgeLengthMultiplier:t}}_createSublayer(e){return new T.Z({objectType:e,parentCompositeLayer:this,graphType:e.type})}_handleSublayersChange(e,t){t&&(t.forEach((e=>{e.parent=null})),this.removeHandles("sublayers-owner")),e&&(e.forEach((e=>{e.parent=this})),this.addHandles([e.on("after-add",(({item:e})=>{e.parent=this})),e.on("after-remove",(({item:e})=>{e.parent=null}))],"sublayers-owner"))}_alignLayersDataModelAndInclusionDefinition(e){const t=new Set((e.entityTypes??[]).map((e=>e.name)).concat((e.relationshipTypes??[]).map((e=>e.name)))),a=new Set((e.entityTypes??[]).map((e=>e.name))),i=new Set((e.relationshipTypes??[]).map((e=>e.name)));if(this.layers){for(const e of this.layers)!e.graphType&&t.has(e.graphTypeName)&&(e.graphType=a.has(e.graphTypeName)?"entity":"relationship");const e=this.layers.filter((e=>t.has(e.graphTypeName)&&("entity"===e.graphType?a.has(e.graphTypeName):i.has(e.graphTypeName))));this.setAtOrigin("layers",e,(0,m.x3)(this.originIdOf("layers")))}else this.layers=new r.Z;if(this.layers&&this._originalInclusionList){const e=new Set(this._originalInclusionList.namedTypeDefinitions.keys()),t=this.tables?.map((e=>e.graphTypeName))??[],a=this.layers.map((e=>e.graphTypeName)).concat(t);for(const t of a)e.has(t)||this._originalInclusionList.namedTypeDefinitions.set(t,{useAllData:!1,members:new Map});const i=[];for(const e of this._originalInclusionList.namedTypeDefinitions.keys())a.includes(e)||(h.Z.getLogger(this).warn(`A named type, ${e}, was in the serialized feature collection but did not have a sublayer config in the item, so will be removed`),i.push(e));for(const e of i)this._originalInclusionList.namedTypeDefinitions.delete(e)}}};(0,o._)([(0,y.Cb)(E.HQ)],A.prototype,"url",void 0),(0,o._)([(0,y.Cb)()],A.prototype,"dataPreloadedInLocalCache",void 0),(0,o._)([(0,y.Cb)()],A.prototype,"initializationLinkChartConfig",void 0),(0,o._)([(0,y.Cb)()],A.prototype,"membershipModified",void 0),(0,o._)([(0,y.Cb)()],A.prototype,"dataManager",void 0),(0,o._)([(0,y.Cb)()],A.prototype,"initializationInclusionModeDefinition",null),(0,o._)([(0,y.Cb)()],A.prototype,"knowledgeGraph",void 0),(0,o._)([(0,y.Cb)({type:r.Z.ofType(T.Z),json:{write:{ignoreOrigin:!0}}})],A.prototype,"layers",void 0),(0,o._)([(0,y.Cb)({readOnly:!0})],A.prototype,"linkChart",null),(0,o._)([(0,y.Cb)()],A.prototype,"entityLinkChartDiagramLookup",void 0),(0,o._)([(0,y.Cb)()],A.prototype,"relationshipLinkChartDiagramLookup",void 0),(0,o._)([(0,y.Cb)()],A.prototype,"linkChartExtent",void 0),(0,o._)([(0,y.Cb)()],A.prototype,"memberEntityTypes",void 0),(0,o._)([(0,y.Cb)()],A.prototype,"memberRelationshipTypes",void 0),(0,o._)([(0,y.Cb)({type:["LinkChartLayer"]})],A.prototype,"operationalLayerType",void 0),(0,o._)([(0,y.Cb)()],A.prototype,"sublayerIdsCache",void 0),(0,o._)([(0,y.Cb)({type:r.Z.ofType(T.Z),json:{write:{ignoreOrigin:!0}}})],A.prototype,"tables",void 0),(0,o._)([(0,y.Cb)({json:{read:!1}})],A.prototype,"type",void 0),(0,o._)([(0,y.Cb)({json:{read:!1}})],A.prototype,"chronologicalAuxiliaryGraphics",void 0),A=(0,o._)([(0,g.j)("esri.layers.LinkChartLayer")],A);const Z=A}}]);