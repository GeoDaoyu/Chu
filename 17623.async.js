"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[17623,66882],{17623:function(e,r,t){t.d(r,{OverrideHelper:function(){return f}});var i=t(53147),s=t(92643),a=t(28947),o=t(299),n=t(15065),c=t(61421),l=t(66882);const p=e=>{if(!e)return[0,0,0,0];const{r:r,g:t,b:i,a:s}=e;return[r,t,i,255*s]};class f{static findApplicableOverrides(e,r,t){if(e&&r){if(e.primitiveName){let i=!1;for(const r of t)if(r.primitiveName===e.primitiveName){i=!0;break}if(!i)for(const i of r)i.primitiveName===e.primitiveName&&t.push(i)}switch(e.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":if(e.effects)for(const i of e.effects)f.findApplicableOverrides(i,r,t);if(e.symbolLayers)for(const i of e.symbolLayers)f.findApplicableOverrides(i,r,t);break;case"CIMTextSymbol":break;case"CIMSolidStroke":case"CIMPictureStroke":case"CIMGradientStroke":case"CIMSolidFill":case"CIMPictureFill":case"CIMHatchFill":case"CIMGradientFill":case"CIMVectorMarker":case"CIMCharacterMarker":case"CIMPictureMarker":if(e.effects)for(const i of e.effects)f.findApplicableOverrides(i,r,t);if(e.markerPlacement&&f.findApplicableOverrides(e.markerPlacement,r,t),"CIMVectorMarker"===e.type){if(e.markerGraphics)for(const i of e.markerGraphics)f.findApplicableOverrides(i,r,t),f.findApplicableOverrides(i.symbol,r,t)}else"CIMCharacterMarker"===e.type?f.findApplicableOverrides(e.symbol,r,t):"CIMHatchFill"===e.type?f.findApplicableOverrides(e.lineSymbol,r,t):"CIMPictureMarker"===e.type&&f.findApplicableOverrides(e.animatedSymbolProperties,r,t)}}}static findEffectOverrides(e,r){if(!e)return null;if("CIMGeometricEffectDashes"===e.type&&(0,c.hU)(e),!r||!e.primitiveName)return{type:"cim-effect-param",effect:e,overrides:[]};const t=(0,c.Ml)(e),i=e.primitiveName,s=[];for(const e of r)e.primitiveName===i&&s.push((0,c.Ml)(e));return{type:"cim-effect-param",effect:t,overrides:(0,c.Ul)(s)}}static async resolveSymbolOverrides(e,r,t,i,s,n,l){if(!e?.symbol)return null;let{symbol:p,primitiveOverrides:m}=e;const u=!!m;if(!u&&!i)return p;p=(0,a.d9)(p),m=(0,a.d9)(m);let y=!0;if(r||(r={attributes:{}},y=!1),u){if(y||(m=m.filter((e=>!e.valueExpressionInfo?.expression.includes("$feature")))),l||(m=m.filter((e=>!e.valueExpressionInfo?.expression.includes("$view")))),m.length>0){const e=(0,c.Qf)(r.attributes),i={spatialReference:t,fields:e,geometryType:s};await f.createRenderExpressions(m,i),f.evaluateOverrides(m,r,s??"esriGeometryPoint",n,l,new o.Z(e))}f.applyOverrides(p,m)}return i&&f.applyDictionaryTextOverrides(p,r,i,null),p}static{this._expressionToRenderExpression=new Map}static async createRenderExpressions(e,r){const t=[];for(const i of e){const e=i.valueExpressionInfo;if(!e||f._expressionToRenderExpression.has(e.expression))continue;const s=(0,n.Yi)(e.expression,r.spatialReference);t.push(s),s.then((r=>f._expressionToRenderExpression.set(e.expression,r)))}t.length>0&&await Promise.all(t)}static evaluateOverrides(e,r,t,i,a,o){const n={$view:{scale:a?.scale}};for(const a of e){a.value&&"object"==typeof a.value&&(0,s.jQ)(a.value)&&("Color"===a.propertyName||"StrokeColor"===a.propertyName)&&(a.value=p(a.value));const e=a.valueExpressionInfo;if(!e)continue;const c=f._expressionToRenderExpression.get(e.expression);c&&(a.value=(0,l.default)(c,r,n,t,o,i))}}static applyDictionaryTextOverrides(e,r,t,i,s="Normal"){if(e?.type)switch(e.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":case"CIMTextSymbol":{const a=e.symbolLayers;if(!a)return;for(const o of a)o&&"CIMVectorMarker"===o.type&&f.applyDictionaryTextOverrides(o,r,t,i,"CIMTextSymbol"===e.type?e.textCase:s)}break;case"CIMVectorMarker":{const s=e.markerGraphics;if(!s)return;for(const e of s)e&&f.applyDictionaryTextOverrides(e,r,t,i)}break;case"CIMMarkerGraphic":{const a=e.textString;if(a&&a.includes("[")){const o=(0,c.H1)(a,t);e.textString=(0,c.E_)(r,o,i,s)}}}}static applyOverrides(e,r,t,i){if(e.primitiveName)for(const s of r)if(s.primitiveName===e.primitiveName){const r=(0,c.Le)(s.propertyName);if(i&&i.push({cim:e,nocapPropertyName:r,value:e[r]}),t){let r=!1;for(const i of t)i.primitiveName===e.primitiveName&&(r=!0);r||t.push(s)}null!=s.value&&(e[r]=s.value)}switch(e.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":if(e.effects)for(const s of e.effects)f.applyOverrides(s,r,t,i);if(e.symbolLayers)for(const s of e.symbolLayers)f.applyOverrides(s,r,t,i);break;case"CIMTextSymbol":break;case"CIMSolidStroke":case"CIMSolidFill":case"CIMVectorMarker":if(e.effects)for(const s of e.effects)f.applyOverrides(s,r,t,i);if("CIMVectorMarker"===e.type&&e.markerGraphics)for(const s of e.markerGraphics)f.applyOverrides(s,r,t,i),f.applyOverrides(s.symbol,r,t,i)}}static restoreOverrides(e){for(const r of e)r.cim[r.nocapPropertyName]=r.value}static buildOverrideKey(e){let r="";for(const t of e)void 0!==t.value&&(r+=`${t.primitiveName}${t.propertyName}${JSON.stringify(t.value)}`);return r}static toValue(e,r){if("DashTemplate"===e)return r.split(" ").map((e=>Number(e)));if("Color"===e){const e=new i.Z(r).toRgba();return e[3]*=255,e}return r}}},66882:function(e,r,t){t.d(r,{default:function(){return o}});var i=t(88194),s=t(96711),a=t(96610);function o(e,r,t,i,a,o){if(null==e)return null;const n=e.references("geometry")&&o?c(r,i,o):r,l=e.repurposeFeature(n,a);try{return e.evaluate(l,t)}catch(e){return s.Z.getLogger("esri.views.2d.support.arcadeOnDemand").warn("Feature arcade evaluation failed:",e),null}}const n=new Map;function c(e,r,t){const{transform:o,hasZ:c,hasM:l}=t;n.has(r)||n.set(r,function(e){const r={};switch(e){case"esriGeometryPoint":return(e,t,i,s)=>(0,a.U1)(t,r,e,i,s);case"esriGeometryPolygon":return(e,t,i,s)=>(0,a.Ie)(t,r,e,i,s);case"esriGeometryPolyline":return(e,t,i,s)=>(0,a.G6)(t,r,e,i,s);case"esriGeometryMultipoint":return(e,t,i,s)=>(0,a.J9)(t,r,e,i,s);default:return s.Z.getLogger("esri.views.2d.support.arcadeOnDemand").error(new i.Z("mapview-arcade",`Unable to handle geometryType: ${e}`)),e=>e}}(r));const p=n.get(r)(e.geometry,o,c,l);return{...e,geometry:p}}}}]);