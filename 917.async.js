"use strict";(self.webpackChunkscene_pro=self.webpackChunkscene_pro||[]).push([[917],{917:function(e,n,t){t.d(n,{$A:function(){return s},Ml:function(){return a},NM:function(){return o},i$:function(){return i}});var r=t(61432),c=t(32420);class o{constructor(e){this.data=e,this.type="encoded-mesh-texture",this.encoding=c.Ti.KTX2_ENCODING}}function s(e){return"encoded-mesh-texture"===e?.type}async function i(e){const n=new Blob([e]),t=await n.text();return JSON.parse(t)}async function a(e,n){if(n===c.Ti.KTX2_ENCODING)return new o(e);const t=new Blob([e],{type:n});let s=URL.createObjectURL(t);switch(n){case"image/jpeg":s+="#.jpg";break;case"image/png":s+="#.png"}const i=new Image;if((0,r.Z)("esri-iPhone"))return new Promise(((e,n)=>{const t=()=>{c(),e(i)},r=e=>{c(),n(e)},c=()=>{URL.revokeObjectURL(s),i.removeEventListener("load",t),i.removeEventListener("error",r)};i.addEventListener("load",t),i.addEventListener("error",r),i.src=s}));try{i.src=s,await i.decode()}catch(e){console.warn("Failed decoding HTMLImageElement")}return URL.revokeObjectURL(s),i}}}]);