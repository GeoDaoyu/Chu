"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[80479],{58426:function(e,t,i){i.d(t,{$c:function(){return m},Hg:function(){return y},jW:function(){return d},xb:function(){return b}});var r=i(70880),s=i(43254),o=i(22018);const a=new Set(["esri.Color","esri.portal.Portal","esri.symbols.support.Symbol3DAnchorPosition2D","esri.symbols.support.Symbol3DAnchorPosition3D"]);function n(e){return e instanceof r.Z}function l(e){return e instanceof s.Z?Object.keys(e.items):n(e)?(0,o.vw)(e).keys():e?Object.keys(e):[]}function u(e,t){return e instanceof s.Z?e.items[t]:e[t]}function p(e){return e?e.declaredClass:null}function c(e,t){const i=e.diff;if(i&&"function"==typeof i)return i(e,t);const r=l(e),s=l(t);if(0===r.length&&0===s.length)return;if(!r.length||!s.length||function(e,t){return!(!Array.isArray(e)||!Array.isArray(t))&&e.length!==t.length}(e,t))return{type:"complete",oldValue:e,newValue:t};const o=s.filter((e=>!r.includes(e))),d=r.filter((e=>!s.includes(e))),m=r.filter((i=>s.includes(i)&&u(e,i)!==u(t,i))).concat(o,d).sort(),y=p(e);if(y&&a.has(y)&&m.length)return{type:"complete",oldValue:e,newValue:t};let b;const T=n(e)&&n(t);for(const r of m){const s=u(e,r),o=u(t,r);let a;if((T||"function"!=typeof s&&"function"!=typeof o)&&s!==o&&(null!=s||null!=o)){if(i&&i[r]&&"function"==typeof i[r])a=i[r]?.(s,o);else if(s instanceof Date&&o instanceof Date){if(s.getTime()===o.getTime())continue;a={type:"complete",oldValue:s,newValue:o}}else a="object"==typeof s&&"object"==typeof o&&p(s)===p(o)?c(s,o):{type:"complete",oldValue:s,newValue:o};null!=a&&(null!=b?b.diff[r]=a:b={type:"partial",diff:{[r]:a}})}}return b}function d(e,t){return function(e,t){if(null==e)return!1;const i=t.split(".");let r=e;for(const e of i){if("complete"===r.type)return!0;if("partial"!==r.type)return!1;{const t=r.diff[e];if(!t)return!1;r=t}}return!0}(e,t)}function m(e,t){if(!e)return!1;if("partial"===e.type){const i=Object.keys(e.diff);return 1===i.length&&i[0]===t}return!1}function y(e,t){if("function"!=typeof e&&"function"!=typeof t&&(null!=e||null!=t))return null==e||null==t||"object"==typeof e&&"object"==typeof t&&p(e)!==p(t)?{type:"complete",oldValue:e,newValue:t}:c(e,t)}function b(e){if(null==e)return!0;switch(e.type){case"complete":return!1;case"collection":{const t=e;for(const e of t.added)if(!b(e))return!1;for(const e of t.removed)if(!b(e))return!1;for(const e of t.changed)if(!b(e))return!1;return!0}case"partial":for(const t in e.diff)if(!b(e.diff[t]))return!1;return!0}}},69999:function(e,t,i){i.d(t,{DE:function(){return s},EQ:function(){return a},Yc:function(){return u},co:function(){return n},nY:function(){return o},pQ:function(){return l}});var r=i(16274);function s(e,t){if(null==e)return null;const i={},s=new RegExp(`^${t}`,"i");for(const o of Object.keys(e))if(s.test(o)){const s=o.slice(t.length);i[r.Ul.fromJSON(s)]=e[o]}return i}function o(e,t,i){if(null!=e){t.attributes||(t.attributes={});for(const s in e){const o=r.Ul.toJSON(s);t.attributes[`${i}${o}`]=e[s]}}}function a(e){const t={};for(const i of Object.keys(e)){const s=i;t[r.Ul.fromJSON(s)]=e[i]}return t}function n(e){const t={};for(const i of Object.keys(e)){const s=i;t[r.Ul.toJSON(s)]=e[i]}return t}function l(e,t){return null==e||null==t?null:Math.round((e-t)/6e4)}function u(e){const t=e.toJSON(),i=t;return i.accumulateAttributeNames&&=t.accumulateAttributeNames?.join(),i.attributeParameterValues&&=JSON.stringify(t.attributeParameterValues),i.barriers&&=JSON.stringify(t.barriers),i.outSR&&=t.outSR?.wkid,i.overrides&&=JSON.stringify(t.overrides),i.polygonBarriers&&=JSON.stringify(t.polygonBarriers),i.polylineBarriers&&=JSON.stringify(t.polylineBarriers),i.restrictionAttributeNames&&=t.restrictionAttributeNames?.join(),i.stops&&=JSON.stringify(t.stops),i.travelMode&&=JSON.stringify(t.travelMode),i}},60458:function(e,t,i){i.d(t,{Z:function(){return y}});var r,s=i(73440),o=i(46451),a=i(997),n=i(89314),l=i(63255),u=i(17155),p=(i(61432),i(96711),i(83850),i(48023)),c=i(62197),d=i(16274),m=i(68578);let y=class extends(n.Z.ClonableMixin(l.Z)){static{r=this}constructor(e){super(e),this.directionLineType=null,this.directionPointId=null,this.distance=null,this.duration=null,this.fromLevel=null,this.geometry=null,this.objectId=null,this.popupTemplate=null,this.symbol=null,this.toLevel=null,this.type="direction-line"}static{this.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"DirectionLineType",alias:"Line Type",type:"esriFieldTypeInteger"},{name:"DirectionPointID",alias:"Direction Point ID",type:"esriFieldTypeInteger"},{name:"FromLevel",alias:"From Level",type:"esriFieldTypeInteger"},{name:"Meters",alias:"Meters",type:"esriFieldTypeDouble"},{name:"Minutes",alias:"Minutes",type:"esriFieldTypeDouble"},{name:"ToLevel",alias:"To Level",type:"esriFieldTypeInteger"}]}static fromGraphic(e){return new r({directionLineType:d.td.fromJSON(e.attributes.DirectionLineType),directionPointId:e.attributes.DirectionPointID,distance:e.attributes.Meters,duration:e.attributes.Minutes,fromLevel:e.attributes.FromLevel??null,geometry:e.geometry,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,symbol:e.symbol,toLevel:e.attributes.ToLevel??null})}toGraphic(){const e={ObjectID:this.objectId,DirectionLineType:this.directionLineType?d.td.toJSON(this.directionLineType):null,DirectionPointID:this.directionPointId,Meters:this.distance,Minutes:this.duration};return null!=this.fromLevel&&(e.FromLevel=this.fromLevel),null!=this.toLevel&&(e.ToLevel=this.toLevel),new o.Z({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};(0,s._)([(0,u.Cb)({type:d.td.apiValues,json:{read:{source:"attributes.DirectionLineType",reader:d.td.read}}})],y.prototype,"directionLineType",void 0),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.DirectionPointID"}}})],y.prototype,"directionPointId",void 0),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.Meters"}}})],y.prototype,"distance",void 0),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.Minutes"}}})],y.prototype,"duration",void 0),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.FromLevel"}}})],y.prototype,"fromLevel",void 0),(0,s._)([(0,u.Cb)({type:c.Z})],y.prototype,"geometry",void 0),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.ObjectID"}}})],y.prototype,"objectId",void 0),(0,s._)([(0,u.Cb)({type:a.Z})],y.prototype,"popupTemplate",void 0),(0,s._)([(0,u.Cb)({types:m.LB})],y.prototype,"symbol",void 0),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.ToLevel"}}})],y.prototype,"toLevel",void 0),(0,s._)([(0,u.Cb)({readOnly:!0,json:{read:!1}})],y.prototype,"type",void 0),y=r=(0,s._)([(0,p.j)("esri.rest.support.DirectionLine")],y)},13997:function(e,t,i){i.d(t,{Z:function(){return b}});var r,s=i(73440),o=i(46451),a=i(997),n=i(89314),l=i(63255),u=i(17155),p=(i(61432),i(96711),i(83850),i(1194)),c=i(48023),d=i(60508),m=i(16274),y=i(68578);let b=class extends(n.Z.ClonableMixin(l.Z)){static{r=this}constructor(e){super(e),this.alternateName=null,this.arrivalTime=null,this.arrivalTimeOffset=null,this.azimuth=null,this.branchName=null,this.directionPointType=null,this.displayText=null,this.exitName=null,this.geometry=null,this.intersectingName=null,this.level=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sequence=null,this.shortVoiceInstruction=null,this.stopId=null,this.symbol=null,this.towardName=null,this.type="direction-point",this.voiceInstruction=null}readArrivalTime(e,t){return null!=t.attributes.ArrivalTime?new Date(t.attributes.ArrivalTime):null}static{this.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"AlternateName",alias:"Alternative Name",type:"esriFieldTypeString"},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate"},{name:"ArrivalUTCOffset",alias:"Arrival Time Offset",type:"esriFieldTypeInteger"},{name:"Azimuth",alias:"Azimuth",type:"esriFieldTypeDouble"},{name:"BranchName",alias:"Branch Name",type:"esriFieldTypeString"},{name:"DirectionPointType",alias:"Directions Point Type",type:"esriFieldTypeInteger"},{name:"DisplayText",alias:"Display Text",type:"esriFieldTypeString"},{name:"ExitName",alias:"Exit Name",type:"esriFieldTypeString"},{name:"IntersectingName",alias:"Intersecting Name",type:"esriFieldTypeString"},{name:"Level",alias:"Level",type:"esriFieldTypeInteger"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger"},{name:"ShortVoiceInstruction",alias:"Short Voice Instruction",type:"esriFieldTypeString"},{name:"StopID",alias:"Stop ID",type:"esriFieldTypeInteger"},{name:"TowardName",alias:"Toward Name",type:"esriFieldTypeString"},{name:"VoiceInstruction",alias:"Voice Instruction",type:"esriFieldTypeString"}]}static fromGraphic(e){return new r({alternateName:e.attributes.AlternateName??null,arrivalTime:null!=e.attributes.ArrivalTime?new Date(e.attributes.ArrivalTime):null,arrivalTimeOffset:e.attributes.ArrivalUTCOffset??null,azimuth:e.attributes.Azimuth??null,branchName:e.attributes.BranchName??null,directionPointType:m.cW.fromJSON(e.attributes.DirectionPointType),displayText:e.attributes.DisplayText??null,exitName:e.attributes.ExitName??null,geometry:e.geometry,intersectingName:e.attributes.IntersectingName??null,level:e.attributes.Level??null,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,sequence:e.attributes.Sequence,shortVoiceInstruction:e.attributes.ShortVoiceInstruction??null,stopId:e.attributes.StopID??null,symbol:e.symbol,towardName:e.attributes.TowardName??null,voiceInstruction:e.attributes.VoiceInstruction??null})}toGraphic(){const e={ObjectID:this.objectId,DirectionPointType:this.directionPointType?m.cW.toJSON(this.directionPointType):null,Sequence:this.sequence,StopID:this.stopId};return null!=this.alternateName&&(e.AlternateName=this.alternateName),null!=this.arrivalTime&&(e.ArrivalTime=this.arrivalTime.getTime()),null!=this.arrivalTimeOffset&&(e.ArrivalUTCOffset=this.arrivalTimeOffset),null!=this.azimuth&&(e.Azimuth=this.azimuth),null!=this.branchName&&(e.BranchName=this.branchName),null!=this.displayText&&(e.DisplayText=this.displayText),null!=this.exitName&&(e.ExitName=this.exitName),null!=this.intersectingName&&(e.IntersectingName=this.intersectingName),null!=this.level&&(e.Level=this.level),null!=this.name&&(e.Name=this.name),null!=this.shortVoiceInstruction&&(e.ShortVoiceInstruction=this.shortVoiceInstruction),null!=this.towardName&&(e.TowardName=this.towardName),null!=this.voiceInstruction&&(e.VoiceInstruction=this.voiceInstruction),new o.Z({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.AlternateName"}}})],b.prototype,"alternateName",void 0),(0,s._)([(0,u.Cb)({type:Date})],b.prototype,"arrivalTime",void 0),(0,s._)([(0,p.r)("arrivalTime",["attributes.ArrivalTime"])],b.prototype,"readArrivalTime",null),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.ArrivalUTCOffset"}}})],b.prototype,"arrivalTimeOffset",void 0),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.Azimuth"}}})],b.prototype,"azimuth",void 0),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.BranchName"}}})],b.prototype,"branchName",void 0),(0,s._)([(0,u.Cb)({type:m.cW.apiValues,json:{read:{source:"attributes.DirectionPointType",reader:m.cW.read}}})],b.prototype,"directionPointType",void 0),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.DisplayText"}}})],b.prototype,"displayText",void 0),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.ExitName"}}})],b.prototype,"exitName",void 0),(0,s._)([(0,u.Cb)({type:d.Z})],b.prototype,"geometry",void 0),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.IntersectingName"}}})],b.prototype,"intersectingName",void 0),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.Level"}}})],b.prototype,"level",void 0),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.Name"}}})],b.prototype,"name",void 0),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.ObjectID"}}})],b.prototype,"objectId",void 0),(0,s._)([(0,u.Cb)({type:a.Z})],b.prototype,"popupTemplate",void 0),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.Sequence"}}})],b.prototype,"sequence",void 0),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.ShortVoiceInstruction"}}})],b.prototype,"shortVoiceInstruction",void 0),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.StopID"}}})],b.prototype,"stopId",void 0),(0,s._)([(0,u.Cb)({types:y.LB})],b.prototype,"symbol",void 0),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.TowardName"}}})],b.prototype,"towardName",void 0),(0,s._)([(0,u.Cb)({readOnly:!0,json:{read:!1}})],b.prototype,"type",void 0),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.VoiceInstruction"}}})],b.prototype,"voiceInstruction",void 0),b=r=(0,s._)([(0,c.j)("esri.rest.support.DirectionPoint")],b)},33086:function(e,t,i){i.d(t,{Z:function(){return h}});var r,s=i(73440),o=i(46451),a=i(997),n=i(89314),l=i(63255),u=i(17155),p=(i(61432),i(96711),i(83850),i(1194)),c=i(48023),d=i(29884),m=i(60508),y=i(69999),b=i(16274),T=i(68578);let h=class extends(n.Z.ClonableMixin(l.Z)){static{r=this}constructor(e){super(e),this.addedCost=null,this.barrierType=null,this.costs=null,this.curbApproach=null,this.fullEdge=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sideOfEdge=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.type="point-barrier"}readCosts(e,t){return(0,y.DE)(t.attributes,"Attr_")}writeCosts(e,t){(0,y.nY)(e,t,"Attr_")}static{this.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"AddedCost",alias:"Added Cost",type:"esriFieldTypeDouble"},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger"},{name:"Costs",alias:"Costs",type:"esriFieldTypeString"},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger"},{name:"FullEdge",alias:"Full Edge",type:"esriFieldTypeInteger"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"Status",alias:"Status",type:"esriFieldTypeInteger"}]}static fromGraphic(e){return new r({addedCost:e.attributes.AddedCost??null,barrierType:null!=e.attributes.BarrierType?b.oi.fromJSON(e.attributes.BarrierType):null,costs:null!=e.attributes.Costs?(0,y.EQ)(JSON.parse(e.attributes.Costs)):null,curbApproach:null!=e.attributes.CurbApproach?b.W7.fromJSON(e.attributes.CurbApproach):null,fullEdge:null!=e.attributes.FullEdge?b.Dd.fromJSON(e.attributes.FullEdge):null,geometry:e.geometry,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,status:null!=e.attributes.Status?b.SS.fromJSON(e.attributes.Status):null,symbol:e.symbol})}toGraphic(){const e={ObjectID:this.objectId,AddedCost:this.addedCost,BarrierType:this.barrierType?b.oi.toJSON(this.barrierType):null,Costs:this.costs?JSON.stringify((0,y.co)(this.costs)):null,CurbApproach:this.curbApproach?b.W7.toJSON(this.curbApproach):null,FullEdge:this.fullEdge?b.Dd.toJSON(this.fullEdge):null,Name:this.name,Status:this.status?b.SS.toJSON(this.status):null};return new o.Z({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};(0,s._)([(0,u.Cb)()],h.prototype,"addedCost",void 0),(0,s._)([(0,u.Cb)({type:b.oi.apiValues,json:{name:"attributes.BarrierType",read:{reader:b.oi.read},write:{writer:b.oi.write}}})],h.prototype,"barrierType",void 0),(0,s._)([(0,u.Cb)()],h.prototype,"costs",void 0),(0,s._)([(0,p.r)("costs",["attributes"])],h.prototype,"readCosts",null),(0,s._)([(0,d.c)("costs")],h.prototype,"writeCosts",null),(0,s._)([(0,u.Cb)({type:b.W7.apiValues,json:{read:{source:"attributes.CurbApproach",reader:b.W7.read}}})],h.prototype,"curbApproach",void 0),(0,s._)([(0,u.Cb)({type:b.Dd.apiValues,json:{name:"attributes.FullEdge",read:{reader:b.Dd.read},write:{writer:b.Dd.write}}})],h.prototype,"fullEdge",void 0),(0,s._)([(0,u.Cb)({type:m.Z,json:{write:!0}})],h.prototype,"geometry",void 0),(0,s._)([(0,u.Cb)({json:{name:"attributes.Name"}})],h.prototype,"name",void 0),(0,s._)([(0,u.Cb)({json:{name:"attributes.ObjectID"}})],h.prototype,"objectId",void 0),(0,s._)([(0,u.Cb)({type:a.Z})],h.prototype,"popupTemplate",void 0),(0,s._)([(0,u.Cb)({type:b.BW.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:b.BW.read}}})],h.prototype,"sideOfEdge",void 0),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.SourceID"}}})],h.prototype,"sourceId",void 0),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.SourceOID"}}})],h.prototype,"sourceOid",void 0),(0,s._)([(0,u.Cb)({type:b.SS.apiValues,json:{read:{source:"attributes.Status",reader:b.SS.read}}})],h.prototype,"status",void 0),(0,s._)([(0,u.Cb)({types:T.LB})],h.prototype,"symbol",void 0),(0,s._)([(0,u.Cb)({readOnly:!0,json:{read:!1}})],h.prototype,"type",void 0),h=r=(0,s._)([(0,c.j)("esri.rest.support.PointBarrier")],h)},88835:function(e,t,i){i.d(t,{Z:function(){return h}});var r,s=i(73440),o=i(46451),a=i(997),n=i(89314),l=i(63255),u=i(17155),p=(i(61432),i(96711),i(83850),i(1194)),c=i(48023),d=i(29884),m=i(67764),y=i(69999),b=i(16274),T=i(68578);let h=class extends(n.Z.ClonableMixin(l.Z)){static{r=this}constructor(e){super(e),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polygon-barrier"}readCosts(e,t){return(0,y.DE)(t.attributes,"Attr_")}writeCosts(e,t){(0,y.nY)(e,t,"Attr_")}static{this.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger"},{name:"Costs",alias:"Costs",type:"esriFieldTypeString"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble"}]}static fromGraphic(e){return new r({barrierType:null!=e.attributes.BarrierType?b.oi.fromJSON(e.attributes.BarrierType):null,costs:null!=e.attributes.Costs?(0,y.EQ)(JSON.parse(e.attributes.Costs)):null,geometry:e.geometry,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,scaleFactor:e.attributes.ScaleFactor??null,symbol:e.symbol})}toGraphic(){const e={ObjectID:this.objectId,BarrierType:this.barrierType?b.oi.toJSON(this.barrierType):null,Costs:this.costs?JSON.stringify((0,y.co)(this.costs)):null,Name:this.name??null,ScaleFactor:this.scaleFactor??null};return new o.Z({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};(0,s._)([(0,u.Cb)({type:b.oi.apiValues,json:{name:"attributes.BarrierType",read:{reader:b.oi.read},write:{writer:b.oi.write}}})],h.prototype,"barrierType",void 0),(0,s._)([(0,u.Cb)()],h.prototype,"costs",void 0),(0,s._)([(0,p.r)("costs",["attributes"])],h.prototype,"readCosts",null),(0,s._)([(0,d.c)("costs")],h.prototype,"writeCosts",null),(0,s._)([(0,u.Cb)({type:m.Z,json:{write:!0}})],h.prototype,"geometry",void 0),(0,s._)([(0,u.Cb)({json:{name:"attributes.Name"}})],h.prototype,"name",void 0),(0,s._)([(0,u.Cb)({json:{name:"attributes.ObjectID"}})],h.prototype,"objectId",void 0),(0,s._)([(0,u.Cb)({type:a.Z})],h.prototype,"popupTemplate",void 0),(0,s._)([(0,u.Cb)()],h.prototype,"scaleFactor",void 0),(0,s._)([(0,u.Cb)({types:T.LB})],h.prototype,"symbol",void 0),(0,s._)([(0,u.Cb)({readOnly:!0,json:{read:!1}})],h.prototype,"type",void 0),h=r=(0,s._)([(0,c.j)("esri.rest.support.PolygonBarrier")],h)},17303:function(e,t,i){i.d(t,{Z:function(){return T}});var r,s=i(73440),o=i(46451),a=i(997),n=i(89314),l=i(63255),u=i(17155),p=(i(61432),i(96711),i(83850),i(1194)),c=i(48023),d=i(62197),m=i(69999),y=i(16274),b=i(68578);let T=class extends(n.Z.ClonableMixin(l.Z)){static{r=this}constructor(e){super(e),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polyline-barrier"}readCosts(e,t){return(0,m.DE)(t.attributes,"Attr_")}static{this.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger"},{name:"Costs",alias:"Costs",type:"esriFieldTypeString"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble"}]}static fromGraphic(e){return new r({barrierType:null!=e.attributes.BarrierType?y.oi.fromJSON(e.attributes.BarrierType):null,costs:null!=e.attributes.Costs?(0,m.EQ)(JSON.parse(e.attributes.Costs)):null,geometry:e.geometry,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,scaleFactor:e.attributes.ScaleFactor??null,symbol:e.symbol})}toGraphic(){const e={ObjectID:this.objectId,BarrierType:this.barrierType?y.oi.toJSON(this.barrierType):null,Costs:this.costs?JSON.stringify((0,m.co)(this.costs)):null,Name:this.name,ScaleFactor:this.scaleFactor};return new o.Z({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};(0,s._)([(0,u.Cb)({type:y.oi.apiValues,json:{read:{source:"attributes.BarrierType",reader:y.oi.read}}})],T.prototype,"barrierType",void 0),(0,s._)([(0,u.Cb)()],T.prototype,"costs",void 0),(0,s._)([(0,p.r)("costs",["attributes"])],T.prototype,"readCosts",null),(0,s._)([(0,u.Cb)({type:d.Z,json:{write:!0}})],T.prototype,"geometry",void 0),(0,s._)([(0,u.Cb)({json:{name:"attributes.Name"}})],T.prototype,"name",void 0),(0,s._)([(0,u.Cb)({json:{name:"attributes.ObjectID"}})],T.prototype,"objectId",void 0),(0,s._)([(0,u.Cb)({type:a.Z})],T.prototype,"popupTemplate",void 0),(0,s._)([(0,u.Cb)()],T.prototype,"scaleFactor",void 0),(0,s._)([(0,u.Cb)({types:b.LB})],T.prototype,"symbol",void 0),(0,s._)([(0,u.Cb)({readOnly:!0,json:{read:!1}})],T.prototype,"type",void 0),T=r=(0,s._)([(0,c.j)("esri.rest.support.PolylineBarrier")],T)},41088:function(e,t,i){i.d(t,{Z:function(){return T}});var r,s=i(73440),o=i(46451),a=i(997),n=i(89314),l=i(63255),u=i(17155),p=(i(61432),i(96711),i(83850),i(1194)),c=i(48023),d=i(62197),m=i(69999),y=i(54579),b=i(68578);let T=class extends(n.Z.ClonableMixin(l.Z)){static{r=this}constructor(e){super(e),this.analysisSettings=null,this.endTime=null,this.endTimeOffset=null,this.firstStopId=null,this.geometry=null,this.lastStopId=null,this.messages=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.startTime=null,this.startTimeOffset=null,this.stopCount=null,this.symbol=null,this.totalCosts=null,this.totalDistance=null,this.totalDuration=null,this.totalLateDuration=null,this.totalViolations=null,this.totalWait=null,this.totalWaitDuration=null,this.type="route-info",this.version="1.0.0"}readEndTime(e,t){return null!=t.attributes.EndTimeUTC?new Date(t.attributes.EndTimeUTC):null}readEndTimeOffset(e,t){return(0,m.pQ)(t.attributes.EndTime,t.attributes.EndTimeUTC)}readStartTime(e,t){return null!=t.attributes.StartTimeUTC?new Date(t.attributes.StartTimeUTC):null}readStartTimeOffset(e,t){return(0,m.pQ)(t.attributes.StartTime,t.attributes.StartTimeUTC)}readTotalCosts(e,t){return(0,m.DE)(t.attributes,"Total_")}readTotalViolations(e,t){return(0,m.DE)(t.attributes,"TotalViolation_")}readTotalWait(e,t){return(0,m.DE)(t.attributes,"TotalWait_")}static{this.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"AnalysisSettings",alias:"Analysis Settings",type:"esriFieldTypeString"},{name:"EndTime",alias:"End Time",type:"esriFieldTypeDate"},{name:"EndUTCOffset",alias:"End Time Offset",type:"esriFieldTypeInteger"},{name:"Messages",alias:"Messages",type:"esriFieldTypeString"},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString"},{name:"StartTime",alias:"Start Time",type:"esriFieldTypeDate"},{name:"StartUTCOffset",alias:"Start Time Offset",type:"esriFieldTypeInteger"},{name:"TotalCosts",alias:"Total Costs",type:"esriFieldTypeString"},{name:"TotalLateMinutes",alias:"Total Late Minutes",type:"esriFieldTypeDouble"},{name:"TotalMeters",alias:"Total Meters",type:"esriFieldTypeDouble"},{name:"TotalMinutes",alias:"Total Minutes",type:"esriFieldTypeDouble"},{name:"TotalWaitMinutes",alias:"Total Wait Minutes",type:"esriFieldTypeDouble"},{name:"Version",alias:"Version",type:"esriFieldTypeString"}]}static fromGraphic(e){return new r({analysisSettings:null!=e.attributes.AnalysisSettings?y.Z.fromJSON(JSON.parse(e.attributes.AnalysisSettings)):null,endTime:null!=e.attributes.EndTime?new Date(e.attributes.EndTime):null,endTimeOffset:e.attributes.EndUTCOffset??null,geometry:e.geometry,messages:null!=e.attributes.Messages?JSON.parse(e.attributes.Messages):null,name:e.attributes.RouteName,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,startTime:null!=e.attributes.StartTime?new Date(e.attributes.StartTime):null,startTimeOffset:e.attributes.StartUTCOffset??null,symbol:e.symbol,totalCosts:null!=e.attributes.TotalCosts?(0,m.EQ)(JSON.parse(e.attributes.TotalCosts)):null,totalDistance:e.attributes.TotalMeters??null,totalDuration:e.attributes.TotalMinutes??null,totalLateDuration:e.attributes.TotalLateMinutes??null,totalWaitDuration:e.attributes.TotalWaitMinutes??null,version:e.attributes.Version})}toGraphic(){const e={ObjectID:this.objectId,AnalysisSettings:this.analysisSettings?JSON.stringify(this.analysisSettings.toJSON()):null,EndTime:this.endTime?.getTime()??null,EndUTCOffset:this.endTimeOffset,Messages:this.messages?JSON.stringify(this.messages):null,RouteName:this.name,StartTime:this.startTime?.getTime()??null,StartUTCOffset:this.startTimeOffset,TotalCosts:this.totalCosts?JSON.stringify((0,m.co)(this.totalCosts)):null,TotalLateMinutes:this.totalLateDuration,TotalMeters:this.totalDistance,TotalMinutes:this.totalDuration,TotalWaitMinutes:this.totalWaitDuration,Version:this.version};return new o.Z({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};(0,s._)([(0,u.Cb)()],T.prototype,"analysisSettings",void 0),(0,s._)([(0,u.Cb)({type:Date})],T.prototype,"endTime",void 0),(0,s._)([(0,p.r)("endTime",["attributes.EndTimeUTC"])],T.prototype,"readEndTime",null),(0,s._)([(0,u.Cb)()],T.prototype,"endTimeOffset",void 0),(0,s._)([(0,p.r)("endTimeOffset",["attributes.EndTime","attributes.EndTimeUTC"])],T.prototype,"readEndTimeOffset",null),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.FirstStopID"}}})],T.prototype,"firstStopId",void 0),(0,s._)([(0,u.Cb)({type:d.Z})],T.prototype,"geometry",void 0),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.LastStopID"}}})],T.prototype,"lastStopId",void 0),(0,s._)([(0,u.Cb)()],T.prototype,"messages",void 0),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.Name"}}})],T.prototype,"name",void 0),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.ObjectID"}}})],T.prototype,"objectId",void 0),(0,s._)([(0,u.Cb)({type:a.Z})],T.prototype,"popupTemplate",void 0),(0,s._)([(0,u.Cb)({type:Date})],T.prototype,"startTime",void 0),(0,s._)([(0,p.r)("startTime",["attributes.StartTimeUTC"])],T.prototype,"readStartTime",null),(0,s._)([(0,u.Cb)()],T.prototype,"startTimeOffset",void 0),(0,s._)([(0,p.r)("startTimeOffset",["attributes.StartTime","attributes.StartTimeUTC"])],T.prototype,"readStartTimeOffset",null),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.StopCount"}}})],T.prototype,"stopCount",void 0),(0,s._)([(0,u.Cb)({types:b.LB})],T.prototype,"symbol",void 0),(0,s._)([(0,u.Cb)()],T.prototype,"totalCosts",void 0),(0,s._)([(0,p.r)("totalCosts",["attributes"])],T.prototype,"readTotalCosts",null),(0,s._)([(0,u.Cb)()],T.prototype,"totalDistance",void 0),(0,s._)([(0,u.Cb)()],T.prototype,"totalDuration",void 0),(0,s._)([(0,u.Cb)()],T.prototype,"totalLateDuration",void 0),(0,s._)([(0,u.Cb)()],T.prototype,"totalViolations",void 0),(0,s._)([(0,p.r)("totalViolations",["attributes"])],T.prototype,"readTotalViolations",null),(0,s._)([(0,u.Cb)()],T.prototype,"totalWait",void 0),(0,s._)([(0,p.r)("totalWait",["attributes"])],T.prototype,"readTotalWait",null),(0,s._)([(0,u.Cb)()],T.prototype,"totalWaitDuration",void 0),(0,s._)([(0,u.Cb)({readOnly:!0,json:{read:!1}})],T.prototype,"type",void 0),(0,s._)([(0,u.Cb)()],T.prototype,"version",void 0),T=r=(0,s._)([(0,c.j)("esri.rest.support.RouteInfo")],T)},54579:function(e,t,i){i.d(t,{Z:function(){return c}});var r=i(73440),s=i(63255),o=i(17155),a=(i(61432),i(96711),i(83850),i(1194)),n=i(48023),l=i(29884),u=i(16274),p=i(59819);let c=class extends s.Z{constructor(e){super(e),this.accumulateAttributes=null,this.directionsLanguage=null,this.findBestSequence=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.startTimeIsUTC=null,this.timeWindowsAreUTC=null,this.travelMode=null}readAccumulateAttributes(e){return null==e?null:e.map((e=>u.Ul.fromJSON(e)))}writeAccumulateAttributes(e,t,i){e?.length&&(t[i]=e.map((e=>u.Ul.toJSON(e))))}};(0,r._)([(0,o.Cb)({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],c.prototype,"accumulateAttributes",void 0),(0,r._)([(0,a.r)("accumulateAttributes")],c.prototype,"readAccumulateAttributes",null),(0,r._)([(0,l.c)("accumulateAttributes")],c.prototype,"writeAccumulateAttributes",null),(0,r._)([(0,o.Cb)({type:String,json:{write:!0}})],c.prototype,"directionsLanguage",void 0),(0,r._)([(0,o.Cb)({type:Boolean,json:{write:!0}})],c.prototype,"findBestSequence",void 0),(0,r._)([(0,o.Cb)({type:Boolean,json:{write:!0}})],c.prototype,"preserveFirstStop",void 0),(0,r._)([(0,o.Cb)({type:Boolean,json:{write:!0}})],c.prototype,"preserveLastStop",void 0),(0,r._)([(0,o.Cb)({type:Boolean,json:{write:!0}})],c.prototype,"startTimeIsUTC",void 0),(0,r._)([(0,o.Cb)({type:Boolean,json:{write:!0}})],c.prototype,"timeWindowsAreUTC",void 0),(0,r._)([(0,o.Cb)({type:p.Z,json:{write:!0}})],c.prototype,"travelMode",void 0),c=(0,r._)([(0,n.j)("esri.rest.support.RouteSettings")],c)},73358:function(e,t,i){i.d(t,{Z:function(){return h}});var r,s=i(73440),o=i(46451),a=i(997),n=i(89314),l=i(63255),u=i(17155),p=(i(61432),i(96711),i(83850),i(1194)),c=i(48023),d=i(29884),m=i(60508),y=i(69999),b=i(16274),T=i(68578);let h=class extends(n.Z.ClonableMixin(l.Z)){static{r=this}constructor(e){super(e),this.arriveCurbApproach=null,this.arriveTime=null,this.arriveTimeOffset=null,this.bearing=null,this.bearingTol=null,this.cumulativeCosts=null,this.cumulativeDistance=null,this.cumulativeDuration=null,this.curbApproach=null,this.departCurbApproach=null,this.departTime=null,this.departTimeOffset=null,this.distanceToNetworkInMeters=null,this.geometry=null,this.lateDuration=null,this.locationType=null,this.name=null,this.navLatency=null,this.objectId=null,this.popupTemplate=null,this.posAlong=null,this.routeName=null,this.serviceCosts=null,this.serviceDistance=null,this.serviceDuration=null,this.sequence=null,this.sideOfEdge=null,this.snapX=null,this.snapY=null,this.snapZ=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.timeWindowEnd=null,this.timeWindowEndOffset=null,this.timeWindowStart=null,this.timeWindowStartOffset=null,this.type="stop",this.violations=null,this.waitDuration=null,this.wait=null}readArriveTimeOffset(e,t){return(0,y.pQ)(t.attributes.ArriveTime,t.attributes.ArriveTimeUTC)}readCumulativeCosts(e,t){return(0,y.DE)(t.attributes,"Cumul_")}readDepartTimeOffset(e,t){return(0,y.pQ)(t.attributes.DepartTime,t.attributes.DepartTimeUTC)}readServiceCosts(e,t){return(0,y.DE)(t.attributes,"Attr_")}writeServiceCosts(e,t){(0,y.nY)(e,t,"Attr_")}writeTimeWindowEnd(e,t){null!=e&&(t.attributes||(t.attributes={}),t.attributes.TimeWindowEnd=e.getTime())}writeTimeWindowStart(e,t){null!=e&&(t.attributes||(t.attributes={}),t.attributes.TimeWindowStart=e.getTime())}readViolations(e,t){return(0,y.DE)(t.attributes,"Violation_")}readWait(e,t){return(0,y.DE)(t.attributes,"Wait_")}static{this.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"ArrivalCurbApproach",alias:"Arrival Curb Approach",type:"esriFieldTypeInteger"},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate"},{name:"ArrivalUTCOffset",alias:"Arrival Time",type:"esriFieldTypeInteger"},{name:"CumulativeCosts",alias:"Cumulative Costs",type:"esriFieldTypeString"},{name:"CumulativeMeters",alias:"Cumulative Meters",type:"esriFieldTypeDouble"},{name:"CumulativeMinutes",alias:"Cumulative Minutes",type:"esriFieldTypeDouble"},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger"},{name:"DepartureCurbApproach",alias:"Departure Curb Approach",type:"esriFieldTypeInteger"},{name:"DepartureTime",alias:"Departure Time",type:"esriFieldTypeDate"},{name:"DepartureUTCOffset",alias:"Departure Time",type:"esriFieldTypeInteger"},{name:"LateMinutes",alias:"Minutes Late",type:"esriFieldTypeDouble"},{name:"LocationType",alias:"Location Type",type:"esriFieldTypeInteger"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString"},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger"},{name:"ServiceCosts",alias:"Service Costs",type:"esriFieldTypeString"},{name:"ServiceMeters",alias:"Service Meters",type:"esriFieldTypeDouble"},{name:"ServiceMinutes",alias:"Service Minutes",type:"esriFieldTypeDouble"},{name:"Status",alias:"Status",type:"esriFieldTypeInteger"},{name:"TimeWindowEnd",alias:"Time Window End",type:"esriFieldTypeDate"},{name:"TimeWindowEndUTCOffset",alias:"Time Window End Offset",type:"esriFieldTypeInteger"},{name:"TimeWindowStart",alias:"Time Window Start",type:"esriFieldTypeDate"},{name:"TimeWindowStartUTCOffset",alias:"Time Window Start Offset",type:"esriFieldTypeInteger"},{name:"WaitMinutes",alias:"Minutes Wait",type:"esriFieldTypeDouble"}]}static fromGraphic(e){return new r({arriveCurbApproach:null!=e.attributes.ArrivalCurbApproach?b.W7.fromJSON(e.attributes.ArrivalCurbApproach):null,arriveTime:null!=e.attributes.ArrivalTime?new Date(e.attributes.ArrivalTime):null,arriveTimeOffset:e.attributes.ArrivalUTCOffset,cumulativeCosts:null!=e.attributes.CumulativeCosts?(0,y.EQ)(JSON.parse(e.attributes.CumulativeCosts)):null,cumulativeDistance:e.attributes.CumulativeMeters??null,cumulativeDuration:e.attributes.CumulativeMinutes??null,curbApproach:null!=e.attributes.CurbApproach?b.W7.fromJSON(e.attributes.CurbApproach):null,departCurbApproach:null!=e.attributes.DepartureCurbApproach?b.W7.fromJSON(e.attributes.DepartureCurbApproach):null,departTime:null!=e.attributes.DepartureTime?new Date(e.attributes.DepartureTime):null,departTimeOffset:e.attributes.DepartureUTCOffset??null,geometry:e.geometry,lateDuration:e.attributes.LateMinutes??null,locationType:null!=e.attributes.LocationType?b.yP.fromJSON(e.attributes.LocationType):null,name:e.attributes.Name,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,routeName:e.attributes.RouteName,sequence:e.attributes.Sequence??null,serviceCosts:null!=e.attributes.ServiceCosts?(0,y.EQ)(JSON.parse(e.attributes.ServiceCosts)):null,serviceDistance:e.attributes.ServiceMeters??null,serviceDuration:e.attributes.ServiceMinutes??null,status:null!=e.attributes.Status?b.SS.fromJSON(e.attributes.Status):null,symbol:e.symbol,timeWindowEnd:null!=e.attributes.TimeWindowEnd?new Date(e.attributes.TimeWindowEnd):null,timeWindowEndOffset:e.attributes.TimeWindowEndUTCOffset??null,timeWindowStart:null!=e.attributes.TimeWindowStart?new Date(e.attributes.TimeWindowStart):null,timeWindowStartOffset:e.attributes.TimeWindowStartUTCOffset??null,waitDuration:e.attributes.WaitMinutes??null})}toGraphic(){const e={ObjectID:this.objectId,ArrivalCurbApproach:this.arriveCurbApproach?b.W7.toJSON(this.arriveCurbApproach):null,ArrivalTime:this.arriveTime?.getTime()??null,ArrivalUTCOffset:this.arriveTimeOffset,CumulativeCosts:this.cumulativeCosts?JSON.stringify((0,y.co)(this.cumulativeCosts)):null,CumulativeMeters:this.cumulativeDistance,CumulativeMinutes:this.cumulativeDuration,CurbApproach:this.curbApproach?b.W7.toJSON(this.curbApproach):null,DepartureCurbApproach:this.departCurbApproach?b.W7.toJSON(this.departCurbApproach):null,DepartureTime:this.departTime?.getTime()??null,DepartureUTCOffset:this.departTimeOffset,LateMinutes:this.lateDuration,LocationType:this.locationType?b.yP.toJSON(this.locationType):null,Name:this.name,RouteName:this.routeName,Sequence:this.sequence,ServiceCosts:this.serviceCosts?JSON.stringify((0,y.co)(this.serviceCosts)):null,ServiceMeters:this.serviceDistance,ServiceMinutes:this.serviceDuration,Status:this.status?b.SS.toJSON(this.status):null,TimeWindowEnd:this.timeWindowEnd?.getTime()??null,TimeWindowEndUTCOffset:this.timeWindowEndOffset??this.arriveTimeOffset,TimeWindowStart:this.timeWindowStart?.getTime()??null,TimeWindowStartUTCOffset:this.timeWindowStartOffset??this.arriveTimeOffset,WaitMinutes:this.waitDuration};return new o.Z({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};(0,s._)([(0,u.Cb)({type:b.W7.apiValues,json:{read:{source:"attributes.ArrivalCurbApproach",reader:b.W7.read}}})],h.prototype,"arriveCurbApproach",void 0),(0,s._)([(0,u.Cb)({type:Date,json:{read:{source:"attributes.ArriveTimeUTC"}}})],h.prototype,"arriveTime",void 0),(0,s._)([(0,u.Cb)()],h.prototype,"arriveTimeOffset",void 0),(0,s._)([(0,p.r)("arriveTimeOffset",["attributes.ArriveTime","attributes.ArriveTimeUTC"])],h.prototype,"readArriveTimeOffset",null),(0,s._)([(0,u.Cb)({json:{name:"attributes.Bearing",read:!1,write:!0}})],h.prototype,"bearing",void 0),(0,s._)([(0,u.Cb)({json:{name:"attributes.BearingTol",read:!1,write:!0}})],h.prototype,"bearingTol",void 0),(0,s._)([(0,u.Cb)()],h.prototype,"cumulativeCosts",void 0),(0,s._)([(0,p.r)("cumulativeCosts",["attributes"])],h.prototype,"readCumulativeCosts",null),(0,s._)([(0,u.Cb)()],h.prototype,"cumulativeDistance",void 0),(0,s._)([(0,u.Cb)()],h.prototype,"cumulativeDuration",void 0),(0,s._)([(0,u.Cb)({type:b.W7.apiValues,json:{name:"attributes.CurbApproach",read:{reader:b.W7.read},write:{writer:b.W7.write}}})],h.prototype,"curbApproach",void 0),(0,s._)([(0,u.Cb)({type:b.W7.apiValues,json:{read:{source:"attributes.DepartCurbApproach",reader:b.W7.read}}})],h.prototype,"departCurbApproach",void 0),(0,s._)([(0,u.Cb)({type:Date,json:{read:{source:"attributes.DepartTimeUTC"}}})],h.prototype,"departTime",void 0),(0,s._)([(0,u.Cb)()],h.prototype,"departTimeOffset",void 0),(0,s._)([(0,p.r)("departTimeOffset",["attributes.DepartTime","attributes.DepartTimeUTC"])],h.prototype,"readDepartTimeOffset",null),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.DistanceToNetworkInMeters"}}})],h.prototype,"distanceToNetworkInMeters",void 0),(0,s._)([(0,u.Cb)({type:m.Z,json:{write:!0}})],h.prototype,"geometry",void 0),(0,s._)([(0,u.Cb)()],h.prototype,"lateDuration",void 0),(0,s._)([(0,u.Cb)({type:b.yP.apiValues,json:{name:"attributes.LocationType",read:{reader:b.yP.read},write:{writer:b.yP.write}}})],h.prototype,"locationType",void 0),(0,s._)([(0,u.Cb)({json:{name:"attributes.Name"}})],h.prototype,"name",void 0),(0,s._)([(0,u.Cb)({json:{name:"attributes.NavLatency",read:!1,write:!0}})],h.prototype,"navLatency",void 0),(0,s._)([(0,u.Cb)({json:{name:"attributes.ObjectID"}})],h.prototype,"objectId",void 0),(0,s._)([(0,u.Cb)({type:a.Z})],h.prototype,"popupTemplate",void 0),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.PosAlong"}}})],h.prototype,"posAlong",void 0),(0,s._)([(0,u.Cb)({json:{name:"attributes.RouteName"}})],h.prototype,"routeName",void 0),(0,s._)([(0,u.Cb)()],h.prototype,"serviceCosts",void 0),(0,s._)([(0,p.r)("serviceCosts",["attributes"])],h.prototype,"readServiceCosts",null),(0,s._)([(0,d.c)("serviceCosts")],h.prototype,"writeServiceCosts",null),(0,s._)([(0,u.Cb)()],h.prototype,"serviceDistance",void 0),(0,s._)([(0,u.Cb)()],h.prototype,"serviceDuration",void 0),(0,s._)([(0,u.Cb)({json:{name:"attributes.Sequence"}})],h.prototype,"sequence",void 0),(0,s._)([(0,u.Cb)({type:b.BW.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:b.BW.read}}})],h.prototype,"sideOfEdge",void 0),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.SnapX"}}})],h.prototype,"snapX",void 0),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.SnapY"}}})],h.prototype,"snapY",void 0),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.SnapZ"}}})],h.prototype,"snapZ",void 0),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.SourceID"}}})],h.prototype,"sourceId",void 0),(0,s._)([(0,u.Cb)({json:{read:{source:"attributes.SourceOID"}}})],h.prototype,"sourceOid",void 0),(0,s._)([(0,u.Cb)({type:b.SS.apiValues,json:{read:{source:"attributes.Status",reader:b.SS.read}}})],h.prototype,"status",void 0),(0,s._)([(0,u.Cb)({types:T.LB})],h.prototype,"symbol",void 0),(0,s._)([(0,u.Cb)({type:Date,json:{name:"attributes.TimeWindowEnd"}})],h.prototype,"timeWindowEnd",void 0),(0,s._)([(0,d.c)("timeWindowEnd")],h.prototype,"writeTimeWindowEnd",null),(0,s._)([(0,u.Cb)()],h.prototype,"timeWindowEndOffset",void 0),(0,s._)([(0,u.Cb)({type:Date,json:{name:"attributes.TimeWindowStart"}})],h.prototype,"timeWindowStart",void 0),(0,s._)([(0,d.c)("timeWindowStart")],h.prototype,"writeTimeWindowStart",null),(0,s._)([(0,u.Cb)()],h.prototype,"timeWindowStartOffset",void 0),(0,s._)([(0,u.Cb)({readOnly:!0,json:{read:!1}})],h.prototype,"type",void 0),(0,s._)([(0,u.Cb)()],h.prototype,"violations",void 0),(0,s._)([(0,p.r)("violations",["attributes"])],h.prototype,"readViolations",null),(0,s._)([(0,u.Cb)()],h.prototype,"waitDuration",void 0),(0,s._)([(0,u.Cb)()],h.prototype,"wait",void 0),(0,s._)([(0,p.r)("wait",["attributes"])],h.prototype,"readWait",null),h=r=(0,s._)([(0,c.j)("esri.rest.support.Stop")],h)},59819:function(e,t,i){i.d(t,{Z:function(){return d}});var r=i(73440),s=i(89314),o=i(63255),a=i(17155),n=(i(61432),i(96711),i(83850),i(79775)),l=i(1194),u=i(48023),p=i(29884),c=i(16274);let d=class extends(s.Z.ClonableMixin(o.Z)){constructor(e){super(e),this.attributeParameterValues=null,this.description=null,this.distanceAttributeName=null,this.id=null,this.impedanceAttributeName=null,this.name=null,this.restrictionAttributeNames=null,this.simplificationTolerance=null,this.simplificationToleranceUnits=null,this.timeAttributeName=null,this.type=null,this.useHierarchy=null,this.uturnAtJunctions=null}readId(e,t){return t.id??t.itemId??null}readRestrictionAttributes(e,t){const{restrictionAttributeNames:i}=t;return null==i?null:i.map((e=>c.kL.fromJSON(e)))}writeRestrictionAttributes(e,t,i){null!=e&&(t[i]=e.map((e=>c.kL.toJSON(e))))}};(0,r._)([(0,a.Cb)({type:[Object],json:{write:!0}})],d.prototype,"attributeParameterValues",void 0),(0,r._)([(0,a.Cb)({type:String,json:{write:!0}})],d.prototype,"description",void 0),(0,r._)([(0,n.J)(c.D$,{ignoreUnknown:!1})],d.prototype,"distanceAttributeName",void 0),(0,r._)([(0,a.Cb)({type:String,json:{write:!0}})],d.prototype,"id",void 0),(0,r._)([(0,l.r)("id",["id","itemId"])],d.prototype,"readId",null),(0,r._)([(0,n.J)(c.Ul,{ignoreUnknown:!1})],d.prototype,"impedanceAttributeName",void 0),(0,r._)([(0,a.Cb)({type:String,json:{write:!0}})],d.prototype,"name",void 0),(0,r._)([(0,a.Cb)({type:[String],json:{write:!0}})],d.prototype,"restrictionAttributeNames",void 0),(0,r._)([(0,l.r)("restrictionAttributeNames")],d.prototype,"readRestrictionAttributes",null),(0,r._)([(0,p.c)("restrictionAttributeNames")],d.prototype,"writeRestrictionAttributes",null),(0,r._)([(0,a.Cb)({type:Number,json:{write:{allowNull:!0}}})],d.prototype,"simplificationTolerance",void 0),(0,r._)([(0,n.J)(c.q$)],d.prototype,"simplificationToleranceUnits",void 0),(0,r._)([(0,n.J)(c.ZI,{ignoreUnknown:!1})],d.prototype,"timeAttributeName",void 0),(0,r._)([(0,n.J)(c.DJ)],d.prototype,"type",void 0),(0,r._)([(0,a.Cb)({type:Boolean,json:{write:!0}})],d.prototype,"useHierarchy",void 0),(0,r._)([(0,n.J)(c.ip)],d.prototype,"uturnAtJunctions",void 0),d=(0,r._)([(0,u.j)("esri.rest.support.TravelMode")],d)},16274:function(e,t,i){i.d(t,{$7:function(){return p},BW:function(){return h},D$:function(){return D},DJ:function(){return m},Dd:function(){return v},E2:function(){return I},GX:function(){return l},KA:function(){return _},Ks:function(){return j},RK:function(){return a},S7:function(){return O},SS:function(){return T},Ul:function(){return A},W7:function(){return y},WP:function(){return g},ZI:function(){return N},cW:function(){return S},dg:function(){return u},dh:function(){return n},ip:function(){return d},kL:function(){return w},no:function(){return c},oi:function(){return f},q$:function(){return o},td:function(){return C},yP:function(){return b}});var r=i(41773);const s={esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriUnknownUnits:"unknown",esriYards:"yards"},o=(0,r.w)()(s),a=(0,r.w)()({...s,esriIntFeet:"international-feet",esriIntInches:"international-inches",esriIntMiles:"international-miles",esriIntNauticalMiles:"international-nautical-miles",esriIntYards:"international-yards"}),n=(0,r.w)()({esriAcres:"international-acres",esriAcresUS:"us-acres",esriAres:"ares",esriHectares:"hectares",esriSquareCentimeters:"square-centimeters",esriSquareDecimeters:"square-decimeters",esriSquareFeet:"square-international-feet",esriSquareFeetUS:"square-us-feet",esriSquareInches:"square-international-inches",esriSquareInchesUS:"square-us-inches",esriSquareKilometers:"square-kilometers",esriSquareMeters:"square-meters",esriSquareMiles:"square-international-miles",esriSquareMilesUS:"square-us-miles",esriSquareMillimeters:"square-millimeters",esriSquareYards:"square-international-yards",esriSquareYardsUS:"square-us-yards",esriUnknownAreaUnits:"unknown"}),l=(0,r.w)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"}),u=(0,r.w)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards",esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds",esriNAUKilometersPerHour:"kilometers-per-hour",esriNAUMilesPerHour:"miles-per-hour",esriNAUUnknown:"unknown"}),p=(0,r.w)()({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTFeatureSets:"featuresets",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),c=(0,r.w)()({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"}),d=((0,r.w)()({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"}),(0,r.w)()({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"})),m=((0,r.w)()({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"}),(0,r.w)()({esriNATimeOfDayNotUsed:"not-used",esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"}),(0,r.w)()({AUTOMOBILE:"automobile",TRUCK:"truck",WALK:"walk",OTHER:"other"})),y=(0,r.w)()({0:"either-side-of-vehicle",1:"right-side-of-vehicle",2:"left-side-of-vehicle",3:"no-u-turn"},{useNumericKeys:!0}),b=(0,r.w)()({0:"stop",1:"waypoint",2:"break"},{useNumericKeys:!0}),T=(0,r.w)()({0:"ok",1:"not-located",2:"network-element-not-located",3:"element-not-traversable",4:"invalid-field-values",5:"not-reached",6:"time-window-violation",7:"not-located-on-closest"},{useNumericKeys:!0}),h=(0,r.w)()({1:"right",2:"left"},{useNumericKeys:!0}),f=(0,r.w)()({0:"restriction",1:"scaled-cost",2:"added-cost"},{useNumericKeys:!0}),v=(0,r.w)()({0:"permit",1:"restrict"},{useNumericKeys:!0}),S=(0,r.w)()({1:"header",50:"arrive",51:"depart",52:"straight",100:"on-ferry",101:"off-ferry",102:"central-fork",103:"roundabout",104:"u-turn",150:"door",151:"stairs",152:"elevator",153:"escalator",154:"pedestrian-ramp",200:"left-fork",201:"left-ramp",202:"clockwise-roundabout",203:"left-handed-u-turn",204:"bear-left",205:"left-turn",206:"sharp-left",207:"left-turn-and-immediate-left-turn",208:"left-turn-and-immediate-right-turn",300:"right-fork",301:"right-ramp",302:"counter-clockwise-roundabout",303:"right-handed-u-turn",304:"bear-right",305:"right-turn",306:"sharp-right",307:"right-turn-and-immediate-left-turn",308:"right-turn-and-immediate-right-turn",400:"up-elevator",401:"up-escalator",402:"up-stairs",500:"down-elevator",501:"down-escalator",502:"down-stairs",1e3:"general-event",1001:"landmark",1002:"time-zone-change",1003:"traffic-event",1004:"scaled-cost-barrier-event",1005:"boundary-crossing",1006:"restriction-violation",1007:"lane"},{useNumericKeys:!0}),C=(0,r.w)()({0:"unknown",1:"segment",2:"maneuver-segment",3:"restriction-violation",4:"scaled-cost-barrier",5:"heavy-traffic",6:"slow-traffic",7:"moderate-traffic"},{useNumericKeys:!0}),g=(0,r.w)()({"NA Campus":"campus","NA Desktop":"desktop","NA Navigation":"navigation"}),D=(0,r.w)()({Kilometers:"kilometers",Miles:"miles",Meters:"meters"},{ignoreUnknown:!1}),N=(0,r.w)()({Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),A=(0,r.w)()({Kilometers:"kilometers",Miles:"miles",Meters:"meters",Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),w=(0,r.w)()({"Any Hazmat Prohibited":"any-hazmat-prohibited","Avoid Carpool Roads":"avoid-carpool-roads","Avoid Express Lanes":"avoid-express-lanes","Avoid Ferries":"avoid-ferries","Avoid Gates":"avoid-gates","Avoid Limited Access Roads":"avoid-limited-access-roads","Avoid Private Roads":"avoid-private-roads","Avoid Roads Unsuitable for Pedestrians":"avoid-roads-unsuitable-for-pedestrians","Avoid Stairways":"avoid-stairways","Avoid Toll Roads":"avoid-toll-roads","Avoid Toll Roads for Trucks":"avoid-toll-roads-for-trucks","Avoid Truck Restricted Roads":"avoid-truck-restricted-roads","Avoid Unpaved Roads":"avoid-unpaved-roads","Axle Count Restriction":"axle-count-restriction","Driving a Bus":"driving-a-bus","Driving a Taxi":"driving-a-taxi","Driving a Truck":"driving-a-truck","Driving an Automobile":"driving-an-automobile","Driving an Emergency Vehicle":"driving-an-emergency-vehicle","Height Restriction":"height-restriction","Kingpin to Rear Axle Length Restriction":"kingpin-to-rear-axle-length-restriction","Length Restriction":"length-restriction","Preferred for Pedestrians":"preferred-for-pedestrians","Riding a Motorcycle":"riding-a-motorcycle","Roads Under Construction Prohibited":"roads-under-construction-prohibited","Semi or Tractor with One or More Trailers Prohibited":"semi-or-tractor-with-one-or-more-trailers-prohibited","Single Axle Vehicles Prohibited":"single-axle-vehicles-prohibited","Tandem Axle Vehicles Prohibited":"tandem-axle-vehicles-prohibited","Through Traffic Prohibited":"through-traffic-prohibited","Truck with Trailers Restriction":"truck-with-trailers-restriction","Use Preferred Hazmat Routes":"use-preferred-hazmat-routes","Use Preferred Truck Routes":"use-preferred-truck-routes",Walking:"walking","Weight Restriction":"weight-restriction"},{ignoreUnknown:!1}),O=(0,r.w)()({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),_=(0,r.w)()({esriGeometryPoint:"point",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"envelope",esriGeometryMultipoint:"multipoint"}),I=(0,r.w)()({esriNAUTCost:"cost",esriNAUTDescriptor:"descriptor",esriNAUTRestriction:"restriction",esriNAUTHierarchy:"hierarchy"}),j=(0,r.w)()({esriDSTAltName:"alt-name",esriDSTArrive:"arrive",esriDSTBranch:"branch",esriDSTCrossStreet:"cross-street",esriDSTCumulativeLength:"cumulative-length",esriDSTDepart:"depart",esriDSTEstimatedArrivalTime:"estimated-arrival-time",esriDSTExit:"exit",esriDSTGeneral:"general",esriDSTLength:"length",esriDSTServiceTime:"service-time",esriDSTStreetName:"street-name",esriDSTSummary:"summary",esriDSTTime:"time",esriDSTTimeWindow:"time-window",esriDSTToward:"toward",esriDSTViolationTime:"violation-time",esriDSTWaitTime:"wait-time"})},9350:function(e,t,i){i.d(t,{CJ:function(){return u},Rz:function(){return c},js:function(){return d},xA:function(){return l},z3:function(){return p}});i(61432);var r=i(89636),s=i(38096),o=i(19886),a=i(45433),n=i(54914);const l=o.Z.fromJSON(n.I4),u=s.Z.fromJSON(n.ET),p=r.Z.fromJSON(n.lF),c=a.Z.fromJSON(n.qP);function d(e){if(null==e)return null;switch(e.type){case"mesh":return null;case"point":case"multipoint":return l;case"polyline":return u;case"polygon":case"extent":return p}return null}o.Z.fromJSON(n.eG),s.Z.fromJSON(n.wW),r.Z.fromJSON(n.lj)},54914:function(e,t,i){i.d(t,{ET:function(){return a},I4:function(){return o},SQ:function(){return r},X1:function(){return s},eG:function(){return u},lF:function(){return n},lj:function(){return c},qP:function(){return l},wW:function(){return p}});const r=[252,146,31,255],s=[153,153,153,255],o={type:"esriSMS",style:"esriSMSCircle",size:6,color:r,outline:{type:"esriSLS",style:"esriSLSSolid",width:.75,color:[153,153,153,255]}},a={type:"esriSLS",style:"esriSLSSolid",width:.75,color:r},n={type:"esriSFS",style:"esriSFSSolid",color:[252,146,31,196],outline:{type:"esriSLS",style:"esriSLSSolid",width:.75,color:[255,255,255,191]}},l={type:"esriTS",color:[255,255,255,255],font:{family:"arial-unicode-ms",size:10,weight:"bold"},horizontalAlignment:"center",kerning:!0,haloColor:[0,0,0,255],haloSize:1,rotated:!1,text:"",xoffset:0,yoffset:0,angle:0},u={type:"esriSMS",style:"esriSMSCircle",color:[0,0,0,255],outline:null,size:10.5},p={type:"esriSLS",style:"esriSLSSolid",color:[0,0,0,255],width:1.5},c={type:"esriSFS",style:"esriSFSSolid",color:[0,0,0,255],outline:null}}}]);