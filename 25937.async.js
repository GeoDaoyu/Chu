"use strict";(self.webpackChunkscene_pro=self.webpackChunkscene_pro||[]).push([[25937],{32931:function(t,e,s){s.d(e,{kO:function(){return c},oq:function(){return a},ve:function(){return l}});var n=s(26636),r=s(71354),o=s(60508),i=s(49542);async function a(t,e,n){if("extent"===n.type)return function(t,e,s){const{width:n,height:r}=t,o=new Uint8Array(n*r),a=e.width/n,u=e.height/r;if(s.width/a<.5||s.height/u<.5)return new i.Z({pixelType:t.pixelType,width:n,height:r,mask:o,pixels:[...t.pixels]});const{xmin:l,xmax:c,ymin:p,ymax:h}=e,{xmin:m,xmax:d,ymin:f,ymax:g}=s,y=Math.max(l,m),b=Math.min(c,d),x=Math.max(p,f),w=Math.min(h,g),v=.5*a,_=.5*u;if(b-y<v||w-x<_||b<l+v||y>c-v||x>h-_||w<p+_)return new i.Z({pixelType:t.pixelType,width:n,height:r,mask:o,pixels:[...t.pixels]});const A=Math.max(0,(y-l)/a),C=Math.min(n,Math.max(0,(b-l)/a)),T=Math.max(0,(h-w)/u),P=Math.min(r,Math.max(0,(h-x)/u)),F=Math.round(A),N=Math.round(C)-1,I=Math.round(T),R=Math.round(P)-1;if(F===N&&A%1>.5&&C%1<.5||I===R&&T%1>.5&&P%1<.5)return new i.Z({pixelType:t.pixelType,width:n,height:r,mask:o,pixels:[...t.pixels]});if(0===F&&0===I&&N===n&&R===r)return t;const k=t.mask;for(let t=I;t<=R;t++)for(let e=F;e<=N;e++){const s=t*n+e;o[s]=k?k[s]:255}return new i.Z({pixelType:t.pixelType,width:n,height:r,mask:o,pixels:[...t.pixels]})}(t,e,n);const{width:r,height:o}=t,a=new Uint8Array(r*o);return(await Promise.all([s.e(9519),s.e(66288),s.e(65513),s.e(56870),s.e(60629)]).then(s.bind(s,98379))).execute(e,n)?"polyline"===n.type?function(t,e,s){const{width:n,height:r}=t,o=new Uint8Array(n*r),a=e.width/n,u=e.height/r,{xmin:l,ymax:c}=e,{paths:p}=s,h=t.mask;for(let t=0;t<p.length;t++){const e=p[t];for(let t=0;t<e.length-1;t++){const[s,i]=e[t],[p,m]=e[t+1];let d=Math.floor((c-i)/u),f=Math.floor((c-m)/u);if(f<d){const t=d;d=f,f=t}d=Math.max(0,d),f=Math.min(r-1,f);const g=(p-s)/(m-i);for(let t=d;t<=f;t++){const e=t===d?Math.max(i,m):(r+1-t)*u,c=t===f?Math.min(i,m):e-u;let y=m===i?Math.floor((s-l)/a):Math.floor((g*(e-i)+s-l)/a),b=m===i?Math.floor((p-l)/a):Math.floor((g*(c-i)+s-l)/a);if(b<y){const t=y;y=b,b=t}const x=t*n;y=Math.max(0,y),b=Math.min(n-1,b);for(let t=x+y;t<=x+b;t++)o[t]=h?h[t]:255}}}return new i.Z({pixelType:t.pixelType,width:n,height:r,mask:o,pixels:[...t.pixels]})}(t,e,n):(await Promise.all([s.e(9519),s.e(66288),s.e(65513),s.e(56870),s.e(56540)]).then(s.bind(s,52947))).execute(n,e)?t:u(t,e,n):new i.Z({pixelType:t.pixelType,width:r,height:o,mask:a,maskIsAlpha:!1,pixels:[...t.pixels]})}function u(t,e,s){if(!t)return t;const{width:n,height:r}=t,o=function(t){const{geometry:e,size:s,srcExtent:n,srcMask:r}=t,[o,i]=s;let a;const u=n.width/o,l=n.height/i,{xmin:c,ymax:p}=n;if("extent"===e.type){const t=(e.xmin-c)/u,s=(e.xmax-c)/u,n=(p-e.ymax)/l,r=(p-e.ymin)/l;a=[[[t,n],[t,r],[s,r],[s,n],[t,n]]]}else a=e.rings.map((t=>t.map((([t,e])=>[(t-c)/u,(p-e)/l]))));return function(t,e,s){const[n,r]=e,o=new OffscreenCanvas(n,r).getContext("2d");o.fillStyle="#f00",o.beginPath(),t.forEach((t=>{o.moveTo(t[0][0],t[0][1]);for(let e=0;e<t.length;e++)o.lineTo(t[e][0],t[e][1]);o.closePath()})),o.fill();const i=o.getImageData(0,0,n,r).data,a=n*r,u=new Uint8Array(a);let l=!1;for(let t=0;t<a;t++)s&&!s[t]||(i[4*t+3]>127?u[t]=255:l=!0);return l||s?u:void 0}(a,s,r)}({geometry:s,size:[n,r],srcExtent:e,srcMask:t.mask});return new i.Z({pixelType:t.pixelType,width:n,height:r,mask:o,maskIsAlpha:!1,pixels:[...t.pixels]})}function l(t,e){const{extent:s}=c(t,e,new o.Z({x:t.pixelSize.x,y:t.pixelSize.y,spatialReference:t.spatialReference})),{extent:n}=t.extent;if(s.xmax=Math.min(s.xmax,n.xmax),s.ymax=Math.min(s.ymax,n.ymax),s.xmin<s.xmax&&s.ymin<s.ymax){const{x:e,y:n}=t.pixelSize,r=Math.round(s.width/e),o=Math.round(s.height/n);t.extent=s,t.width=r,t.height=o}}function c(t,e,s,o=!0){const{spatialReference:i}=t,{x:a,y:u}=function(t,e){if(t.spatialReference.equals(e))return t;const s=(0,n.c9)(t.spatialReference),r=(0,n.c9)(e);if(s===r)return t;const o=s/r;return{x:t.x*o,y:t.y*o}}(s,i);let l,c,p;const h="extent"===e.type?e:e.extent;let{xmin:m,xmax:d,ymax:f,ymin:g}=h;const{xmin:y,ymax:b}=t.extent;return o?(m=y+(m>y?a*Math.round((m-y)/a):0),f=b-(f<b?u*Math.round((b-f)/u):0),d=y+(d>y?a*Math.round((d-y)/a):0),g=b-(g<b?u*Math.round((b-g)/u):0),l=new r.Z({xmin:m,ymax:f,xmax:d,ymin:g,spatialReference:i}),c=Math.round(l.width/a),p=Math.round(l.height/u)):(c=Math.floor((d-m)/a+.8),p=Math.floor((f-g)/u+.8),m=y+(m>y?a*Math.floor((m-y)/a+.1):0),f=b-(f<b?u*Math.floor((b-f)/u+.1):0),d=m+c*a,g=f-p*u,l=new r.Z({xmin:m,ymax:f,xmax:d,ymin:g,spatialReference:i})),{extent:l,width:c,height:p}}},25937:function(t,e,s){s.d(e,{Ue:function(){return Un},G8:function(){return En}});var n=s(92643),r=s(88194),o=s(28947),i=s(73440),a=s(17155),u=(s(61432),s(96711),s(83850),s(48023)),l=s(2003),c=s(63255);let p=class extends c.Z{constructor(){super(...arguments),this.raster=void 0}};(0,i._)([(0,a.Cb)({json:{write:!0}})],p.prototype,"raster",void 0),p=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.BaseFunctionArguments")],p);const h=p;var m;let d=m=class extends h{constructor(){super(...arguments),this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new m({raster:this.raster,raster2:this.raster2,operation:this.operation})}};(0,i._)([(0,a.Cb)({json:{write:!0}})],d.prototype,"operation",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],d.prototype,"raster2",void 0),(0,i._)([(0,a.Cb)({readOnly:!0})],d.prototype,"rasters",null),d=m=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.ArithmeticFunctionArguments")],d);const f=d;var g=s(90775),y=s(49542),b=s(11472);const x=new Set(["slope","aspect","curvature","hillshade","shadedrelief","statistics"]);let w=class extends c.Z{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0,this.id=-1,this.isNoopProcess=!1,this.rawInputBandIds=[],this.rawSourceRasterInfos=null,this.isInputBandIdsSwizzled=!1,this.swizzledBandSelection=[],this.isBranch=!1,this.isRoot=!1,this._bindingResult=null}get supportsGPU(){return this._bindingResult.supportsGPU}get flatWebGLFunctionChain(){const t=this.getWebGLProcessorDefinition();if(!t)return null;const e=[t],{parameters:s}=t;let n=s.rasters||s.raster&&[s.raster];for(;n?.length;){e.unshift(...n);const t=[];for(let e=0;e<n.length;e++){const{parameters:s}=n[e],r=s.rasters||s.raster&&[s.raster];r?.length&&t.push(...r)}n=t}for(let t=e.length-1;t>=0;t--)e[t].isNoopProcess&&e.splice(t,1);let r=!1;for(let t=0;t<e.length;t++){const s=e[t];s.id=e.length-t-1;const{rasters:n}=s.parameters;r=r||null!=n&&n.length>1}const o=e.some((({name:t})=>x.has(t.toLowerCase()))),{rawSourceRasterInfos:i}=this;return{functions:e,hasBranches:r,hasFocalFunction:o,isSourceSingleBand:1===i?.[0]?.bandCount}}bind(t,e=!1,s=-1){this.id=s+1;const n=this._getRasterValues();let r=!0;for(let s=0;s<n.length;s++){const o=n[s];if(null!=o&&this._isRasterFunctionValue(o)){const n=o.bind(t,e,this.id+s);if(!n.success)return this._bindingResult=n,n;r=r&&n.supportsGPU}}return!this.rasterInfo||e?(this.sourceRasterInfos=this._getSourceRasterInfos(t),this._bindingResult=this._bindSourceRasters(),r&&=this._bindingResult.supportsGPU,this._bindingResult.success&&(this._patchRasterInfo(),r&&this.isRoot)&&(this.processInputBandIds(),this.swizzleInputBandIds(this.rawInputBandIds)||(r=this.rawInputBandIds.length<=3)),this._bindingResult.supportsGPU=r,this._bindingResult):(this._bindingResult={success:!0,supportsGPU:!0},this._bindingResult)}process(t){const e=this._getRasterValues(),s=0===e.length?t.pixelBlocks??t.primaryPixelBlocks:e.map((e=>this._readRasterValue(e,t)));return this._processPixels({...t,pixelBlocks:s})}processInputBandIds(){const t=this._getRasterValues().filter(this._isRasterFunctionValue);if(t.length>1){const e=t.map((t=>t.processInputBandIds()));return this.rawInputBandIds=[...new Set(e.flat())],this.rawInputBandIds}const e=t[0];if(e)return this.rawInputBandIds=e.processInputBandIds(),this.rawInputBandIds;const{bandCount:s}=this.sourceRasterInfos[0],n=Array.from({length:s},((t,e)=>e));return this.rawInputBandIds=this._getInputBandIds(n),this.rawInputBandIds}swizzleInputBandIds(t){const e=this._getRasterValues().filter(this._isRasterFunctionValue);let s=!0;for(const n of e)s=n.swizzleInputBandIds(t)&&s;return!!s&&this._swizzleBandIds(t)}getPrimaryRasters(){const t=[],e=[];return this._getPrimaryRasters(this,t,e),{rasters:t,rasterIds:e}}getWebGLProcessorDefinition(){const t=this._getWebGLParameters(),{raster:e,rasters:s}=this.functionArguments;return s&&Array.isArray(s)&&s.length?(t.rasters=s.map((t=>this._isRasterFunctionValue(t)?t.getWebGLProcessorDefinition():"number"==typeof t?{name:"Constant",parameters:{value:t},pixelType:"f32",id:-1,isNoopProcess:!1}:{name:"Identity",parameters:{value:t},pixelType:"f32",id:-1,isNoopProcess:!1})),t.rasters.some((t=>null!=t))||(t.rasters=null)):this._isRasterFunctionValue(e)&&(t.raster=e.getWebGLProcessorDefinition()),{name:this.functionName,parameters:t,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}}getClippingGeometries(){const t=[];"Clip"===this.functionName&&t.push(this.functionArguments);const{raster:e,rasters:s}=this.functionArguments;if(s&&Array.isArray(s)&&s.length)s.forEach((e=>{if(this._isRasterFunctionValue(e)){const s=e.getClippingGeometries();t.push(...s)}}));else if(this._isRasterFunctionValue(e)){const s=e.getClippingGeometries();t.push(...s)}return t}_getOutputPixelType(t){return"unknown"===this.outputPixelType?t:this.outputPixelType??t}_getWebGLParameters(){return{}}_getInputBandIds(t){return t}_swizzleBandIds(t){return!0}_isInputRasterPrimaryOrConstant(){return!this._getRasterValues().some((t=>t&&"object"==typeof t&&"rasterFunction"in t&&t.rasterFunction))}_removeStatsHistColormapVAT(t){t.statistics=null,t.histograms=null,t.colormap=null,t.attributeTable=null,t.multidimensionalInfo?.variables.forEach((t=>{t.statistics=void 0,t.histograms=void 0}))}_getRasterValues(){const{rasterArgumentNames:t}=this;return"rasters"===t[0]?this.functionArguments.rasters??[]:t.flatMap((t=>this.functionArguments[t]))}_getSourceRasterInfos(t){const e=this._getRasterValues(),{rasterInfos:s,rasterIds:n}=t;if(0===e.length)return s;const r=e.map((t=>t&&"object"==typeof t&&"bind"in t&&t.rasterInfo?t.rasterInfo:"string"==typeof t&&n.includes(t)?s[n.indexOf(t)]:"number"!=typeof t?s[0]:void 0)),o=r.find((t=>t))??s[0];return r.forEach(((t,e)=>{void 0===t&&(r[e]=o)})),r}_getPrimaryRasterId(t){return t?.rasterId}_getPrimaryRasters(t,e=[],s=[]){for(let n=0;n<t.sourceRasters.length;n++){const r=t.sourceRasters[n];if("number"!=typeof r)if("bind"in r)this._getPrimaryRasters(r,e,s);else{const t=r,n=this._getPrimaryRasterId(t);if(null==n)continue;s.includes(n)||(this.mainPrimaryRasterId===n?(e.unshift(t),s.unshift(n)):(e.push(t),s.push(n)))}}}_isRasterFunctionValue(t){return null!=t&&"object"==typeof t&&"getWebGLProcessorDefinition"in t}_readRasterValue(t,e){const{primaryPixelBlocks:s}=e;if(null==t||"$$"===t){const t=s[0];return null==t?null:t.clone()}if("string"==typeof t){const n=e.primaryRasterIds.indexOf(t);return-1===n?null:s[n]}if("number"==typeof t){const e=s[0];if(null==e)return null;const{width:n,height:r,pixelType:o}=e,i=new Float32Array(n*r);i.fill(t);const a=this.sourceRasterInfos[0].bandCount,u=new Array(a).fill(i);return new y.Z({width:n,height:r,pixelType:o,pixels:u})}return t.process(e)}_patchRasterInfo(){const{rasterInfo:t}=this;if(!t?.keyProperties)return;const{bandCount:e,keyProperties:s,statistics:n,histograms:r}=t,o=s.BandProperties;o&&o.length!==e&&(t.keyProperties={...s,BandProperties:void 0}),n&&n.length!==e&&(t.statistics=n.length>e?n.slice(0,e):null),r&&r.length!==e&&(t.histograms=r.length>e?r.slice(0,e):null),s.BAND_COUNT&&Number(s.BAND_COUNT)!==e&&(t.keyProperties={...s,BAND_COUNT:"string"==typeof s.BAND_COUNT?String(e):e})}};(0,i._)([(0,a.Cb)({json:{write:!0}})],w.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],w.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],w.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}}),(0,g.p)((t=>t?.toLowerCase()))],w.prototype,"outputPixelType",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],w.prototype,"mainPrimaryRasterId",void 0),(0,i._)([(0,a.Cb)()],w.prototype,"sourceRasters",void 0),(0,i._)([(0,a.Cb)({type:[b.Z],json:{write:!0}})],w.prototype,"sourceRasterInfos",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],w.prototype,"rasterInfo",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],w.prototype,"readingBufferSize",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],w.prototype,"id",void 0),(0,i._)([(0,a.Cb)()],w.prototype,"isNoopProcess",void 0),(0,i._)([(0,a.Cb)()],w.prototype,"supportsGPU",null),(0,i._)([(0,a.Cb)()],w.prototype,"rawInputBandIds",void 0),(0,i._)([(0,a.Cb)()],w.prototype,"rawSourceRasterInfos",void 0),(0,i._)([(0,a.Cb)()],w.prototype,"isInputBandIdsSwizzled",void 0),(0,i._)([(0,a.Cb)()],w.prototype,"swizzledBandSelection",void 0),(0,i._)([(0,a.Cb)()],w.prototype,"isBranch",void 0),(0,i._)([(0,a.Cb)()],w.prototype,"isRoot",void 0),(0,i._)([(0,a.Cb)({readOnly:!0})],w.prototype,"flatWebGLFunctionChain",null),(0,i._)([(0,a.Cb)()],w.prototype,"_bindingResult",void 0),w=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.BaseRasterFunction")],w);const v=w,_={userDefined:-1,lineDetectionHorizontal:0,lineDetectionVertical:1,lineDetectionLeftDiagonal:2,lineDetectionRightDiagonal:3,gradientNorth:4,gradientWest:5,gradientEast:6,gradientSouth:7,gradientNorthEast:8,gradientNorthWest:9,smoothArithmeticMean:10,smoothing3x3:11,smoothing5x5:12,sharpening3x3:13,sharpening5x5:14,laplacian3x3:15,laplacian5x5:16,sobelHorizontal:17,sobelVertical:18,sharpen:19,sharpen2:20,pointSpread:21,none:255},A={bitwiseAnd:11,bitwiseLeftShift:12,bitwiseNot:13,bitwiseOr:14,bitwiseRightShift:15,bitwiseXOr:16,booleanAnd:17,booleanNot:18,booleanOr:19,booleanXOr:20,equalTo:24,greaterThan:28,greaterThanEqual:29,lessThan:33,lessThanEqual:34,isNull:31,notEqual:46},C={acos:6,asin:7,atan:8,atanh:9,cos:21,cosh:22,sin:51,sinh:52,tan:56,tanh:57,acosh:59,asinh:60,atan2:61},T={setNull:50,conditional:78},P={plus:1,minus:2,times:3,sqrt:4,power:5,abs:10,divide:23,exp:25,exp10:26,exp2:27,int:30,float:32,ln:35,log10:36,log2:37,mod:44,negate:45,roundDown:48,roundUp:49,square:53,floatDivide:64,floorDivide:65,...A,...C,majority:38,max:39,mean:40,med:41,min:42,minority:43,range:47,stddev:54,sum:55,variety:58,majorityIgnoreNoData:66,maxIgnoreNoData:67,meanIgnoreNoData:68,medIgnoreNoData:69,minIgnoreNoData:70,minorityIgnoreNoData:71,rangeIgnoreNoData:72,stddevIgnoreNoData:73,sumIgnoreNoData:74,varietyIgnoreNoData:75,...T},F=new Map([[C.acos,{domain:[0,Math.PI],isInteger:!1}],[C.asin,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[C.atan,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[C.cos,{domain:[-1,1],isInteger:!1}],[C.sin,{domain:[-1,1],isInteger:!1}],[A.booleanAnd,{domain:[0,1],isInteger:!0}],[A.booleanNot,{domain:[0,1],isInteger:!0}],[A.booleanOr,{domain:[0,1],isInteger:!0}],[A.booleanXOr,{domain:[0,1],isInteger:!0}],[A.equalTo,{domain:[0,1],isInteger:!0}],[A.notEqual,{domain:[0,1],isInteger:!0}],[A.greaterThan,{domain:[0,1],isInteger:!0}],[A.greaterThanEqual,{domain:[0,1],isInteger:!0}],[A.lessThan,{domain:[0,1],isInteger:!0}],[A.lessThanEqual,{domain:[0,1],isInteger:!0}],[A.isNull,{domain:[0,1],isInteger:!0}]]);function N(t){return F.get(t)}const I=[0,2,2,2,1,2,1,1,1,1,1,2,2,1,2,2,2,2,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,2,2,1,1,1,999,999,999,999,999,999,2,1,2,999,1,1,2,1,1,1,999,999,1,1,999,1,1,2,999,999,2,2,999,999,999,999,999,999,999,999,999,999,3,999,3];function R(t,e,s){const[n,r]=t,o=n.length,i=y.Z.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]+r[t]);return i}function k(t,e,s){const[n]=t,r=n.length,o=y.Z.createEmptyBand("f32",r);return o.set(n),o}function j(t,e,s){const[n]=t,r=n.length,o=y.Z.createEmptyBand(s,r);for(let t=0;t<r;t++)e&&!e[t]||(o[t]=n[t]*n[t]);return o}function S(t,e,s){const[n,r]=t,o=n.length,i=y.Z.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]-r[t]);return i}function B(t,e,s){const[n,r]=t,o=n.length,i=y.Z.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]*r[t]);return i}function M(t,e,s){const[n]=t,r=n.length,o=y.Z.createEmptyBand(s,r);for(let t=0;t<r;t++)e&&!e[t]||(o[t]=Math.sign(n[t])*Math.floor(Math.abs(n[t])));return o}function z(t,e,s){const[n,r]=t,o=n.length,i=y.Z.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]/r[t]);return i}function G(t,e,s){return z(t,e,"f32")}function D(t,e,s){const[n,r]=t,o=n.length,i=y.Z.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=Math.floor(n[t]/r[t]));return i}function O(t,e,s,n){const r=t[0],o=r.length,i=y.Z.createEmptyBand(s,o);if(n===C.atanh){for(let t=0;t<o;t++)if(e[t]){const s=r[t];Math.abs(s)>=1?e[t]=0:i[t]=Math.atanh(s)}return i}const a=n===C.asin?Math.asin:Math.acos;for(let t=0;t<o;t++)if(e[t]){const s=r[t];Math.abs(s)>1?e[t]=0:i[t]=a(s)}return i}function V(t,e,s,n){const[r]=t,o=r.length,i=y.Z.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n(r[t]));return i}function E(t,e,s,n){const[r,o]=t,i=r.length,a=y.Z.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(a[t]=n(r[t],o[t]));return a}function U(t,e,s){const[n,r]=t,o=n.length,i=y.Z.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]&r[t]);return i}function Z(t,e,s){const[n,r]=t,o=n.length,i=y.Z.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]<<r[t]);return i}function L(t,e,s){const[n]=t,r=n.length,o=y.Z.createEmptyBand(s,r);for(let t=0;t<r;t++)e&&!e[t]||(o[t]=~n[t]);return o}function W(t,e,s){const[n,r]=t,o=n.length,i=y.Z.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]|r[t]);return i}function H(t,e,s){const[n,r]=t,o=n.length,i=y.Z.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]>>r[t]);return i}function q(t,e,s){const[n,r]=t,o=n.length,i=y.Z.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]^r[t]);return i}function J(t,e,s){const[n,r]=t,o=n.length,i=y.Z.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]&&r[t]?1:0);return i}function $(t,e,s){const[n]=t,r=n.length,o=y.Z.createEmptyBand(s,r);for(let t=0;t<r;t++)e&&!e[t]||(o[t]=n[t]?0:1);return o}function X(t,e,s){const[n,r]=t,o=n.length,i=y.Z.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]||r[t]?1:0);return i}function K(t,e,s){const[n,r]=t,o=n.length,i=y.Z.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=(n[t]?1:0)^(r[t]?1:0));return i}function Q(t,e,s){const[n,r]=t,o=n.length,i=y.Z.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]===r[t]?1:0);return i}function Y(t,e,s,n){const[r]=t,o=r.length,i=y.Z.createEmptyBand(s,o),a=n===Math.E;for(let t=0;t<o;t++)e&&!e[t]||(i[t]=a?Math.exp(r[t]):n**r[t]);return i}function tt(t,e,s){return Y(t,e,s,10)}function et(t,e,s){return Y(t,e,s,2)}function st(t,e,s){return Y(t,e,s,Math.E)}function nt(t,e,s,n){const[r]=t,o=r.length,i=y.Z.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(r[t]<=0?e[t]=0:i[t]=n(r[t]));return i}function rt(t,e,s){return nt(t,e,s,Math.log10)}function ot(t,e,s){return nt(t,e,s,Math.log2)}function it(t,e,s){return nt(t,e,s,Math.log)}function at(t,e,s){const[n,r]=t,o=n.length,i=y.Z.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]>r[t]?1:0);return i}function ut(t,e,s){const[n,r]=t,o=n.length,i=y.Z.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]>=r[t]?1:0);return i}function lt(t,e,s){const[n,r]=t,o=n.length,i=y.Z.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]<r[t]?1:0);return i}function ct(t,e,s){const[n,r]=t,o=n.length,i=y.Z.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]<=r[t]?1:0);return i}function pt(t,e,s){const[n]=t,r=n.length,o=y.Z.createEmptyBand(s,r);if(!e)return o;for(let t=0;t<r;t++)o[t]=e[t]?0:1;return o}function ht(t,e,s){const[n,r]=t,o=n.length,i=y.Z.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]%r[t]);return i}function mt(t,e,s){const[n]=t,r=n.length,o=y.Z.createEmptyBand(s,r);for(let t=0;t<r;t++)e&&!e[t]||(o[t]=-n[t]);return o}function dt(t,e,s){const[n,r]=t,o=n.length,i=y.Z.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]===r[t]?0:1);return i}function ft(t,e,s){const[n,r]=t,o=n.length,i=y.Z.createEmptyBand(s,o),a=new Uint8Array(o);for(let t=0;t<o;t++)null!=e&&!e[t]||0!==n[t]||(i[t]=r[t],a[t]=255);return{band:i,mask:a}}function gt(t,e,s){const[n,r,o]=t,i=n.length,a=y.Z.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(a[t]=n[t]?r[t]:o[t]);return a}function yt(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=y.Z.createEmptyBand(s,o);for(let s=0;s<o;s++)if(!e||e[s]){let e=r[s];for(let r=1;r<n;r++){const n=t[r][s];e<n&&(e=n)}i[s]=e}return i}function bt(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=y.Z.createEmptyBand(s,o);for(let s=0;s<o;s++)if(!e||e[s]){let e=r[s];for(let r=1;r<n;r++){const n=t[r][s];e>n&&(e=n)}i[s]=e}return i}function xt(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=y.Z.createEmptyBand(s,o);for(let s=0;s<o;s++)if(!e||e[s]){let e=r[s],o=e;for(let r=1;r<n;r++){const n=t[r][s];o<n?o=n:e>n&&(e=n)}i[s]=o-e}return i}function wt(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=y.Z.createEmptyBand(s,o);for(let s=0;s<o;s++)if(!e||e[s]){let e=0;for(let r=0;r<n;r++)e+=t[r][s];i[s]=e/n}return i}function vt(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=y.Z.createEmptyBand(s,o);for(let s=0;s<o;s++)if(!e||e[s])for(let e=0;e<n;e++){const n=t[e];i[s]+=n[s]}return i}function _t(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=y.Z.createEmptyBand(s,o);for(let s=0;s<o;s++)if(!e||e[s]){const e=new Float32Array(n);let r=0;for(let o=0;o<n;o++){const n=t[o];r+=n[s],e[o]=n[s]}r/=n;let o=0;for(let t=0;t<n;t++)o+=(e[t]-r)**2;i[s]=Math.sqrt(o/n)}return i}function At(t,e,s){const n=t.length;if(n<2)return t[0];const r=Math.floor(n/2),[o]=t,i=o.length,a=y.Z.createEmptyBand(s,i),u=new Float32Array(n),l=n%2==1;for(let s=0;s<i;s++)if(!e||e[s]){for(let e=0;e<n;e++)u[e]=t[e][s];u.sort(),a[s]=l?u[r]:(u[r]+u[r-1])/2}return a}function Ct(t,e,s){const[n,r]=t;if(null==r)return n;const o=n.length,i=y.Z.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]<r[t]?n[t]:r[t]);return i}function Tt(t,e,s){const n=t.length;if(n<=2)return Ct(t,e,s);const r=t[0].length,o=y.Z.createEmptyBand(s,r),i=new Map;for(let s=0;s<r;s++)if(!e||e[s]){i.clear();for(let e=0;e<n;e++){const n=t[e][s];i.set(n,i.has(n)?i.get(n)+1:1)}let e=0,r=0;const a=[];for(const t of i.keys())e=i.get(t),e>r?(r=e,a.length=0,a.push(t)):e===r&&a.push(t);a.length>1&&a.sort(((t,e)=>t-e)),o[s]=a[0]}return o}function Pt(t,e,s){const n=t.length;if(n<=2)return Ct(t,e,s);const r=t[0].length,o=y.Z.createEmptyBand(s,r),i=new Map;for(let s=0;s<r;s++)if(!e||e[s]){i.clear();for(let e=0;e<n;e++){const n=t[e][s];i.set(n,i.has(n)?i.get(n)+1:1)}let e=0,r=t.length;const a=[];for(const t of i.keys())e=i.get(t),e<r?(r=e,a.length=0,a.push(t)):e===r&&a.push(t);a.length>1&&a.sort(((t,e)=>t-e)),o[s]=a[0]}return o}function Ft(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=y.Z.createEmptyBand(s,o),a=new Set;for(let s=0;s<o;s++)if(!e||e[s]){let e;a.clear();for(let r=0;r<n;r++)e=t[r][s],a.add(e);i[s]=a.size}return i}const Nt=new Map,It=new Map,Rt=new Map,kt=new Map;function jt(t,e,s={}){Nt.size||(Nt.set(4,Math.sqrt),Nt.set(6,Math.acos),Nt.set(7,Math.asin),Nt.set(8,Math.atan),Nt.set(9,Math.atanh),Nt.set(10,Math.abs),Nt.set(21,Math.cos),Nt.set(22,Math.cosh),Nt.set(48,Math.floor),Nt.set(49,Math.ceil),Nt.set(51,Math.sin),Nt.set(52,Math.sinh),Nt.set(56,Math.tan),Nt.set(57,Math.tanh),Nt.set(59,Math.acosh),Nt.set(60,Math.asinh),Nt.set(65,Math.floor),It.set(5,Math.pow),It.set(61,Math.atan2),Rt.set(1,R),Rt.set(2,S),Rt.set(3,B),Rt.set(11,U),Rt.set(12,Z),Rt.set(13,L),Rt.set(14,W),Rt.set(15,H),Rt.set(16,q),Rt.set(17,J),Rt.set(18,$),Rt.set(19,X),Rt.set(20,K),Rt.set(23,z),Rt.set(24,Q),Rt.set(25,st),Rt.set(26,tt),Rt.set(27,et),Rt.set(28,at),Rt.set(29,ut),Rt.set(30,M),Rt.set(31,pt),Rt.set(32,k),Rt.set(33,lt),Rt.set(34,ct),Rt.set(35,it),Rt.set(36,rt),Rt.set(37,ot),Rt.set(44,ht),Rt.set(45,mt),Rt.set(46,dt),Rt.set(53,j),Rt.set(64,G),Rt.set(65,D),Rt.set(76,gt),Rt.set(78,gt),kt.set(38,Tt),kt.set(39,yt),kt.set(40,wt),kt.set(41,At),kt.set(42,bt),kt.set(43,Pt),kt.set(47,xt),kt.set(54,_t),kt.set(55,vt),kt.set(58,Ft),kt.set(66,Tt),kt.set(67,yt),kt.set(68,wt),kt.set(69,At),kt.set(70,bt),kt.set(71,Pt),kt.set(72,xt),kt.set(73,_t),kt.set(74,vt),kt.set(75,Ft));let n=function(t,e=!1){const s=t.map((t=>t.mask)),n=s.filter((t=>null!=t)),r=t[0].pixels[0].length;if(0===n.length||e&&n.length!==s.length)return new Uint8Array(r).fill(255);const o=n[0],i=new Uint8Array(o);if(1===n.length)return i;if(!e){for(let t=1;t<n.length;t++){const e=n[t];for(let t=0;t<i.length;t++)i[t]&&(i[t]=e[t]?255:0)}return i}for(let t=1;t<n.length;t++){const e=n[t];for(let t=0;t<i.length;t++)0===i[t]&&(i[t]=e[t]?255:0)}return i}(t,e>=66&&e<=75);const{outputPixelType:r="f32"}=s,o=!kt.has(e)||s.processAsMultiband,i=o?t[0].pixels.length:1,a=[];for(let s=0;s<i;s++){const i=kt.has(e)&&!o?t.flatMap((t=>t.pixels)):t.map((t=>t.pixels[s]));let u,c=!0;if(e===T.setNull){const t=ft(i,n,r);u=t.band,n=t.mask,c=!1}else Rt.has(e)?u=Rt.get(e)(i,n,"f64"):Nt.has(e)?u=e===C.asin||e===C.acos||e===C.atanh?O(i,n,"f64",e):V(i,n,"f64",Nt.get(e)):It.has(e)?u=E(i,n,"f64",It.get(e)):kt.has(e)?u=kt.get(e)(i,n,"f64"):(u=i[0],c=!1);if(c&&e!==A.isNull&&!F.has(e)){const t=y.Z.createEmptyBand(r,u.length);n||(n=new Uint8Array(u.length).fill(255)),(0,l.xk)(u,n),(0,l.s_)(u,n,r,t),u=t}a.push(u)}const u=t[0];return new y.Z({width:u.width,height:u.height,pixelType:r,mask:e===A.isNull?null:n,pixels:a})}let St=class extends v{constructor(){super(...arguments),this.functionName="Arithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{operation:t}=this.functionArguments;if(t<1||t>6)return{success:!1,supportsGPU:!1,error:"unsupported operation"};const e=this.sourceRasterInfos[0].clone();return this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:e.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return null==e?.[0]||null==e?.[1]?null:function(t,e,s){return jt(t,e=[null,1,2,3,23,5,44][e]??1,{outputPixelType:s})}(e,this.functionArguments.operation,this.outputPixelType)}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=["","plus","minus","times","divide","power","mod"][t],s=this.outputPixelType??"f32";let[n,r]=(0,l.rL)(s);const o=(0,l.DV)(s);return o&&(n-=1e-4,r+=1e-4),{imageCount:2,operationName:e,domainRange:[n,r],isOutputRounded:o}}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],St.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:f,json:{write:!0,name:"rasterFunctionArguments"}})],St.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],St.prototype,"rasterArgumentNames",void 0),St=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.ArithmeticFunction")],St);const Bt=St;var Mt;let zt=Mt=class extends h{clone(){return new Mt({raster:this.raster})}};zt=Mt=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.AspectFunctionArguments")],zt);const Gt=zt;var Dt=s(72868);let Ot=class extends v{constructor(){super(...arguments),this.functionName="Aspect",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.isGCS=t.spatialReference?.isGeographic??!1,this.outputPixelType=this._getOutputPixelType("f32");const e=t.clone();return e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),e.statistics=[{min:-1,max:360,avg:180,stddev:30}],e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{extent:s,primaryPixelSizes:n}=t,r=n?.[0],o=r??(s?{x:s.width/e.width,y:s.height/e.height}:{x:1,y:1});return(0,Dt.M_)(e,{resolution:o})}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],Ot.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:Gt,json:{write:!0,name:"rasterFunctionArguments"}})],Ot.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],Ot.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],Ot.prototype,"isGCS",void 0),Ot=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.AspectFunction")],Ot);const Vt=Ot;var Et=s(79775),Ut=s(41773);const Zt=new Set(["+","-","*","/","(",")"]);function Lt(t,e){return t.toLowerCase().startsWith("b")?e[parseInt(t.slice(1),10)-1]:parseFloat(t)}function Wt(t,e,s,n){if("number"==typeof s&&"number"==typeof n)return s+n;let r,o,i;"number"==typeof s?(i=n,r=i.length,o=new Float32Array(r),o.fill(s)):(r=s.length,o=s,n.constructor===Number?(i=new Float32Array(r),i.fill(n)):i=n);const a=new Float32Array(r);switch(e){case"+":for(let e=0;e<r;e++)(null==t||t[e])&&(a[e]=o[e]+i[e]);break;case"-":for(let e=0;e<r;e++)(null==t||t[e])&&(a[e]=o[e]-i[e]);break;case"*":for(let e=0;e<r;e++)(null==t||t[e])&&(a[e]=o[e]*i[e]);break;case"/":for(let e=0;e<r;e++)(null==t||t[e])&&i[e]&&(a[e]=o[e]/i[e]);break;case"(":case")":throw new Error("encountered error with custom band index equation")}return a}function Ht(t,e){t.splice(e,1);let s=0,n=0;do{s=0,n=0;for(let e=0;e<t.length;e++)if("("===t[e])s=e;else if(")"===t[e]){n=e;break}n===s+1&&t.splice(s,2)}while(n===s+1);return t}function qt(t){if(1===t.length)return{opIndex:0,numIndex:0};let e=0,s=0;for(let n=0;n<t.length;n++)if("("===t[n])e=n;else if(")"===t[n]){s=n;break}const n=0===s?t:t.slice(e+1,s);let r=-1;for(let t=0;t<n.length;t++)if("*"===n[t]||"/"===n[t]){r=t;break}if(r>-1)s>0&&(r+=e+1);else{for(let t=0;t<n.length;t++)if("+"===n[t]||"-"===n[t]){r=t;break}s>0&&(r+=e+1)}let o=0;for(let e=0;e<r;e++)"("===t[e]&&o++;return{opIndex:r,numIndex:r-o}}function Jt(t,e,s){let n,{ops:r,nums:o}=function(t,e){(t=t.replaceAll(" ","")).startsWith("-")&&(t="0"+t),t.startsWith("+")&&(t=t.slice(1));const s=t.split(""),n=[],r=[];let o="";for(let t=0;t<s.length;t++){const i=s[t];Zt.has(i)?(o.length&&r.push(Lt(o,e)),n.push(i),o=""):o=o.concat(i)}return o.length&&r.push(Lt(o,e)),{ops:n,nums:r}}(s,e);if(0===r.length){const t=1===o.length?o[0]:e[0];if(t instanceof Float32Array)return[t];const s=new Float32Array(e[0].length);return"number"==typeof t?s.fill(t):s.set(t),[s]}for(;r.length>0;){const{numIndex:e,opIndex:s}=qt(r);if(n=Wt(t,r[s],o[e],o[e+1]),1===r.length)break;r=Ht(r,s),o.splice(e,2,n)}return[n]}var $t=s(91172);const Xt=new Ut.X({0:"custom",1:"ndvi",2:"savi",3:"tsavi",4:"msavi",5:"gemi",6:"pvi",7:"gvitm",8:"sultan",9:"vari",10:"gndvi",11:"sr",12:"ndvi-re",13:"sr-re",14:"mtvi2",15:"rtvi-core",16:"ci-re",17:"ci-g",18:"ndwi",19:"evi",20:"iron-oxide",21:"ferrous-minerals",22:"clay-minerals",23:"wndwi",24:"bai",25:"nbr",26:"ndbi",27:"ndmi",28:"ndsi",29:"mndwi"},{useNumericKeys:!0});function Kt(t,e){if(!(0,$t.nk)(t))return t;const{equation:s,method:n}=e,r=e.bandIndexes.map((t=>t-1)),{pixels:o,mask:i}=t;let a;switch(n){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":a=Yt(i,o[r[0]],o[r[1]]);break;case"ndwi":a=Yt(i,o[r[1]],o[r[0]]);break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":a=function(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o]){const t=e[o],n=s[o];n&&(r[o]=t/n)}return[r]}(i,o[r[0]],o[r[1]]);break;case"ci-g":case"ci-re":a=function(t,e,s){const n=e.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o]){const t=e[o],n=s[o];n&&(r[o]=t/n-1)}return[r]}(i,o[r[0]],o[r[1]]);break;case"savi":a=function(t,e,s,n){const r=s.length,o=new Float32Array(r);for(let i=0;i<r;i++)if(null==t||t[i]){const t=s[i],r=e[i],a=r+t+n;a&&(o[i]=(r-t)/a*(1+n))}return[o]}(i,o[r[0]],o[r[1]],r[2]+1);break;case"tsavi":a=function(t,e,s,n,r,o){const i=s.length,a=new Float32Array(i),u=-r*n+o*(1+n*n);for(let o=0;o<i;o++)if(null==t||t[o]){const t=s[o],i=e[o],l=r*i+t+u;l&&(a[o]=n*(i-n*t-r)/l)}return[a]}(i,o[r[0]],o[r[1]],r[2]+1,r[3]+1,r[4]+1);break;case"msavi":a=function(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o]){const t=s[o],n=e[o],i=2*n+1;r[o]=.5*(i-Math.sqrt(i*i-8*(n-t)))}return[r]}(i,o[r[0]],o[r[1]]);break;case"gemi":a=function(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o]){const t=s[o],n=e[o];if(1!==t&&n+t+.5!==0){const e=(2*(n*n-t*t)+1.5*n+.5*t)/(n+t+.5);r[o]=e*(1-.25*e)-(t-.125)/(1-t)}}return[r]}(i,o[r[0]],o[r[1]]);break;case"pvi":a=function(t,e,s,n,r){const o=s.length,i=new Float32Array(o),a=1/Math.sqrt(1+n*n);for(let u=0;u<o;u++)if(null==t||t[u]){const t=s[u],o=e[u];i[u]=(o-n*t-r)*a}return[i]}(i,o[r[0]],o[r[1]],r[2]+1,r[3]+1);break;case"gvitm":a=function(t,e){const[s,n,r,o,i,a]=e,u=s.length,l=new Float32Array(u);for(let e=0;e<u;e++)(null==t||t[e])&&(l[e]=-.2848*s[e]-.2435*n[e]-.5436*r[e]+.7243*o[e]+.084*i[e]-.18*a[e]);return[l]}(i,[o[r[0]],o[r[1]],o[r[2]],o[r[3]],o[r[4]],o[r[5]]]);break;case"sultan":a=function(t,e){const[s,n,r,o,i]=e,a=s.length,u=new Float32Array(a),l=new Float32Array(a),c=new Float32Array(a);for(let e=0;e<a;e++)(null==t||t[e])&&(u[e]=i[e]?o[e]/i[e]*100:0,l[e]=s[e]?o[e]/s[e]*100:0,c[e]=r[e]?n[e]/r[e]*(o[e]/r[e])*100:0);return[u,l,c]}(i,[o[r[0]],o[r[1]],o[r[2]],o[r[3]],o[r[4]]]);break;case"vari":a=function(t,e){const[s,n,r]=e,o=s.length,i=new Float32Array(o);for(let e=0;e<o;e++)if(null==t||t[e])for(e=0;e<o;e++){const t=s[e],o=n[e],a=o+t-r[e];a&&(i[e]=(o-t)/a)}return[i]}(i,[o[r[0]],o[r[1]],o[r[2]]]);break;case"mtvi2":a=function(t,e){const[s,n,r]=e,o=s.length,i=new Float32Array(o);for(let e=0;e<o;e++)if(null==t||t[e])for(e=0;e<o;e++){const t=s[e],o=n[e],a=r[e],u=Math.sqrt((2*t+1)**2-(6*t-5*Math.sqrt(o))-.5);if(u){const s=1.5*(1.2*(t-a)-2.5*(o-a));i[e]=s/u}}return[i]}(i,[o[r[0]],o[r[1]],o[r[2]]]);break;case"rtvi-core":a=function(t,e){const[s,n,r]=e,o=s.length,i=new Float32Array(o);for(let e=0;e<o;e++)if(null==t||t[e])for(e=0;e<o;e++){const t=s[e],o=n[e],a=r[e];i[e]=100*(t-o)-10*(t-a)}return[i]}(i,[o[r[0]],o[r[1]],o[r[2]]]);break;case"evi":a=function(t,e){const[s,n,r]=e,o=s.length,i=new Float32Array(o);for(let e=0;e<o;e++)if(null==t||t[e])for(e=0;e<o;e++){const t=s[e],o=n[e],a=t+6*o-7.5*r[e]+1;a&&(i[e]=2.5*(t-o)/a)}return[i]}(i,[o[r[0]],o[r[1]],o[r[2]]]);break;case"wndwi":a=function(t,e,s=.5){const[n,r,o]=e,i=r.length,a=new Float32Array(i);for(let e=0;e<i;e++)if(null==t||t[e])for(e=0;e<i;e++){const t=n[e],i=r[e],u=o[e],l=t+s*i+(1-s)*u;l&&(a[e]=(t-s*i-(1-s)*u)/l)}return[a]}(i,[o[r[0]],o[r[1]],o[r[2]]],r[3]?r[3]+1:.5);break;case"bai":a=function(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o])for(o=0;o<n;o++){const t=(.1-e[o])**2+(.06-s[o])**2;t&&(r[o]=1/t)}return[r]}(i,o[r[0]],o[r[1]]);break;case"custom":a=Jt(i,o,s);break;default:return t}const{outputPixelType:u="f32"}=e,c=null!=u&&(0,l.DV)(u);let p;i?(p=new Uint8Array(t.width*t.height),p.set(i)):c&&(p=new Uint8Array(t.width*t.height).fill(255)),c&&(a=a.map((t=>{const e=y.Z.createEmptyBand(u,t.length);return(0,l.s_)(t,p,u,e),e})));const h=new y.Z({width:t.width,height:t.height,pixelType:u,pixels:a,mask:p});return h.updateStatistics(),h}function Qt(t){const e=new Float32Array(9);return e[3*t[0]]=1,e[3*t[1]+1]=1,e[3*t[2]+2]=1,e}function Yt(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o]){const t=e[o],n=s[o],i=t+n;i&&(r[o]=(t-n)/i)}return[r]}var te;let ee=te=class extends h{constructor(){super(...arguments),this.method="custom"}clone(){return new te({method:this.method,bandIndexes:this.bandIndexes,raster:(0,o.d9)(this.raster)})}};(0,i._)([(0,a.Cb)({json:{type:String,write:!0}})],ee.prototype,"bandIndexes",void 0),(0,i._)([(0,Et.J)(Xt)],ee.prototype,"method",void 0),ee=te=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.BandArithmeticFunctionArguments")],ee);const se=ee,ne=new Set(["vari","mtvi2","rtvi-core","evi"]);let re=class extends v{constructor(){super(...arguments),this.functionName="BandArithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0];if(t.bandCount<2)return{success:!1,supportsGPU:!1,error:"band-arithmetic-function: source raster has insufficient amount of raster bands"};const e=t.clone();return e.pixelType=this.outputPixelType,e.bandCount="sultan"===this.functionArguments.method?3:1,this._removeStatsHistColormapVAT(e),e.keyProperties={...e.keyProperties,BandProperties:void 0},this.rasterInfo=e,{success:!0,supportsGPU:!["custom","gvitm","sultan"].includes(this.functionArguments.method)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{method:s,bandIndexes:n}=this.functionArguments,r=n.split(" ").map((t=>parseFloat(t)));return Kt(e,{method:s,bandIndexes:r,equation:n,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const t=this.functionArguments.bandIndexes.split(" ").map((t=>parseFloat(t)-1));2===t.length&&t.push(0);const e=this.isInputBandIdsSwizzled?[0,1,2]:t;let s,n;const r=new Float32Array(3),{method:o}=this.functionArguments;switch(o){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":s=Qt([e[0],e[1],0]),n="ndxi";break;case"ndwi":s=Qt([e[1],e[0],0]),n="ndxi";break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":s=Qt([e[0],e[1],0]),n="sr";break;case"ci-g":case"ci-re":s=Qt([e[0],e[1],0]),n="ci";break;case"savi":s=Qt([e[0],e[1],0]),n="savi",r[0]=t[2]+1;break;case"tsavi":s=Qt([e[0],e[1],0]),n="tsavi",r[0]=t[2]+1,r[1]=t[3]+1,r[2]=t[4]+1;break;case"msavi":s=Qt([e[0],e[1],0]),n="msavi";break;case"gemi":s=Qt([e[0],e[1],0]),n="gemi";break;case"pvi":s=Qt([e[0],e[1],0]),n="tsavi",r[0]=t[2]+1,r[1]=t[3]+1;break;case"vari":s=Qt([e[0],e[1],e[2]]),n="vari";break;case"mtvi2":s=Qt([e[0],e[1],e[2]]),n="mtvi";break;case"rtvi-core":s=Qt([e[0],e[1],e[2]]),n="rtvicore";break;case"evi":s=Qt([e[0],e[1],e[2]]),n="evi";break;case"wndwi":s=Qt([e[0],e[1],0]),n="wndwi",r[0]=t[3]?t[3]+1:.5;break;case"bai":s=Qt([e[1],e[0],0]),n="bai";break;default:s=Qt([0,1,2]),n="custom"}return{bandIndexMat3:s,indexType:n,adjustments:r,isOutputRounded:(0,l.DV)(this.outputPixelType)}}_getInputBandIds(t){if("custom"===this.functionArguments.method)return t;const e=this.functionArguments.bandIndexes.split(" ").map((t=>parseFloat(t)-1)),s=t.length,n=e.map((t=>t>=s?s-1:t)),r=ne.has(this.functionArguments.method)?3:2,o=n.slice(0,r).map((e=>t[e]));return 2===o.length&&o.push(0),o}_swizzleBandIds(t){const e=this.functionArguments.bandIndexes.split(" ").map((t=>parseFloat(t)-1));2===e.length&&e.push(0);const{method:s}=this.functionArguments,n=(["vari","mtvi2","rtvi-core","evi"].includes(s)?e.slice(0,3):"bai"===s||"ndwi"===s?[e[1],e[0]]:e.slice(0,2)).map((e=>t.indexOf(e)));return n[2]??=n[1],this.isInputBandIdsSwizzled=!0,this.swizzledBandSelection=n,!1}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],re.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:se,json:{write:!0,name:"rasterFunctionArguments"}})],re.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],re.prototype,"rasterArgumentNames",void 0),re=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.BandArithmeticFunction")],re);const oe=re;var ie,ae=s(90756),ue=s(98842);const le=new Ut.X({1:"outside",2:"inside"},{useNumericKeys:!0});let ce=ie=class extends h{constructor(){super(...arguments),this.clippingType="outside"}clone(){return new ie({clippingGeometry:this.clippingGeometry.clone(),clippingType:this.clippingType})}};(0,i._)([(0,a.Cb)({types:ue.qM,json:{read:ae.im,write:!0}})],ce.prototype,"clippingGeometry",void 0),(0,i._)([(0,a.Cb)({json:{read:le.read,write:le.write}})],ce.prototype,"clippingType",void 0),ce=ie=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.ClipFunctionArguments")],ce);const pe=ce;var he=s(32931),me=s(9524);let de=class extends v{constructor(){super(...arguments),this.functionName="Clip",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(t.pixelType),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{functionArguments:e}=this,{clippingGeometry:s,clippingType:n}=e;if(!s)return{success:!1,supportsGPU:!1,error:"missing clipping geometry"};if("outside"===n)try{const{spatialReference:e}=t,n="extent"===s.type?(0,me.tB)(s,e):(0,me.Wt)(s,e).extent;n&&(0,he.ve)(t,n)}catch{}return{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}_getWebGLParameters(){const{clippingGeometry:t,clippingType:e}=this.functionArguments;return{clippingGeometry:t.toJSON(),clippingType:e}}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],de.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:pe,json:{write:!0,name:"rasterFunctionArguments"}})],de.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],de.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.Cb)()],de.prototype,"isNoopProcess",void 0),de=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.ClipFunction")],de);const fe=de;var ge,ye=s(1194),be=s(26168),xe=s(41426);let we=ge=class extends h{castColormapName(t){if(!t)return null;const e=t.toLowerCase();return be.Oi.includes(e)?e:null}readColorRamp(t){return(0,xe.i)(t)}readColorRampName(t,e){if(!t)return null;const s=be.H0.jsonValues.find((e=>e.toLowerCase()===t.toLowerCase()));return s?be.H0.fromJSON(s):null}clone(){return new ge({colormap:(0,o.d9)(this.colormap),colormapName:this.colormapName,colorRamp:this.colorRamp?.clone(),colorRampName:this.colorRampName})}};(0,i._)([(0,a.Cb)({type:[[Number]],json:{write:!0}})],we.prototype,"colormap",void 0),(0,i._)([(0,a.Cb)({type:String,json:{write:!0}})],we.prototype,"colormapName",void 0),(0,i._)([(0,g.p)("colormapName")],we.prototype,"castColormapName",null),(0,i._)([(0,a.Cb)({types:xe.V,json:{write:!0}})],we.prototype,"colorRamp",void 0),(0,i._)([(0,ye.r)("colorRamp")],we.prototype,"readColorRamp",null),(0,i._)([(0,a.Cb)({type:be.H0.apiValues,json:{type:be.H0.jsonValues,write:be.H0.write}})],we.prototype,"colorRampName",void 0),(0,i._)([(0,ye.r)("colorRampName")],we.prototype,"readColorRampName",null),we=ge=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.ColormapFunctionArguments")],we);const ve=we,_e=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[112,75,3],[113,76,3],[114,77,3],[115,77,3],[116,78,3],[117,79,3],[118,79,3],[119,80,3],[121,81,4],[122,82,4],[123,82,4],[124,83,4],[125,84,4],[126,84,4],[127,85,4],[128,86,4],[129,86,4],[130,87,4],[131,88,4],[132,89,4],[133,89,4],[134,90,4],[135,91,4],[136,91,4],[137,92,4],[138,93,4],[139,94,4],[140,94,4],[142,95,5],[143,96,5],[144,96,5],[145,97,5],[146,98,5],[147,99,5],[148,99,5],[149,100,5],[150,101,5],[151,101,5],[152,102,5],[153,103,5],[154,104,5],[155,104,5],[156,105,5],[157,106,5],[158,106,5],[159,107,5],[160,108,5],[161,108,5],[162,109,5],[164,110,6],[165,111,6],[166,111,6],[167,112,6],[168,113,6],[169,113,6],[170,114,6],[171,115,6],[172,116,6],[173,116,6],[174,117,6],[245,0,0],[245,5,0],[245,10,0],[246,15,0],[246,20,0],[246,25,0],[246,30,0],[247,35,0],[247,40,0],[247,45,0],[247,50,0],[247,55,0],[248,60,0],[248,65,0],[248,70,0],[248,75,0],[249,81,0],[249,86,0],[249,91,0],[249,96,0],[250,101,0],[250,106,0],[250,111,0],[250,116,0],[250,121,0],[251,126,0],[251,131,0],[251,136,0],[251,141,0],[252,146,0],[252,151,0],[252,156,0],[252,156,0],[251,159,0],[250,162,0],[249,165,0],[248,168,0],[247,171,0],[246,174,0],[245,177,0],[245,179,0],[244,182,0],[243,185,0],[242,188,0],[241,191,0],[240,194,0],[239,197,0],[238,200,0],[237,203,0],[236,206,0],[235,209,0],[234,212,0],[233,215,0],[232,218,0],[231,221,0],[230,224,0],[230,226,0],[229,229,0],[228,232,0],[227,235,0],[226,238,0],[225,241,0],[224,244,0],[223,247,0],[165,247,0],[163,244,0],[161,240,0],[158,237,0],[156,233,1],[154,230,1],[152,227,1],[149,223,1],[147,220,1],[145,216,1],[143,213,1],[140,210,2],[138,206,2],[136,203,2],[134,200,2],[132,196,2],[129,193,2],[127,189,2],[125,186,3],[123,183,3],[120,179,3],[118,176,3],[116,172,3],[114,169,3],[111,166,3],[109,162,4],[107,159,4],[105,155,4],[103,152,4],[100,149,4],[98,145,4],[96,142,4],[94,138,5],[91,135,5],[89,132,5],[87,128,5],[85,125,5],[82,121,5],[80,118,5],[78,115,6],[76,111,6],[73,108,6],[71,105,6],[69,101,6],[67,98,6],[65,94,6],[62,91,7],[60,88,7],[58,84,7],[56,81,7],[53,77,7],[51,74,7],[49,71,7],[47,67,8],[44,64,8],[42,60,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8]],Ae=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[245,20,0],[245,24,0],[245,29,0],[245,31,0],[247,33,0],[247,33,0],[247,37,0],[247,41,0],[247,41,0],[247,41,0],[247,45,0],[247,45,0],[247,47,0],[247,49,0],[247,49,0],[247,54,0],[247,54,0],[247,56,0],[247,58,0],[247,58,0],[250,62,0],[250,62,0],[250,62,0],[250,67,0],[250,67,0],[250,67,0],[250,69,0],[250,71,0],[250,71,0],[250,75,0],[250,75,0],[250,78,0],[250,79,0],[250,79,0],[250,79,0],[250,81,0],[250,83,0],[250,83,0],[250,87,0],[250,87,0],[250,90,0],[250,92,0],[252,93,0],[252,93,0],[252,97,0],[252,97,0],[252,97,0],[252,97,0],[252,101,0],[252,101,0],[252,101,0],[252,101,0],[252,105,0],[252,105,0],[252,107,0],[252,109,0],[252,109,0],[252,113,13],[255,118,20],[255,119,23],[255,121,25],[255,126,33],[255,132,38],[255,133,40],[255,135,43],[255,141,48],[255,144,54],[255,150,59],[255,152,61],[255,153,64],[255,159,69],[255,163,77],[255,165,79],[255,168,82],[255,174,87],[255,176,92],[255,181,97],[255,183,99],[255,186,102],[255,191,107],[255,197,115],[255,201,120],[255,203,123],[255,205,125],[255,209,130],[255,214,138],[255,216,141],[255,218,143],[255,224,150],[255,228,156],[255,234,163],[255,236,165],[255,238,168],[255,243,173],[255,248,181],[255,252,186],[253,252,186],[250,252,187],[244,250,180],[238,247,176],[234,246,173],[231,245,169],[223,240,163],[217,237,157],[211,235,150],[205,233,146],[200,230,142],[195,227,136],[189,224,132],[184,222,126],[180,220,123],[174,217,119],[169,214,114],[163,212,108],[160,210,105],[154,207,101],[148,204,96],[143,201,93],[138,199,88],[134,197,84],[130,194,81],[126,191,77],[117,189,70],[115,186,68],[112,184,64],[106,181,60],[100,179,55],[94,176,49],[92,174,47],[90,173,45],[81,168,37],[75,166,33],[71,163,28],[66,160,24],[62,158,21],[56,156,14],[51,153,0],[51,153,0],[51,153,0],[50,150,0],[50,150,0],[50,150,0],[50,150,0],[49,148,0],[49,148,0],[49,148,0],[48,145,0],[48,145,0],[48,145,0],[48,145,0],[48,143,0],[48,143,0],[48,143,0],[48,143,0],[47,140,0],[47,140,0],[47,140,0],[47,140,0],[46,138,0],[46,138,0],[46,138,0],[46,138,0],[45,135,0],[45,135,0],[45,135,0],[45,135,0],[44,133,0],[44,133,0],[44,133,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[42,128,0],[42,128,0],[42,128,0],[42,125,0],[42,125,0],[42,125,0],[42,125,0],[41,122,0],[41,122,0],[41,122,0],[41,122,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[39,117,0],[39,117,0],[39,117,0],[39,117,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0]];function Ce(t,e){const s=[],n=[];for(let e=0;e<t.length-1;e++)s.push({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:t[e].slice(1),toColor:t[e+1].slice(1)}),n.push(t[e+1][0]-t[e][0]);const r=t[t.length-1][0];return(0,be.XL)({type:"multipart",colorRamps:s},{numColors:r,weights:e=e??n})}function Te(t){let e;switch(t){case"elevation":e=Ce([[0,0,191,191],[51,0,0,255],[102,255,0,255],[153,255,0,127],[204,191,63,127],[256,20,20,20]]);break;case"gray":e=(0,be.XL)({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:[0,0,0],toColor:[255,255,255]});break;case"hillshade":e=Ce([[0,38,41,54],[69,79,82,90],[131,156,156,156],[256,253,253,241]],[.268,.238,.495]);break;case"ndvi":e=_e;break;case"ndvi2":e=function(){const t=Ce([[0,255,255,255],[70,0,255,0],[80,205,173,193],[100,150,150,150],[110,120,51,100],[130,120,100,200],[140,28,3,144],[160,6,0,55],[180,10,25,30],[201,6,7,27]]);for(let e=t.length;e<256;e++)t.push([6,27,7]);return t}();break;case"ndvi3":e=Ae;break;case"random":e=function(){const t=[];for(let e=0;e<256;e++){const e=[];for(let t=0;t<3;t++)e.push(Math.round(255*Math.random()));t.push(e)}return t}()}return e?(e=e.map(((t,e)=>[e,...t])),e):null}let Pe=class extends v{constructor(){super(...arguments),this.functionName="Colormap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"colormap-function: source data must be single band"};let{colormap:e,colormapName:s,colorRamp:n,colorRampName:r}=this.functionArguments;if(!e?.length)if(n)this.colorRamp=n,e=(0,be.Jw)(n,{interpolateAlpha:!0});else if(r){const t=(0,be.B4)(r);t&&(e=(0,be.Jw)(t),this.colorRamp=(0,xe.i)(t))}else s&&(e=Te(s));if(!e?.length)return{success:!1,supportsGPU:!1,error:"colormap-function: missing colormap argument"};const o=this._getOutputPixelType(t.pixelType);this.outputPixelType=o.startsWith("f")?"s32":o;const i=t.clone();return i.pixelType=this.outputPixelType,i.colormap=e,i.bandCount=1,this.rasterInfo=i,{success:!0,supportsGPU:!0}}_processPixels(t){let e=t.pixelBlocks?.[0];return!e||(0,l.DV)(e.pixelType)||(e=e.clone(),e.clamp(this.outputPixelType)),e}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],Pe.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:ve,json:{write:!0,name:"rasterFunctionArguments"}})],Pe.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],Pe.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.Cb)()],Pe.prototype,"isNoopProcess",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],Pe.prototype,"indexedColormap",void 0),(0,i._)([(0,a.Cb)()],Pe.prototype,"colorRamp",void 0),Pe=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.ColormapFunction")],Pe);const Fe=Pe;var Ne,Ie=s(38248);let Re=Ne=class extends h{clone(){return new Ne({raster:this.raster})}};Re=Ne=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.ColormapToRGBFunctionArguments")],Re);const ke=Re;var je=s(54310);let Se=class extends v{constructor(){super(...arguments),this.functionName="ColormapToRGB",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1||!t.colormap?.length)return{success:!1,supportsGPU:!1,error:"colormap-to-rgb-function: source data must be single band with a colormap"};const e=t.clone();e.pixelType=this.outputPixelType=this._getOutputPixelType("u8"),this._removeStatsHistColormapVAT(e),e.bandCount=3,e.statistics=[{min:0,max:255,avg:100,stddev:20},{min:0,max:255,avg:100,stddev:20},{min:0,max:255,avg:100,stddev:20}],this.rasterInfo=e;const s=[...t.colormap].sort(((t,e)=>t[0]-e[0])),{indexedColormap:n,offset:r}=(0,$t.Pz)({colormap:s});return n?(this.lookup={indexedColormap:n,offset:r},{success:!0,supportsGPU:(0,je.zL)(n)}):{success:!1,supportsGPU:!1,error:"colormap-to-rgb-function: the colormap is not supported"}}_processPixels(t){let e=t.pixelBlocks?.[0];if(!e||!this.lookup)return e;e=e.clone();const s=e.pixels[0],n=e.mask??new Uint8Array(s.length).fill(255),r=new Uint8Array(s.length),o=new Uint8Array(s.length),i=new Uint8Array(s.length),{indexedColormap:a,offset:u}=this.lookup,l=a.length;for(let t=0;t<s.length;t++)if(n[t]){let e=4*(s[t]-u);e<0||e>l-4?n[t]=0:(r[t]=a[e++],o[t]=a[e++],i[t]=a[e++])}return e.pixels=[r,o,i],e.statistics=[new Ie.c(0,255),new Ie.c(0,255),new Ie.c(0,255)],e.pixelType=this.outputPixelType,e}_getWebGLParameters(){return this.lookup}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],Se.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:ke,json:{write:!0,name:"rasterFunctionArguments"}})],Se.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],Se.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],Se.prototype,"lookup",void 0),Se=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.ColormapToRGBFunction")],Se);const Be=Se;var Me,ze=s(29884);let Ge=Me=class extends h{constructor(){super(...arguments),this.rasters=[]}writeRasters(t,e){e.rasters=t.map((t=>"number"==typeof t||"string"==typeof t?t:t.toJSON()))}clone(){return new Me({rasters:(0,o.d9)(this.rasters)})}};(0,i._)([(0,a.Cb)({json:{write:!0}})],Ge.prototype,"rasters",void 0),(0,i._)([(0,ze.c)("rasters")],Ge.prototype,"writeRasters",null),Ge=Me=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.CompositeBandFunctionArguments")],Ge);const De=Ge;let Oe=class extends v{constructor(){super(...arguments),this.functionName="CompositeBand",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();if(s.attributeTable=null,s.colormap=null,s.pixelType=this.outputPixelType,s.bandCount=t.map((({bandCount:t})=>t)).reduce(((t,e)=>t+e)),t.every((({statistics:t})=>null!=t&&t.length))){const e=[];t.forEach((({statistics:t})=>null!=t&&e.push(...t))),s.statistics=e}if(t.every((({histograms:t})=>null!=t&&t.length))){const e=[];t.forEach((({histograms:t})=>null!=t&&e.push(...t))),s.histograms=e}s.multidimensionalInfo&&s.multidimensionalInfo.variables.forEach((e=>{const s=t.map((t=>t.multidimensionalInfo?.variables.find((({name:t})=>t===e.name)))),n=s.map((t=>t?.statistics?.length?t.statistics:null)),r=s.map((t=>t?.histograms?.length?t.histograms:null));e.statistics=n.every((t=>null!=t))?n.flat():null,e.histograms=r.every((t=>null!=t))?r.flat():null})),s.bandCount>1&&(s.colormap=null,s.attributeTable=null);const n=t.every((t=>t.keyProperties.BandProperties?.length))?t.flatMap((t=>t.keyProperties.BandProperties)):void 0;return s.keyProperties={...s.keyProperties,BandProperties:n},this.rasterInfo=s,{success:!0,supportsGPU:s.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;if(!e)return null;const s=e?.[0];return null==s?null:(0,$t.Gd)(e)}_getWebGLParameters(){return{bandCount:this.rasterInfo.bandCount}}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],Oe.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:De,json:{write:!0,name:"rasterFunctionArguments"}})],Oe.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],Oe.prototype,"rasterArgumentNames",void 0),Oe=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.CompositeBandFunction")],Oe);const Ve=Oe;var Ee=s(49651);const Ue=new Ut.X({0:"difference",1:"relative-difference",2:"categorical",3:"euclidean-distance",4:"angle-difference",5:"band-with-most-change"},{useNumericKeys:!0}),Ze=new Ut.X({0:"all",1:"changed",2:"unchanged"},{useNumericKeys:!0});function Le(t,e,s,n){const[r,o]=t,i=(0,l.DV)(s)&&!(0,l.DV)(r.pixelType)&&!(0,l.DV)(o.pixelType),a=[r.mask,o.mask].filter((t=>t)),u=y.Z.combineBandMasks(a),c=t.map((t=>t.pixels[0])),{width:p,height:h}=r,m=y.Z.createEmptyBand(s,p*h);switch(e){case"difference":case"relative-difference":!function(t){const{bands:[e,s],mask:n,isRelative:r,isRoundingNeeded:o,outBand:i}=t,a=e.length;for(let t=0;t<a;t++)if(!n||n[t]){let n=e[t]-s[t];if(r){const r=Math.max(Math.abs(e[t])-Math.abs(s[t]));n=r>0?n/r:0}i[t]=o?Math.round(n):n}}({bands:c,mask:u,outBand:m,isRoundingNeeded:i,isRelative:"relative-difference"===e});break;case"categorical":!function(t){const{bands:[e,s],categoryIndexLookups:[n,r],classNames:[o,i],mask:a,keepMethod:u,outBand:l}=t,c=e.length,p=o.length,h=i.length,m=p*h,d=m+1,f=m+2;for(let t=0;t<c;t++)if(!a||a[t]){const a=e[t],c=s[t],p=n[a],g=r[c],y=o[p],b=i[g];l[t]=null==p||null==g?m:"changed"===u&&y===b?d:"unchanged"===u&&y!==b?f:p*h+g}}({bands:c,mask:u,outBand:m,...n});break;case"euclidean-distance":!function(t){const{pixels:[e,s],mask:n,outBand:r}=t,o=e[0].length,i=e.length;for(let t=0;t<o;t++)if(!n||n[t]){let n=0;for(let r=0;r<i;r++){const o=e[r][t]-s[r][t];n+=o*o}r[t]=Math.sqrt(n)}}({pixels:t.map((t=>t.pixels)),mask:u,outBand:m});break;case"angle-difference":!function(t){const{pixels:[e,s],mask:n,outBand:r}=t,o=e[0].length,i=e.length;for(let t=0;t<o;t++)if(!n||n[t]){let n=0,o=0,a=0;for(let r=0;r<i;r++){const i=e[r][t],u=s[r][t];n+=i*u,o+=i*i,a+=u*u}const u=Math.sqrt(o*a);r[t]=u?Math.acos(n/u):1.5707963267948966}}({pixels:t.map((t=>t.pixels)),mask:u,outBand:m});break;case"band-with-most-change":!function(t){const{pixels:[e,s],mask:n,outBand:r}=t,o=e[0].length,i=e.length;for(let t=0;t<o;t++)if(!n||n[t]){let n=0,o=0;for(let r=0;r<i;r++){const i=Math.abs(e[r][t]-s[r][t]);i>n&&(n=i,o=r)}r[t]=o}}({pixels:t.map((t=>t.pixels)),mask:u,outBand:m})}const d=new y.Z({width:p,height:h,pixels:[m],pixelType:s,mask:u});return d.updateStatistics(),d}var We;let He=We=class extends h{constructor(){super(...arguments),this.method="difference",this.keepMethod="all",this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new We({raster:this.raster,raster2:this.raster2,method:this.method,keepMethod:this.keepMethod})}};(0,i._)([(0,Et.J)(Ue)],He.prototype,"method",void 0),(0,i._)([(0,Et.J)(Ze)],He.prototype,"keepMethod",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],He.prototype,"raster2",void 0),(0,i._)([(0,a.Cb)({readOnly:!0})],He.prototype,"rasters",null),He=We=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.ComputeChangeFunctionArguments")],He);const qe=He;let Je=class extends v{constructor(){super(...arguments),this.functionName="ComputeChange",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{method:t}=this.functionArguments,e=this.sourceRasterInfos[0].clone();if(this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),"categorical"===t){const t=this.sourceRasterInfos.map((t=>t.attributeTable)),s=this._getFieldNames(t,"value"),n=t.map((t=>this._getClassFieldName(t)));if(null==s[0]||null==s[1]||null==n[0]||null==n[1])return{success:!1,supportsGPU:!1,error:"both inputs must have proper attribute table with value and class fields"};this._updateAttributeTable(e,s,n)}return e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:"difference"===t||"relative-difference"===t}}_processPixels(t){const{pixelBlocks:e}=t;if(null==e?.[0]||null==e?.[1])return null;const{method:s}=this.functionArguments;return Le(e,s,this.outputPixelType,this._categoryConfig)}_getWebGLParameters(){const t=this.outputPixelType??"f32";let[e,s]=(0,l.rL)(t);const n=(0,l.DV)(t);return n&&(e-=1e-4,s+=1e-4),{method:this.functionArguments.method,domainRange:[e,s],isOutputRounded:n}}_updateAttributeTable(t,e,s){const n=this.sourceRasterInfos.map((t=>t.attributeTable)),r=n.map(((t,s)=>t.features.map((t=>t.attributes[e[s]])))),o=n.map(((t,e)=>t.features.map((t=>t.attributes[s[e]])))),i=r.map((t=>{const e=[];return t.forEach(((t,s)=>e[t]=s)),e})),{keepMethod:a}=this.functionArguments;this._categoryConfig={categoryIndexLookups:i,classNames:o,keepMethod:a};const u=n[0].clone();u.fields=[new Ee.Z({name:"OID",type:"oid"}),new Ee.Z({name:"Value",type:"integer"}),new Ee.Z({name:"ClassName",type:"string"}),new Ee.Z({name:"Class_From",type:"string"}),new Ee.Z({name:"Class_To",type:"string"})];const l=this._getFieldNames(n,"red"),c=this._getFieldNames(n,"green"),p=this._getFieldNames(n,"blue"),h=[],m=2===l.length&&2===c.length&&2===p.length;m&&(h.push(...n.map(((t,e)=>t.features.map((t=>[t.attributes[l[e]],t.attributes[c[e]],t.attributes[p[e]]]))))),u.fields.push(new Ee.Z({name:"Red",type:"integer"}),new Ee.Z({name:"Green",type:"integer"}),new Ee.Z({name:"Blue",type:"integer"})));const d=u.features[0].clone();d.geometry=null;const f=[],[g,y]=r.map((t=>t.length));let b=1;for(let t=0;t<g;t++){const e=o[0][t];for(let s=0;s<y;s++){const n=o[1][s];if("changed"===a&&e===n||"unchanged"===a&&e!==n)continue;const r=d.clone();r.attributes={OID:b++,Value:t*y+s,ClassName:e===n?e:`${e} -> ${n}`,Class_From:e,Class_To:n},m&&(r.attributes.Red=h[0][t][0]+h[1][s][0]>>1,r.attributes.Green=h[0][t][1]+h[1][s][1]>>1,r.attributes.Blue=h[0][t][2]+h[1][s][2]>>1),f.push(r)}}if("changed"===a){const t=d.clone();t.attributes={OID:b++,Value:g*y+1,ClassName:"No Change",Class_From:"Same",Class_To:"Same"},f.push(t)}else if("unchanged"===a){const t=d.clone();t.attributes={OID:b++,Value:g*y+2,ClassName:"Changed",Class_From:"Any",Class_To:"Any"},f.push(t)}u.features=f,t.attributeTable=u}_getFieldNames(t,e){return t.map((({fields:t})=>t.find((t=>t.name.toLowerCase()===e))?.name)).filter((t=>t))}_getClassFieldName(t){const e=t.fields.find((t=>"string"===t.type&&t.name.toLowerCase().startsWith("class")))??t.fields.find((t=>"string"===t.type&&t.name.toLowerCase().includes("class")||t.name.toLowerCase().includes("type")||t.name.toLowerCase().includes("name")))??t.fields.find((t=>"string"===t.type));return e?.name}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],Je.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:qe,json:{write:!0,name:"rasterFunctionArguments"}})],Je.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],Je.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],Je.prototype,"_categoryConfig",void 0),Je=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.ComputeChangeFunction")],Je);const $e=Je;var Xe;let Ke=Xe=class extends h{constructor(){super(...arguments),this.contrastOffset=0,this.brightnessOffset=0}clone(){return new Xe({contrastOffset:this.contrastOffset,brightnessOffset:this.brightnessOffset,raster:this.raster})}};(0,i._)([(0,a.Cb)({json:{write:!0}})],Ke.prototype,"contrastOffset",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],Ke.prototype,"brightnessOffset",void 0),Ke=Xe=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.ContrastBrightnessFunctionArguments")],Ke);const Qe=Ke;var Ye=s(13381);let ts=class extends v{constructor(){super(...arguments),this.functionName="ContrastBrightness",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];if("u8"!==e.pixelType)return{success:!1,supportsGPU:!1,error:"Only unsigned 8 bit raster is supported by ContrastBrightness function."};this.outputPixelType=this._getOutputPixelType("u8");const s=e.clone();this._removeStatsHistColormapVAT(s),this.rasterInfo=s;const{contrastOffset:n,brightnessOffset:r}=this.functionArguments;return this.lookup=(0,Ye.gI)(n,r),{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];return null==e?null:(0,$t.XV)(e,{lut:e.pixels.map((()=>this.lookup)),offset:0,outputPixelType:"u8"})}_getWebGLParameters(){const{contrastOffset:t,brightnessOffset:e}=this.functionArguments;return{contrastOffset:t,brightnessOffset:e}}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],ts.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:Qe,json:{write:!0,name:"rasterFunctionArguments"}})],ts.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],ts.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],ts.prototype,"lookup",void 0),ts=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.ContrastBrightnessFunction")],ts);const es=ts;function ss(t,e,s,n,r){const o=Math.floor(n/2);for(let n=0;n<o;n++)for(let o=0;o<e;o++)t[n*e+o]=t[(r-1-n)*e+o],t[(s-1-n)*e+o]=t[(s-r+n)*e+o];const i=Math.floor(r/2);for(let n=0;n<s;n++){const s=n*e;for(let n=0;n<i;n++)t[s+n]=t[s+r-1-n],t[s+e-n-1]=t[s+e+n-r]}}const ns=new Map;function rs(t,e,s,n,r,o,i){const a=new Float32Array(e*s),u=o.length,l=i?0:n,c=i?n:0,p=i?1:e;for(let i=l;i<s-l;i++){const s=i*e;for(let i=c;i<e-c;i++){if(r&&!r[s+i])continue;let e=0;for(let r=0;r<u;r++)e+=t[s+i+(r-n)*p]*o[r];a[s+i]=e}}return a}function os(t,e,s,n,r,o,i){const a=new Float32Array(e*s),u=Math.floor(n/2),l=Math.floor(r/2);for(let c=u;c<s-u;c++){const s=c*e;for(let c=l;c<e-l;c++){if(o&&!o[s+c])continue;let p=0;for(let o=0;o<n;o++)for(let n=0;n<r;n++)p+=t[s+c+(o-u)*e+n-l]*i[o*r+n];a[s+c]=p}}return a}function is(t,e){const s=function(t){const e=Math.sqrt(t.length),s=t.slice(0,e),n=[1];for(let s=1;s<e;s++){let r=null;for(let n=0;n<e;n++){const o=t[n+s*e],i=t[n];if(null==r)if(0===i){if(o)return{separable:!1,row:null,col:null}}else r=o/i;else if(o/i!==r)return{separable:!1,row:null,col:null}}if(null==r)return{separable:!1,row:null,col:null};n.push(r)}return{separable:!0,row:s,col:n}}(e.kernel),n=!1!==e.mirrorEdges,r=s.separable?function(t,e,s,n=!0){const{pixels:r,width:o,height:i,pixelType:a,mask:u}=t,l=r.length,c=[],p=e.length,h=s.length,m=Math.floor(p/2),d=Math.floor(h/2);for(let t=0;t<l;t++){let a=rs(r[t],o,i,m,u,e,!0);a=rs(a,o,i,d,u,s,!1),n&&ss(a,o,i,p,h),c.push(a)}return new y.Z({width:o,height:i,pixelType:a,pixels:c,mask:u})}(t,s.row,s.col,n):function(t,e,s=!0){const{pixels:n,width:r,height:o,pixelType:i,mask:a}=t,u=n.length,l=[],{kernel:c,rows:p,cols:h}=e;for(let t=0;t<u;t++){const e=os(n[t],r,o,p,h,a,c);s&&ss(e,r,o,p,h),l.push(e)}return new y.Z({width:r,height:o,pixelType:i,pixels:l,mask:a})}(t,e,n),{outputPixelType:o}=e;return o&&r.clamp(o),r}var as;ns.set(_.none,[0,0,0,0,1,0,0,0,0]),ns.set(_.lineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]),ns.set(_.lineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]),ns.set(_.lineDetectionLeftDiagonal,[2,-1,-1,-1,2,-1,-1,-1,2]),ns.set(_.lineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]),ns.set(_.gradientNorth,[-1,-2,-1,0,0,0,1,2,1]),ns.set(_.gradientWest,[-1,0,1,-2,0,2,-1,0,1]),ns.set(_.gradientEast,[1,0,-1,2,0,-2,1,0,-1]),ns.set(_.gradientSouth,[1,2,1,0,0,0,-1,-2,-1]),ns.set(_.gradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]),ns.set(_.gradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]),ns.set(_.smoothArithmeticMean,[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]),ns.set(_.smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]),ns.set(_.smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]),ns.set(_.sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]),ns.set(_.sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]),ns.set(_.laplacian3x3,[0,-1,0,-1,4,-1,0,-1,0]),ns.set(_.laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]),ns.set(_.sobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]),ns.set(_.sobelVertical,[-1,0,1,-2,0,2,-1,0,1]),ns.set(_.sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]),ns.set(_.sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]),ns.set(_.pointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]);let us=as=class extends h{constructor(){super(...arguments),this.rows=3,this.cols=3,this.kernel=[0,0,0,0,1,0,0,0,0]}set convolutionType(t){this._set("convolutionType",t);const e=ns.get(t);if(!e||t===_.userDefined||t===_.none)return;const s=Math.sqrt(e.length);this._set("kernel",e),this._set("cols",s),this._set("rows",s)}clone(){return new as({cols:this.cols,rows:this.rows,kernel:[...this.kernel],convolutionType:this.convolutionType,raster:(0,o.d9)(this.raster)})}};(0,i._)([(0,a.Cb)({json:{type:Number,write:!0}})],us.prototype,"rows",void 0),(0,i._)([(0,a.Cb)({json:{type:Number,write:!0}})],us.prototype,"cols",void 0),(0,i._)([(0,a.Cb)({json:{name:"type",type:Number,write:!0}})],us.prototype,"convolutionType",null),(0,i._)([(0,a.Cb)({json:{type:[Number],write:!0}})],us.prototype,"kernel",void 0),us=as=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.ConvolutionFunctionArguments")],us);const ls=us;let cs=class extends v{constructor(){super(...arguments),this.functionName="Convolution",this.rasterArgumentNames=["raster"]}get _normalizedKernel(){const{kernel:t,convolutionType:e}=this.functionArguments,s=t.reduce(((t,e)=>t+e));return-1===e||0===s||1===s?t:t.map((t=>t/s))}_bindSourceRasters(){const{convolutionType:t,rows:e,cols:s,kernel:n}=this.functionArguments;if(!Object.values(_).includes(t))return{success:!1,supportsGPU:!1,error:`convolution-function: the specified kernel type is not supported ${t}`};if(t!==_.none&&e*s!==n.length)return{success:!1,supportsGPU:!1,error:"convolution-function: the specified rows and cols do not match the length of the kernel"};const r=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(r.pixelType);const o=r.clone();o.pixelType=this.outputPixelType;const i=[_.none,_.sharpen,_.sharpen2,_.sharpening3x3,_.sharpening5x5];return(-1===t||"u8"!==this.outputPixelType&&!i.includes(t))&&(o.statistics=null,o.histograms=null),o.colormap=null,o.attributeTable=null,this.rasterInfo=o,{success:!0,supportsGPU:n.length<=25}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e||this.functionArguments.convolutionType===_.none)return e;const{rows:s,cols:n}=this.functionArguments,{_normalizedKernel:r}=this;return is(e,{kernel:r,rows:s,cols:n,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const t=new Float32Array(25),{rows:e,cols:s}=this.functionArguments,{_normalizedKernel:n}=this;for(let r=0;r<e;r++)for(let e=0;e<s;e++)t[5*r+e]=n[r*s+e];return{kernelRows:e,kernelCols:s,kernel:t,clampRange:(0,l.rL)(this.outputPixelType)}}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],cs.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:ls,json:{write:!0,name:"rasterFunctionArguments"}})],cs.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],cs.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.Cb)()],cs.prototype,"_normalizedKernel",null),cs=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.ConvolutionFunction")],cs);const ps=cs;var hs;const ms=new Ut.X({0:"standard",1:"planform",2:"profile"},{useNumericKeys:!0});let ds=hs=class extends h{constructor(){super(...arguments),this.curvatureType="standard",this.zFactor=1}readCurvatureType(t,e){return ms.fromJSON(e.type??e.curvatureType??0)}clone(){return new hs({curvatureType:this.curvatureType,zFactor:this.zFactor,raster:this.raster})}};(0,i._)([(0,a.Cb)({json:{write:{target:"type"}}}),(0,Et.J)(ms)],ds.prototype,"curvatureType",void 0),(0,i._)([(0,ye.r)("curvatureType",["type","curvatureType"])],ds.prototype,"readCurvatureType",null),(0,i._)([(0,a.Cb)({type:Number,json:{write:!0}})],ds.prototype,"zFactor",void 0),ds=hs=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.CurvatureFunctionArguments")],ds);const fs=ds;let gs=class extends v{constructor(){super(...arguments),this.functionName="Curvature",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.bandCount=1,this._removeStatsHistColormapVAT(t),this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{zFactor:s,curvatureType:n}=this.functionArguments,{extent:r,primaryPixelSizes:o}=t,i=o?.[0],a=i??(r?{x:r.width/e.width,y:r.height/e.height}:{x:1,y:1}),u=this.isGCS&&s>=1?s*Dt._p:s;return(0,Dt.Ne)(e,{zFactor:u,curvatureType:n,resolution:a})}_getWebGLParameters(){const{zFactor:t,curvatureType:e}=this.functionArguments;return{curvatureType:e,zFactor:this.isGCS&&t>=1?t*Dt._p:t}}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],gs.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:fs,json:{write:!0,name:"rasterFunctionArguments"}})],gs.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],gs.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],gs.prototype,"isGCS",void 0),gs=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.CurvatureFunction")],gs);const ys=gs;var bs;let xs=bs=class extends h{constructor(){super(...arguments),this.bandIds=[],this.bandNames=[],this.bandWavelengths=[],this.missingBandAction=$t.CD.bestMatch}clone(){return new bs({bandIds:this.bandIds?.slice(),bandNames:this.bandNames?.slice(),bandWavelengths:this.bandWavelengths?.slice(),missingBandAction:this.missingBandAction,method:this.method,wavelengthMatchTolerance:this.wavelengthMatchTolerance})}};(0,i._)([(0,a.Cb)({json:{write:!0}})],xs.prototype,"bandIds",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],xs.prototype,"bandNames",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],xs.prototype,"bandWavelengths",void 0),(0,i._)([(0,Et.J)({0:"name",1:"wavelength",2:"id"})],xs.prototype,"method",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],xs.prototype,"missingBandAction",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],xs.prototype,"wavelengthMatchTolerance",void 0),xs=bs=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.ExtractBandFunctionArguments")],xs);const ws=xs;let vs=class extends v{constructor(){super(...arguments),this.functionName="ExtractBand",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{functionArguments:t,sourceRasterInfos:e}=this,s=e[0],{method:n,bandNames:r,bandWavelengths:o,bandIds:i,missingBandAction:a}=t,u=r?.length&&("name"===n||"id"!==n&&!i?.length),l=o?.length&&("wavelength"===n||"id"!==n&&!i?.length),c=a===$t.CD.fail,p=u?function(t,e){const s=t.bandInfos.map((({name:t})=>t.toLowerCase())),n=[];for(let t=0;t<e.length;t++){const r=e[t].toLowerCase();let o=s.indexOf(r);if(-1===o&&"nearinfrared"===r&&(o=s.findIndex((t=>t.startsWith("nearinfrared_1"))),-1===o&&(o=s.findIndex((t=>t.startsWith("nearinfrared"))))),-1===o)return null;n.push(o)}return n}(s,r):l?function(t,e,{wavelengthMatchTolerance:s},n){const{bandInfos:r}=t,o=[];for(let t=0;t<r.length;t++){const{minWavelength:e,maxWavelength:s}=r[t];if(!e||!s)return null;o.push({minWavelength:e,maxWavelength:s})}const i=[];for(let t=0;t<e.length;t++){const r=e[t];let a=!1,u=-1,l=Number.MAX_VALUE;for(let t=0;t<o.length;t++){const e=o[t],s=r>=e.minWavelength&&r<=e.maxWavelength,n=Math.abs(r-(e.minWavelength+e.maxWavelength)/2);s?n<l&&(a=!0,u=t,l=n):!a&&n<l&&(u=t,l=n)}if(!a&&s&&l<s&&(a=!0),!a&&n)return null;i.push(u)}return i}(s,o,this.functionArguments,c):function(t,e,s){const{bandCount:n}=t;return!e?.length||s&&e.some((t=>t<0||t>=n))?null:e}(s,i,c);if(null==p)return{success:!1,supportsGPU:!1,error:`extract-band-function: Invalid ${u?"band names":l?"band wavelengths":"band ids"} for the imagery data source`};this.functionArguments.bandIds=p,this.functionArguments.method="id",this.outputPixelType=this._getOutputPixelType("f32");const h=s.clone();h.pixelType=this.outputPixelType,h.bandCount=p.length;const{statistics:m,histograms:d}=h;null!=m&&m.length&&(h.statistics=p.map((t=>m[t]||m[m.length-1]))),null!=d&&d.length&&(h.histograms=p.map((t=>d[t]||d[d.length-1]))),h.multidimensionalInfo&&h.multidimensionalInfo.variables.forEach((t=>{const{statistics:e,histograms:s}=t;null!=e&&e.length&&(t.statistics=p.map((t=>e[t]||e[e.length-1]))),null!=s&&s.length&&(t.histograms=p.map((t=>s[t]||s[s.length-1])))}));let f=h.keyProperties?.BandProperties;return f?.length&&(f=p.map((t=>t>=f.length?f[f.length-1]:f[t])),h.keyProperties={...h.keyProperties,BandProperties:f}),this.rasterInfo=h,{success:!0,supportsGPU:h.bandCount<=3}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const s=e.pixels.length,n=this.functionArguments.bandIds.map((t=>t>=s?s-1:t));return e.extractBands(n)}_getWebGLParameters(){let t;if(this.isInputBandIdsSwizzled)t=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{t=[...this.functionArguments.bandIds],0===t.length?t=[0,1,2]:t.length<3&&(t[1]=t[1]??t[0],t[2]=t[2]??t[1]);for(let e=0;e<3;e++)t[e]=Math.min(t[e],2)}return{bandIndexMat3:Qt(t)}}_getInputBandIds(t){const e=t.length;return this.functionArguments.bandIds.map((t=>t>=e?e-1:t)).map((e=>t[e]))}_swizzleBandIds(t){const e=this.functionArguments.bandIds.map((e=>t.indexOf(e)));return this.isInputBandIdsSwizzled=!0,e[1]??=e[0],e[2]??=e[1],this.swizzledBandSelection=e,!1}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],vs.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:ws,json:{write:!0,name:"rasterFunctionArguments"}})],vs.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],vs.prototype,"rasterArgumentNames",void 0),vs=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.ExtractBandFunction")],vs);const _s=vs;var As;let Cs=As=class extends h{clone(){return new As({conversionParameters:[...this.conversionParameters],raster:this.raster})}};(0,i._)([(0,a.Cb)({type:[Number],json:{write:!0}})],Cs.prototype,"conversionParameters",void 0),Cs=As=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.GrayscaleFunctionArguments")],Cs);const Ts=Cs;let Ps=class extends v{constructor(){super(...arguments),this.functionName="Grayscale",this.functionArguments=null,this.rasterArgumentNames=["raster"]}get _normalizedWeights(){const{conversionParameters:t}=this.functionArguments,e=t.reduce(((t,e)=>t+e));return t.map((t=>t/e))}_bindSourceRasters(){const{conversionParameters:t}=this.functionArguments;if(!t?.length)return{success:!1,supportsGPU:!1,error:"missing valid conversion parameters."};const e=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType;const s=3===t.length||3===e.bandCount&&t.length>3;return e.bandCount=1,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:s}}_processPixels(t){const e=t.pixelBlocks?.[0];return null==e?null:function(t,e,s){const{pixels:n,width:r,height:o,mask:i,bandMasks:a}=t,u=r*o,c=a?.length?y.Z.combineBandMasks(a):i,p=Math.min(e.length,n.length),h=s.startsWith("f"),m=!h&&s!==t.pixelType,[d,f]=(0,l.rL)(s),g=y.Z.createEmptyBand(s,u);for(let t=0;t<o;t++){let s=t*r;for(let t=0;t<r;t++,s++)if(!c||c[s]){let t=0;for(let r=0;r<p;r++)t+=e[r]*n[r][s];h||(t=Math.round(t),m&&(t=t>f?f:t<d?d:t)),g[s]=t}}const b=new y.Z({width:r,height:o,pixels:[g],pixelType:s,mask:c});return b.updateStatistics(),b}(e,this._normalizedWeights,this.outputPixelType)}_getWebGLParameters(){return{weights:this._normalizedWeights}}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],Ps.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:Ts,json:{write:!0,name:"rasterFunctionArguments"}})],Ps.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],Ps.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.Cb)()],Ps.prototype,"_normalizedWeights",null),Ps=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.GrayscaleFunction")],Ps);const Fs=Ps;var Ns;const Is=new Ut.X({0:"traditional",1:"multi-directional"},{useNumericKeys:!0}),Rs=new Ut.X({1:"degree",2:"percent-rise",3:"scaled"},{useNumericKeys:!0});let ks=Ns=class extends h{constructor(){super(...arguments),this.altitude=45,this.azimuth=315,this.hillshadeType="traditional",this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.slopeType="degree",this.zFactor=1,this.removeEdgeEffect=!1}clone(){return new Ns({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,slopeType:this.slopeType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};(0,i._)([(0,a.Cb)({type:Number,json:{write:!0}})],ks.prototype,"altitude",void 0),(0,i._)([(0,a.Cb)({type:Number,json:{write:!0}})],ks.prototype,"azimuth",void 0),(0,i._)([(0,a.Cb)(),(0,Et.J)(Is)],ks.prototype,"hillshadeType",void 0),(0,i._)([(0,a.Cb)({type:Number,json:{write:!0,name:"psPower"}})],ks.prototype,"pixelSizePower",void 0),(0,i._)([(0,a.Cb)({type:Number,json:{write:!0,name:"psZFactor"}})],ks.prototype,"pixelSizeFactor",void 0),(0,i._)([(0,a.Cb)(),(0,Et.J)(Rs)],ks.prototype,"slopeType",void 0),(0,i._)([(0,a.Cb)({type:Number,json:{write:!0}})],ks.prototype,"zFactor",void 0),(0,i._)([(0,a.Cb)({type:Boolean,json:{write:!0}})],ks.prototype,"removeEdgeEffect",void 0),ks=Ns=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.HillshadeFunctionArguments")],ks);const js=ks;let Ss=class extends v{constructor(){super(...arguments),this.functionName="Hillshade",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"hillshade-function: source data must be single band"};this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone();return this._removeStatsHistColormapVAT(e),e.pixelType=this.outputPixelType,e.bandCount=1,e.statistics=[{min:0,max:255,avg:60,stddev:10}],this.rasterInfo=e,this.isGCS=e.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(!e)return null;const{extent:s,primaryPixelSizes:n}=t,r=n?.[0],o=r??(s?{x:s.width/e.width,y:s.height/e.height}:{x:1,y:1}),i=(0,Dt.tu)(this.functionArguments,o,this.isGCS),a=(0,Dt.vC)(e,i);return a.pixelType=this.outputPixelType,a}_getWebGLParameters(){const t=(0,Dt.tu)(this.functionArguments,{x:1,y:1},this.isGCS),e=(0,Dt.TK)(t),{slopeType:s,zFactor:n,pixelSizeFactor:r,pixelSizePower:o}=this.functionArguments,i="scaled"===s,a=(0,l.DV)(this.outputPixelType);return{...e,zFactor:n,gcsFactor:this.isGCS?Dt._p:1,pixelSizeFactor:i?r:0,pixelSizePower:i?o:0,isOutputRounded:a}}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],Ss.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:js,json:{write:!0,name:"rasterFunctionArguments"}})],Ss.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],Ss.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],Ss.prototype,"isGCS",void 0),Ss=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.HillshadeFunction")],Ss);const Bs=Ss;var Ms;let zs=Ms=class extends h{constructor(){super(...arguments),this.rasters=[],this.processAsMultiband=!0}writeRasters(t,e){e.rasters=t.map((t=>"number"==typeof t||"string"==typeof t?t:t.toJSON()))}clone(){return new Ms({operation:this.operation,processAsMultiband:this.processAsMultiband,rasters:(0,o.d9)(this.rasters)})}};(0,i._)([(0,a.Cb)({json:{write:!0}})],zs.prototype,"operation",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],zs.prototype,"rasters",void 0),(0,i._)([(0,ze.c)("rasters")],zs.prototype,"writeRasters",null),(0,i._)([(0,a.Cb)({json:{write:!0}})],zs.prototype,"processAsMultiband",void 0),zs=Ms=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.LocalFunctionArguments")],zs);const Gs=zs;let Ds=class extends v{constructor(){super(...arguments),this.functionName="Local",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0],{bandCount:s}=e,{processAsMultiband:n}=this.functionArguments;if(t.some((t=>t.bandCount!==s)))return{success:!1,supportsGPU:!1,error:"local-function: input rasters do not have same band count"};const{operation:r,rasters:o}=this.functionArguments,i=I[r];if(!(999===i||o.length===i||o.length<=1&&1===i))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${i}`};const a=e.clone();return a.bandCount=999!==i||n?s:1,this._removeStatsHistColormapVAT(a),this._updateStatistics(a),this._updatePixelType(a),this.rasterInfo=a,{success:!0,supportsGPU:1===a.bandCount&&i<=3}}_processPixels(t){const{pixelBlocks:e}=t;return null==e||e.some((t=>null==t))?null:jt(e,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=I[t],s=Object.keys(P).find((e=>P[e]===t))?.toLowerCase()??"undefined",n=this.outputPixelType??"f32";let[r,o]=(0,l.rL)(n);const i=(0,l.DV)(n);return i&&(r-=1e-4,o+=1e-4),{imageCount:e,operationName:s,domainRange:[r,o],isOutputRounded:i}}_updateStatistics(t){const e=this.sourceRasterInfos[0],{operation:s}=this.functionArguments,n=N(s)?.domain;if(n){t.statistics=[];for(let e=0;e<t.bandCount;e++)t.statistics[e]={min:n[0],max:n[1],avg:(n[0]+n[1])/2,stddev:(n[0]+n[1])/10}}else 45===s&&e.statistics?.length&&(t.statistics=e.statistics.map((t=>({min:-t.max,max:-t.min,avg:null!=t.avg?-t.avg:void 0,stddev:null!=t.stddev?-t.stddev:void 0}))))}_updatePixelType(t){const{statistics:e,pixelType:s}=this.sourceRasterInfos[0],{operation:n}=this.functionArguments,{domain:r,isInteger:o}=N(n)??{domain:null,isInteger:!1};let i="f32";if(r&&o)i=(0,l.JQ)(r[0],r[1]);else if(30===n){const t=e?.[0];i=t?(0,l.JQ)(t.min,t.max):(0,l.DV)(s)?s:"s32"}else if(45===n&&(0,l.DV)(s)){const t=e?.map((({max:t})=>-t)),n=e?.map((({min:t})=>-t)),r=t?.length?Math.min(...t):null,o=n?.length?Math.min(...n):null;i=null!=r&&null!=o?(0,l.JQ)(r,o):s.startsWith("s")?s.replace("s","u"):"u1"===s||"u2"===s||"u4"===s?"s8":"u8"===s?"s16":"s32"}t.pixelType=this.outputPixelType=this._getOutputPixelType(i)}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],Ds.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:Gs,json:{write:!0,name:"rasterFunctionArguments"}})],Ds.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],Ds.prototype,"rasterArgumentNames",void 0),Ds=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.LocalFunction")],Ds);const Os=Ds;var Vs,Es=s(99574);let Us=Vs=class extends h{constructor(){super(...arguments),this.includedRanges=null,this.noDataValues=null,this.noDataInterpretation=$t.DX.matchAny}get normalizedNoDataValues(){const{noDataValues:t}=this;if(!t?.length)return null;let e=!1;const s=t.map((t=>{if("number"==typeof t)return e=!0,[t];if("string"==typeof t){const s=t.trim().split(" ").filter((t=>""!==t.trim())).map((t=>Number(t)));return e=e||s.length>0,0===s.length?null:s}return null}));return e?s:null}clone(){return new Vs({includedRanges:this.includedRanges?.slice()??[],noDataValues:this.noDataValues?.slice()??[],noDataInterpretation:this.noDataInterpretation})}};(0,i._)([(0,a.Cb)({json:{write:!0}})],Us.prototype,"includedRanges",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],Us.prototype,"noDataValues",void 0),(0,i._)([(0,a.Cb)()],Us.prototype,"normalizedNoDataValues",null),(0,i._)([(0,a.Cb)({json:{write:!0}})],Us.prototype,"noDataInterpretation",void 0),Us=Vs=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.MaskFunctionArguments")],Us);const Zs=Us;let Ls=class extends v{constructor(){super(...arguments),this.functionName="Mask",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{includedRanges:s,normalizedNoDataValues:n}=this.functionArguments;if(!s?.length&&!n?.length)return{success:!1,supportsGPU:!1,error:"missing includedRanges or noDataValues argument"};let r=[];for(let o=0;o<t.bandCount;o++){const t=(0,$t.nA)(e,s?.slice(2*o,2*o+2),n?.[o]);if(null==t){r=null;break}r.push(t)}this.lookups=r;const o=null!=n&&n.every((t=>t?.length===n[0]?.length));return{success:!0,supportsGPU:(!s||s.length<=2*$t.$f)&&(!n||o&&n[0].length<=$t.$f)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{outputPixelType:s,lookups:n}=this,{includedRanges:r,noDataInterpretation:o,normalizedNoDataValues:i}=this.functionArguments,a=o===$t.DX.matchAll;return(0,$t.sS)(e,{includedRanges:r,noDataValues:i,outputPixelType:s,matchAll:a,lookups:n})}_getWebGLParameters(){const{includedRanges:t,normalizedNoDataValues:e}=this.functionArguments,s=new Float32Array($t.$f);s.fill(Es.F3),e?.[0]?.length&&s.set(e[0]);const n=new Float32Array(6);for(let e=0;e<n.length;e+=2)n[e]=t?.[e]??-Es.F3,n[e+1]=t?.[e+1]??Es.F3;return t?.length&&n.set(t),{bandCount:this.sourceRasterInfos[0].bandCount,noDataValues:s,includedRanges:n}}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],Ls.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:Zs,json:{write:!0,name:"rasterFunctionArguments"}})],Ls.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],Ls.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],Ls.prototype,"lookups",void 0),Ls=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.MaskFunction")],Ls);const Ws=Ls;var Hs;let qs=Hs=class extends h{constructor(){super(...arguments),this.visibleBandID=0,this.infraredBandID=1,this.scientificOutput=!1}clone(){const{visibleBandID:t,infraredBandID:e,scientificOutput:s}=this;return new Hs({visibleBandID:t,infraredBandID:e,scientificOutput:s})}};(0,i._)([(0,a.Cb)({json:{write:!0}})],qs.prototype,"visibleBandID",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],qs.prototype,"infraredBandID",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],qs.prototype,"scientificOutput",void 0),qs=Hs=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.NDVIFunctionArguments")],qs);const Js=qs;let $s=class extends v{constructor(){super(...arguments),this.functionName="NDVI",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{scientificOutput:t,visibleBandID:e,infraredBandID:s}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(t?"f32":"u8");const n=this.sourceRasterInfos[0],r=Math.max(e,s);if(n.bandCount<2||r>=n.bandCount)return{success:!1,supportsGPU:!1,error:"ndvi-function: source raster has insufficient amount of raster bands"};if(e<0||s<0)return{success:!1,supportsGPU:!1,error:"ndvi-function: invalid visible or infrared band id"};const o=n.clone();o.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(o),o.bandCount=1,o.keyProperties={...o.keyProperties,BandProperties:void 0};const[i,a,u,l]=t?[-1,1,0,.1]:[0,200,100,10];return o.statistics=[{min:i,max:a,avg:u,stddev:l}],this.rasterInfo=o,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{visibleBandID:s,infraredBandID:n,scientificOutput:r}=this.functionArguments;return function(t,e,s,n){const{mask:r,pixels:o,width:i,height:a}=t,u=o[s],l=o[e],c=l.length,p=n?new Uint8Array(c):new Float32Array(c),h=n?100:1,m=n?100.5:0;for(let t=0;t<c;t++)if(null==r||r[t]){const e=u[t],s=l[t],n=e+s;n&&(p[t]=(e-s)/n*h+m)}const d=new y.Z({width:i,height:a,mask:r,pixelType:n?"u8":"f32",pixels:[p]});return d.updateStatistics(),d}(e,s,n,!r)}_getWebGLParameters(){const{visibleBandID:t,infraredBandID:e,scientificOutput:s}=this.functionArguments;return{bandIndexMat3:Qt(this.isInputBandIdsSwizzled?[0,1,2]:[e,t,0]),scaled:!s}}_getInputBandIds(t){const{visibleBandID:e,infraredBandID:s}=this.functionArguments;return[s,e,0].map((e=>t[e]))}_swizzleBandIds(t){const{visibleBandID:e,infraredBandID:s}=this.functionArguments,n=[e,s].map((e=>t.indexOf(e)));return n[2]=n[1],this.isInputBandIdsSwizzled=!0,this.swizzledBandSelection=n,!1}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],$s.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:Js,json:{write:!0,name:"rasterFunctionArguments"}})],$s.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],$s.prototype,"rasterArgumentNames",void 0),$s=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.NDVIFunction")],$s);const Xs=$s;var Ks;let Qs=Ks=class extends h{constructor(){super(...arguments),this.inputRanges=null,this.outputValues=null,this.noDataRanges=null,this.allowUnmatched=!1,this.isLastInputRangeInclusive=!1}clone(){return new Ks({inputRanges:[...this.inputRanges],outputValues:[...this.outputValues],noDataRanges:[...this.noDataRanges],allowUnmatched:this.allowUnmatched,isLastInputRangeInclusive:this.isLastInputRangeInclusive})}};(0,i._)([(0,a.Cb)({json:{write:!0}})],Qs.prototype,"inputRanges",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],Qs.prototype,"outputValues",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],Qs.prototype,"noDataRanges",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],Qs.prototype,"allowUnmatched",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],Qs.prototype,"replacementValue",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],Qs.prototype,"isLastInputRangeInclusive",void 0),Qs=Ks=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.RemapFunctionArguments")],Qs);const Ys=Qs;let tn=class extends v{constructor(){super(...arguments),this.functionName="Remap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;t.bandCount=1;const{statistics:s}=t;this._removeStatsHistColormapVAT(t);const{allowUnmatched:n,replacementValue:r,outputValues:o,inputRanges:i,noDataRanges:a,isLastInputRangeInclusive:u}=this.functionArguments,c="unknown"===this.outputPixelType||null==this.outputPixelType;if(this.outputPixelType=this._getOutputPixelType(e),o?.length){const i=s?.[0];if(n&&null==r){let e=i?.min??o[0],s=i?.max??o[0];e=Math.min.apply(null,[...o,e]),s=Math.max.apply(null,[...o,s]),t.statistics=[{min:e,max:s,avg:i?.avg??0,stddev:i?.stddev??-1}]}else{let e=o[0],s=e;for(let t=0;t<o.length;t++)e=e>o[t]?o[t]:e,s=s>o[t]?s:o[t];n&&null!=r&&(e=Math.min(e,r),s=Math.max(s,r)),t.statistics=[{min:e,max:s,avg:i?.avg??0,stddev:i?.stddev??-1}]}if(c){const{min:s,max:i}=t.statistics[0],a=["u8","s8","u16","s16","u32","s32","f32"],u=a.find((t=>{const[e,n]=(0,l.rL)(t);return s>=e&&i<=n}))??"f64";o.some((t=>Math.floor(t)!==t))?this.outputPixelType="f64"===u?"f64":"f32":this.outputPixelType=n&&null==r&&a.indexOf(e)>a.indexOf(u)?e:u}}return t.pixelType=this.outputPixelType,this.rasterInfo=t,this.lookup=n?null:(0,$t.oB)({srcPixelType:e,inputRanges:i,outputValues:o,noDataRanges:a,allowUnmatched:n,isLastInputRangeInclusive:u,outputPixelType:this.outputPixelType}),{success:!0,supportsGPU:(!o||o.length<=$t.$f)&&(!a||a.length<=$t.$f)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{lookup:s,outputPixelType:n}=this;if(s){const t=(0,$t.XV)(e,{lut:[s.lut],offset:s.offset,outputPixelType:n});return null!=t&&s.mask&&(t.mask=(0,$t.wV)(e.pixels[0],e.mask,s.mask,s.offset,"u8")),t}const{inputRanges:r,outputValues:o,noDataRanges:i,allowUnmatched:a,isLastInputRangeInclusive:u,replacementValue:l}=this.functionArguments;return(0,$t.a2)(e,{inputRanges:r,outputValues:o,noDataRanges:i,outputPixelType:n,allowUnmatched:a,isLastInputRangeInclusive:u,replacementValue:l})}_getWebGLParameters(){const{allowUnmatched:t,noDataRanges:e,isLastInputRangeInclusive:s}=this.functionArguments,n=this.functionArguments.inputRanges??[],r=this.functionArguments.outputValues??[],o=(0,$t.RP)(n,r,s),i=new Float32Array(2*$t.$f);return i.fill(Es.F3),e?.length&&i.set(e),{allowUnmatched:t,rangeMaps:o,noDataRanges:i,clampRange:(0,l.rL)(this.outputPixelType),replacementValue:this.functionArguments.replacementValue}}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],tn.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:Ys,json:{write:!0,name:"rasterFunctionArguments"}})],tn.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],tn.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],tn.prototype,"lookup",void 0),tn=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.RemapFunction")],tn);const en=tn;var sn;let nn=sn=class extends js{readColorRamp(t){if("string"==typeof t){const e=be.H0.jsonValues.find((e=>e.toLowerCase()===t.toLowerCase()));return e?(0,be.B4)(be.H0.fromJSON(e)):null}return"toJSON"in t?t.toJSON():t}clone(){return new sn({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,slopeType:this.slopeType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,removeEdgeEffect:this.removeEdgeEffect,colorRamp:this.colorRamp,colormap:this.colormap,raster:this.raster})}};(0,i._)([(0,a.Cb)({json:{write:!0}})],nn.prototype,"colorRamp",void 0),(0,i._)([(0,ye.r)("colorRamp")],nn.prototype,"readColorRamp",null),(0,i._)([(0,a.Cb)({type:[[Number]],json:{write:!0}})],nn.prototype,"colormap",void 0),nn=sn=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.ShadedReliefFunctionArguments")],nn);const rn=nn;let on=class extends v{constructor(){super(...arguments),this.functionName="ShadedRelief",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: source data must be single band"};let{colorRamp:e,colormap:s}=this.functionArguments;if(!e&&!s?.length)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: a color ramp argument must be specified"};this.outputPixelType=this._getOutputPixelType("u8");const n=t.clone();this._removeStatsHistColormapVAT(n),n.pixelType=this.outputPixelType,n.bandCount=3,n.statistics=[{min:0,max:255,avg:60,stddev:10},{min:0,max:255,avg:60,stddev:10},{min:0,max:255,avg:60,stddev:10}],this.rasterInfo=n,this.isGCS=n.spatialReference?.isGeographic??!1,s?.length||(s=(0,be.Jw)(e,{interpolateAlpha:!0}));const{indexedColormap:r,offset:o}=(0,$t.Pz)({colormap:s});if(!r?.length)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: a valid colorramp is required"};const i=(0,be.fY)(r);return this.lookup={indexedColormap:r,offset:o,hsvMap:i},{success:!0,supportsGPU:(0,je.zL)(r)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(!e||!this.lookup)return null;let s=t.primaryPixelSizes?.[0];if(null==s){const{extent:n}=t;s=n?{x:n.width/e.width,y:n.height/e.height}:{x:1,y:1}}const n=(0,Dt.tu)(this.functionArguments,s,this.isGCS),r=(0,Dt.vC)(e,n),o=this.sourceRasterInfos[0].statistics?.[0]??{min:0,max:8e3};return(0,Dt.Ub)(r,e,this.lookup.hsvMap,o),r.pixelType=this.outputPixelType,r}_getWebGLParameters(){const t=(0,Dt.tu)(this.functionArguments,{x:1,y:1},this.isGCS),e=(0,Dt.TK)(t),{slopeType:s,zFactor:n,pixelSizeFactor:r,pixelSizePower:o}=this.functionArguments,i="scaled"===s,{indexedColormap:a,offset:u}=this.lookup,c=this.sourceRasterInfos[0].statistics?.[0],p=(0,l.DV)(this.outputPixelType);return{...e,indexedColormap:a,offset:u,zFactor:n,gcsFactor:this.isGCS?Dt._p:1,pixelSizeFactor:i?r:0,pixelSizePower:i?o:0,minValue:c?.min??0,maxValue:c?.max??8e3,isOutputRounded:p}}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],on.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:rn,json:{write:!0,name:"rasterFunctionArguments"}})],on.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],on.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],on.prototype,"isGCS",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],on.prototype,"lookup",void 0),on=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.ShadedReliefFunction")],on);const an=on;var un;const ln=new Ut.X({1:"degree",2:"percent-rise",3:"adjusted"},{useNumericKeys:!0});let cn=un=class extends h{constructor(){super(...arguments),this.slopeType="degree",this.zFactor=1,this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.removeEdgeEffect=!1}clone(){return new un({slopeType:this.slopeType,zFactor:this.zFactor,pixelSizePower:this.pixelSizePower,pixelSizeFactor:this.pixelSizeFactor,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};(0,i._)([(0,Et.J)(ln)],cn.prototype,"slopeType",void 0),(0,i._)([(0,a.Cb)({type:Number,json:{write:!0}})],cn.prototype,"zFactor",void 0),(0,i._)([(0,a.Cb)({type:Number,json:{name:"psPower",write:!0}})],cn.prototype,"pixelSizePower",void 0),(0,i._)([(0,a.Cb)({type:Number,json:{name:"psZFactor",write:!0}})],cn.prototype,"pixelSizeFactor",void 0),(0,i._)([(0,a.Cb)({type:Boolean,json:{write:!0}})],cn.prototype,"removeEdgeEffect",void 0),cn=un=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.SlopeFunctionArguments")],cn);const pn=cn;let hn=class extends v{constructor(){super(...arguments),this.functionName="Slope",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(t),t.statistics="percent-rise"!==this.functionArguments.slopeType?[{min:0,max:90,avg:1,stddev:1}]:null,t.bandCount=1,this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{zFactor:s,slopeType:n,pixelSizePower:r,pixelSizeFactor:o}=this.functionArguments,{isGCS:i}=this,{extent:a,primaryPixelSizes:u}=t,l=u?.[0],c=l??(a?{x:a.width/e.width,y:a.height/e.height}:{x:1,y:1});return(0,Dt.yg)(e,{zFactor:s,slopeType:n,pixelSizePower:r,pixelSizeFactor:o,isGCS:i,resolution:c})}_getWebGLParameters(){const{zFactor:t,slopeType:e,pixelSizeFactor:s,pixelSizePower:n}=this.functionArguments;return{zFactor:this.isGCS&&t>=1?t*Dt._p:t,slopeType:e,pixelSizeFactor:s??0,pixelSizePower:n??0,isOutputRounded:(0,l.DV)(this.outputPixelType)}}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],hn.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:pn,json:{write:!0,name:"rasterFunctionArguments"}})],hn.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],hn.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],hn.prototype,"isGCS",void 0),hn=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.SlopeFunction")],hn);const mn=hn,dn=new Ut.X({1:"min",2:"max",3:"mean",4:"stddev",5:"median",6:"majority",7:"minority"},{useNumericKeys:!0});function fn(t,e){const{fillNoDataOnly:s}=e,{band:n,width:r,height:o,mask:i,outBand:a}=t;if(s&&!i)return void a.set(n);const{statisticsType:u,kernelRows:l,kernelCols:c}=e,p="stddev"===u,h=r*o,m=new Float64Array(h),d=new Float64Array(h),f=new Uint32Array(h);for(let t=0;t<o;t++){const e=t*r;let s=0,o=0,a=0;for(let t=0;t<c;t++)i&&!i[e+t]||(s+=n[e+t],p&&(o+=n[e+t]**2),a++);m[e]=s,d[e]=o,f[e]=a;for(let t=1;t<=r-c;t++){const r=e+t-1,u=r+c;i?(i[r]&&(a--,s-=n[r],p&&(o-=n[r]**2)),i[u]&&(a++,s+=n[u],p&&(o+=n[u]**2))):(s-=n[r],s+=n[u],p&&(o-=n[r]**2,o+=n[u]**2)),m[e+t]=s,f[e+t]=a,p&&(d[e+t]=o)}}const g=new Float64Array(h),y=new Float64Array(h),b=new Uint32Array(h),x=l*r;for(let t=0;t<=r-c;t++){let e=0,s=0,n=0;for(let o=0;o<l;o++){const i=o*r+t;e+=m[i],n+=f[i],p&&(s+=d[i])}g[t]=e,y[t]=s,b[t]=n;for(let i=1;i<=o-l;i++){const o=(i-1)*r+t,a=o+x;e-=m[o],e+=m[a],n-=f[o],n+=f[a],p&&(s-=d[o],s+=d[a]),g[i*r+t]=e,y[i*r+t]=s,b[i*r+t]=n}}const w=Math.floor(l/2),v=Math.floor(c/2);for(let t=w;t<o-w;t++){const e=t*r;for(let n=v;n<r-v;n++){const o=(t-w)*r+n-v,u=b[o];if(0===u||s&&(!i||i[e+n]))continue;const l=g[o]/u,c=p?Math.sqrt((y[o]-g[o]*l)/u):l;a[e+n]=c,i&&(i[e+n]=255)}}}function gn(t,e){const{fillNoDataOnly:s}=e,{band:n,width:r,height:o,mask:i,outBand:a}=t;if(s&&!i)return void a.set(n);const{kernelRows:u,kernelCols:l,statisticsType:c}=e,p=Math.floor(u/2),h=Math.floor(l/2),m="min"===c,d=a.slice(),f=new Uint32Array(r*o);for(let t=p;t<o-p;t++){const e=t*r;for(let t=h;t<r-h;t++){let s=m?Number.MAX_VALUE:-Number.MAX_VALUE,o=0;for(let a=0;a<u;a++)for(let u=0;u<l;u++){const l=e+t+(a-p)*r+u-h;i&&!i[l]||(s=m?Math.min(s,n[l]):Math.max(s,n[l]),o++)}i?(d[e+t]=0===o?0:s,f[e+t]=o):a[e+t]=0===o?0:s}}if(i)for(let t=p;t<o-p;t++){const e=t*r;for(let t=h;t<r-h;t++)if(f[e+t]){if(s&&i[e+t])continue;a[e+t]=d[e+t],i[e+t]=255}}}function yn(t,e){const{fillNoDataOnly:s}=e,{band:n,width:r,height:o,mask:i,outBand:a}=t;if(s&&!i)return void a.set(n);const{kernelRows:u,kernelCols:l}=e,c=Math.floor(u/2),p=Math.floor(l/2),h=a.slice(),m=new Uint32Array(r*o);for(let t=c;t<o-c;t++){const e=t*r;for(let t=p;t<r-p;t++){if(s&&i?.[e+t])continue;const o=[];for(let s=0;s<u;s++)for(let a=0;a<l;a++){const u=e+t+(s-c)*r+a-p;i&&!i[u]||o.push(n[u])}o.length&&(o.sort(((t,e)=>t-e)),i?(h[e+t]=o[Math.floor((o.length-1)/2)],m[e+t]=o.length):a[e+t]=o[Math.floor((o.length-1)/2)])}}if(i)for(let t=c;t<o-c;t++){const e=t*r;for(let t=p;t<r-p;t++)if(m[e+t]){if(s&&i[e+t])continue;a[e+t]=h[e+t],i[e+t]=255}}}function bn(t,e){const{fillNoDataOnly:s}=e,{band:n,width:r,height:o,mask:i,outBand:a}=t;if(s&&!i)return void a.set(n);const{kernelRows:u,kernelCols:l}=e,c=Math.floor(u/2),p=Math.floor(l/2),h="majority"===e.statisticsType,m=u*l,d=a.slice(),f=new Uint32Array(r*o);for(let t=c;t<o-c;t++){const e=t*r;for(let t=p;t<r-p;t++){if(s&&i?.[e+t])continue;const o=new Map;for(let s=0;s<u;s++)for(let a=0;a<l;a++){const u=e+t+(s-c)*r+a-p;if(i&&!i[u])continue;const l=n[u];o.set(l,o.has(l)?o.get(l)+1:1)}if(0===o.size)continue;let g=0,y=0,b=h?0:m+1;for(const t of o.keys())y=o.get(t),h===y>b&&(b=y,g=t);i?(d[e+t]=g,f[e+t]=o.size):a[e+t]=g}}if(i)for(let t=c;t<o-c;t++){const e=t*r;for(let t=p;t<r-p;t++)if(f[e+t]){if(s&&i[e+t])continue;a[e+t]=d[e+t],i[e+t]=255}}}var xn;let wn=xn=class extends h{constructor(){super(...arguments),this.rows=3,this.cols=3,this.fillNoDataOnly=!1,this.statisticsType="min"}clone(){return new xn({rows:this.rows,cols:this.cols,fillNoDataOnly:this.fillNoDataOnly,statisticsType:this.statisticsType,raster:(0,o.d9)(this.raster)})}};(0,i._)([(0,a.Cb)({json:{write:!0,read:{source:["kernelRows","rows"],reader:(t,e)=>Number(t??e?.kernelRows??3)}}})],wn.prototype,"rows",void 0),(0,i._)([(0,a.Cb)({json:{write:!0,read:{source:["kernelCols","cols"],reader:(t,e)=>Number(t??e?.kernelCols??3)}}})],wn.prototype,"cols",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],wn.prototype,"fillNoDataOnly",void 0),(0,i._)([(0,a.Cb)({json:{read:{source:["statisticsType","type"],reader:(t,e)=>dn.fromJSON(e?.statisticsType??e?.type)??"min"},write:{target:"type"}}}),(0,Et.J)(dn)],wn.prototype,"statisticsType",void 0),wn=xn=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.StatisticsFunctionArguments")],wn);const vn=wn;let _n=class extends v{constructor(){super(...arguments),this.functionName="Statistics",this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{type:t}=this.functionArguments.toJSON();if(t<1||t>7)return{success:!1,supportsGPU:!1,error:`statistics-function: the given statistics type is not supported ${t}`};const e=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();s.pixelType=this.outputPixelType;const{statisticsType:n}=this.functionArguments;return"stddev"===n&&this._removeStatsHistColormapVAT(s),this.rasterInfo=s,{success:!0,supportsGPU:s.bandCount<=3&&t<5}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{statisticsType:s,rows:n,cols:r,fillNoDataOnly:o}=this.functionArguments;return function(t,e){const{mask:s}=t,{fillNoDataOnly:n}=e;if(n&&!s)return t;const{pixels:r,width:o,height:i,bandMasks:a,pixelType:u}=t,l=r.length,c=o*i,p=[],{kernelRows:h,kernelCols:m,statisticsType:d,mirrorEdges:f}=e;if(n&&!s)return t;const g=e.outputPixelType??u,b=[];for(let t=0;t<l;t++){const u=r[t],l=y.Z.createEmptyBand(g,c);n&&l.set(u);const x=(a?.[t]??s)?.slice()??null,w={band:u,width:o,height:i,mask:x,outBand:l};switch(d){case"min":case"max":gn(w,e);break;case"mean":case"stddev":fn(w,e);break;case"median":yn(w,e);break;case"majority":case"minority":bn(w,e)}f&&!n&&ss(l,o,i,h,m),p.push(l),x&&b.push(x)}let x=b[0]??s;b.length!==l&&(b.length=0),l>1&&a?.length&&(x=y.Z.combineBandMasks(a));const w=new y.Z({pixelType:g,width:o,height:i,pixels:p,bandMasks:a&&b.length?b:null,mask:x});return w.updateStatistics(),w}(e,{kernelRows:n,kernelCols:r,fillNoDataOnly:o,outputPixelType:this.outputPixelType,statisticsType:s,mirrorEdges:!0})}_getWebGLParameters(){const{rows:t,cols:e,statisticsType:s,fillNoDataOnly:n}=this.functionArguments;return{fillNoDataOnly:n,kernelRows:t,kernelCols:e,statisticsType:s,clampRange:(0,l.rL)(this.outputPixelType)}}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],_n.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:vn,json:{write:!0,name:"rasterFunctionArguments"}})],_n.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],_n.prototype,"rasterArgumentNames",void 0),_n=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.StatisticsFunction")],_n);const An=_n;var Cn;let Tn=Cn=class extends h{constructor(){super(...arguments),this.statistics=null,this.histograms=null}readStatistics(t,e){if(!t?.length)return null;const s=[];return t.forEach((t=>{const e={min:t.min,max:t.max,avg:t.avg??t.mean,stddev:t.stddev??t.standardDeviation};s.push(e)})),s}writeStatistics(t,e,s){if(!t?.length)return;const n=[];t.forEach((t=>{const e={...t,mean:t.avg,standardDeviation:t.stddev};delete e.avg,delete e.stddev,n.push(e)})),e[s]=n}clone(){return new Cn({statistics:(0,o.d9)(this.statistics),histograms:(0,o.d9)(this.histograms)})}};(0,i._)([(0,a.Cb)({json:{write:!0}})],Tn.prototype,"statistics",void 0),(0,i._)([(0,ye.r)("statistics")],Tn.prototype,"readStatistics",null),(0,i._)([(0,ze.c)("statistics")],Tn.prototype,"writeStatistics",null),(0,i._)([(0,a.Cb)({json:{write:!0}})],Tn.prototype,"histograms",void 0),Tn=Cn=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.StatisticsHistogramFunctionArguments")],Tn);const Pn=Tn;let Fn=class extends v{constructor(){super(...arguments),this.functionName="StatisticsHistogram",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone(),{statistics:s,histograms:n}=this.functionArguments;return n&&(e.histograms=n),s&&(e.statistics=s),this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],Fn.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:Pn,json:{write:!0,name:"rasterFunctionArguments"}})],Fn.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],Fn.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],Fn.prototype,"indexedColormap",void 0),(0,i._)([(0,a.Cb)()],Fn.prototype,"isNoopProcess",void 0),Fn=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.StatisticsHistogramFunction")],Fn);const Nn=Fn;var In;const Rn=new Ut.X({0:"none",3:"standard-deviation",4:"histogram-equalization",5:"min-max",6:"percent-clip",9:"sigmoid"},{useNumericKeys:!0});let kn=In=class extends h{constructor(){super(...arguments),this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.histograms=null,this.statistics=null,this.stretchType="none",this.useGamma=!1}writeStatistics(t,e,s){t?.length&&(Array.isArray(t[0])||(t=t.map((t=>[t.min,t.max,t.avg,t.stddev]))),e[s]=t)}clone(){return new In({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:(0,o.d9)(this.statistics),gamma:(0,o.d9)(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,histograms:(0,o.d9)(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment,raster:this.raster})}};(0,i._)([(0,a.Cb)({type:Boolean,json:{write:!0}})],kn.prototype,"computeGamma",void 0),(0,i._)([(0,a.Cb)({type:Boolean,json:{name:"dra",write:!0}})],kn.prototype,"dynamicRangeAdjustment",void 0),(0,i._)([(0,a.Cb)({type:[Number],json:{write:!0}})],kn.prototype,"gamma",void 0),(0,i._)([(0,a.Cb)()],kn.prototype,"histograms",void 0),(0,i._)([(0,a.Cb)({type:Number,json:{write:!0}})],kn.prototype,"maxPercent",void 0),(0,i._)([(0,a.Cb)({type:Number,json:{write:!0}})],kn.prototype,"minPercent",void 0),(0,i._)([(0,a.Cb)({type:Number,json:{write:!0}})],kn.prototype,"numberOfStandardDeviations",void 0),(0,i._)([(0,a.Cb)({type:Number,json:{name:"max",write:!0}})],kn.prototype,"outputMax",void 0),(0,i._)([(0,a.Cb)({type:Number,json:{name:"min",write:!0}})],kn.prototype,"outputMin",void 0),(0,i._)([(0,a.Cb)({type:Number,json:{write:!0}})],kn.prototype,"sigmoidStrengthLevel",void 0),(0,i._)([(0,a.Cb)({json:{type:[[Number]],write:!0}})],kn.prototype,"statistics",void 0),(0,i._)([(0,ze.c)("statistics")],kn.prototype,"writeStatistics",null),(0,i._)([(0,Et.J)(Rn)],kn.prototype,"stretchType",void 0),(0,i._)([(0,a.Cb)({type:Boolean,json:{write:!0}})],kn.prototype,"useGamma",void 0),kn=In=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.StretchFunctionArguments")],kn);const jn=kn;let Sn=class extends v{constructor(){super(...arguments),this.functionName="Stretch",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null,this.cutOffs=null}_bindSourceRasters(){this.lookup=null,this.cutOffs=null;const t=this.sourceRasterInfos[0],{pixelType:e}=t,{functionArguments:s}=this,{dynamicRangeAdjustment:n,gamma:r,useGamma:o}=s;if(!n&&["u8","u16","s8","s16"].includes(e)){const n=(0,Ye.AV)(s.toJSON(),{rasterInfo:t}),i=(0,l.DV)(this.outputPixelType)?"round":"float";this.lookup=(0,Ye.hE)({pixelType:e,...n,gamma:o?r:null,rounding:i}),this.cutOffs=n}else n||(this.cutOffs=(0,Ye.AV)(s.toJSON(),{rasterInfo:t}));this.outputPixelType=this._getOutputPixelType(e);const i=t.clone();i.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(i),"u8"===this.outputPixelType&&(i.keyProperties.DataType="processed");const{outputMin:a=0,outputMax:u=255}=this.functionArguments;i.statistics=[];for(let t=0;t<i.bandCount;t++)i.statistics[t]={min:a,max:u};return this.rasterInfo=i,{success:!0,supportsGPU:!n}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{lookup:s}=this;if(s)return(0,$t.XV)(e,{...s,outputPixelType:this.rasterInfo.pixelType});const{functionArguments:n}=this,r=this.cutOffs||(0,Ye.AV)(n.toJSON(),{rasterInfo:this.sourceRasterInfos[0],pixelBlock:e}),o=n.useGamma?n.gamma:null;return(0,Ye.dy)(e,{...r,gamma:o,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const{outputMin:t=0,outputMax:e=255,gamma:s,useGamma:n}=this.functionArguments,r=this.rasterInfo.bandCount>=2?3:1,o=n&&s?.length?(0,Ye.um)(r,s):[1,1,1],{minCutOff:i,maxCutOff:a}=this.cutOffs??{minCutOff:[0,0,0],maxCutOff:[255,255,255]};1===i.length&&(i[1]=i[2]=i[0],a[1]=a[2]=a[0]);const u=a.map(((s,n)=>(e-t)/(a[n]-i[n]))),c=(0,l.DV)(this.outputPixelType),p=n&&s?[s[0],s[1]??s[0],s[2]??s[0]]:[1,1,1],h=n?[o[0],o[1]??o[0],o[2]??o[0]]:[1,1,1];return{bandCount:r,minOutput:t,maxOutput:e,minCutOff:i,maxCutOff:a,factor:u,useGamma:n,gamma:p,gammaCorrection:h,stretchType:this.functionArguments.stretchType,isOutputRounded:c,type:"stretch"}}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],Sn.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:jn,json:{write:!0,name:"rasterFunctionArguments"}})],Sn.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],Sn.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],Sn.prototype,"lookup",void 0),(0,i._)([(0,a.Cb)({json:{write:!0}})],Sn.prototype,"cutOffs",void 0),Sn=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.StretchFunction")],Sn);const Bn=Sn;var Mn;let zn=Mn=class extends h{constructor(){super(...arguments),this.attributeTableAsRecordSet=null}clone(){return new Mn({attributeTableAsRecordSet:(0,o.d9)(this.attributeTableAsRecordSet)})}};(0,i._)([(0,a.Cb)({json:{write:!0}})],zn.prototype,"attributeTableAsRecordSet",void 0),zn=Mn=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.TableFunctionArguments")],zn);const Gn=zn;let Dn=class extends v{constructor(){super(...arguments),this.functionName="Table",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1||t.pixelType.startsWith("f"))return{success:!1,supportsGPU:!1,error:"table-function: Source data must be single band and integer pixel type."};const{attributeTableAsRecordSet:e}=this.functionArguments;if(!e)return{success:!1,supportsGPU:!1,error:"table-function: Missing attributeTableAsRecordSet argument."};this.outputPixelType=this._getOutputPixelType(t.pixelType);const s=t.clone();return s.pixelType=this.outputPixelType,s.bandCount=1,"thematic"!==s.dataType&&(s.keyProperties=s.keyProperties?{...s.keyProperties,DataType:"thematic"}:{DataType:"thematic"}),this.rasterInfo=s,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};(0,i._)([(0,a.Cb)({json:{write:!0,name:"rasterFunction"}})],Dn.prototype,"functionName",void 0),(0,i._)([(0,a.Cb)({type:Gn,json:{write:!0,name:"rasterFunctionArguments"}})],Dn.prototype,"functionArguments",void 0),(0,i._)([(0,a.Cb)()],Dn.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.Cb)()],Dn.prototype,"isNoopProcess",void 0),Dn=(0,i._)([(0,u.j)("esri.layers.support.rasterFunctions.TableFunction")],Dn);const On=Dn,Vn=new Map;function En(t,e){const{rasterFunctionArguments:s}=t;s&&(s.rasters||[s.raster,s.raster2]).forEach((t=>{t&&"number"!=typeof t&&("string"==typeof t?t.startsWith("http")&&(e.includes(t)||e.push(t)):"rasterFunctionArguments"in t&&En(t,e))}))}function Un(t,e){e=e??{};try{if("function"in(t=(0,o.d9)(t))&&"arguments"in t&&t.arguments){const s=$n(t,new Map,e);if(Kn(s),!s.renderingRule)throw new r.Z("raster-function-helper","Unsupported raster function json.");t=s.renderingRule}if("rasterFunction"in t){const s=Wn(t=Ln(t),e);return s.isRoot=!0,s}}catch{}throw new r.Z("raster-function-helper","unsupported raster function json.")}function Zn(t){return!!(t&&"object"==typeof t&&t.rasterFunction&&t.rasterFunctionArguments)}function Ln(t){const{rasterFunction:e,rasterFunctionArguments:s}=t,n={};for(const t in s){let e=s[t];const r=t.toLowerCase();if("rasters"===r&&Array.isArray(e))n.rasters=e.map((t=>Zn(t)?Ln(t):t));else switch(Zn(e)&&(e=Ln(e)),r){case"dra":n.dra=e;break;case"pspower":n.psPower=e;break;case"pszfactor":n.psZFactor=e;break;case"bandids":n.bandIds=e;break;default:n[t[0].toLowerCase()+t.slice(1)]=e}}return"Local"!==e||n.rasters?.length||(n.rasters=["$$"]),{...t,rasterFunctionArguments:n}}function Wn(t,e){const{rasterFunction:s,rasterFunctionArguments:n}=t,o=t.outputPixelType?.toLowerCase();if(null==s||!Vn.has(s))throw new r.Z("raster-function-helper",`unsupported raster function: ${s}`);const i=Vn.get(s),a=("function"==typeof i.ctor?i.ctor:i.ctor.default).fromJSON({...t,outputPixelType:o}),{rasterArgumentNames:u}=a,l=[],c=function(t,e){return"rasters"===e[0]&&Array.isArray(t.rasters)?t.rasters:e.map((e=>t[e]))}(n,u),p="rasters"===u[0]||u.length>1,h=[];for(let t=0;t<c.length;t++){const s=c[t];let n;null==s||"string"==typeof s&&s.startsWith("$")?l.push(e?.raster):"string"==typeof s?e[s]&&l.push(e[s]):"number"!=typeof s&&"rasterFunction"in s&&(n=Wn(s,e),p||(a.functionArguments[u[t]]=n),l.push(n)),p&&h.push(n??s)}if(p&&("rasters"===u[0]?a.functionArguments.rasters=h:u.forEach(((t,e)=>{a.functionArguments[t]=h[e]}))),e){a.sourceRasters=l;const t=e.raster?.url;t&&(a.mainPrimaryRasterId=t)}return a}function Hn(t,e){if(t&&e)for(const s in t){const n=t[s];n&&"object"==typeof n&&"type"in n&&("RasterFunctionTemplate"===n.type?Hn(n.arguments,e):"RasterFunctionVariable"===n.type&&null!=e[n.name]&&(n.value=e[n.name]))}}function qn(t,e){if(!t||"object"!=typeof t)return t;const{value:s}=t;if(!s||"object"!=typeof s)return t.isDataset?"$$":s;if(Array.isArray(s))return 0===s.length?[]:s.map((t=>t&&"object"==typeof t&&"RasterFunctionVariable"===t.type?qn(t,e):t));if("value"in s&&["number","string","boolean"].includes(typeof s.value))return s.value;if(t.isDataset&&"Scalar"!==s.type)return"$$";if(!("type"in s))return s;let n=s;switch(s.type){case"Scalar":n=s.value;break;case"AlgorithmicColorRamp":n=Jn(s);break;case"MultiPartColorRamp":n={type:"multipart",colorRamps:s.ArrayOfColorRamp.map(Jn)};break;case"ArgumentArray":if(s.elements?.length&&"RasterStatistics"!==s.elements[0].type){const t=[];for(let n=0;n<s.elements.length;n++){const o=s.elements[n],{type:i}=o;if(i)if("RasterFunctionTemplate"===i){const{renderingRule:s}=$n(o,e);t.push(s),null!=o._object_id&&e.set(o._object_id,s)}else{if("RasterFunctionVariable"!==i)throw new r.Z("raster-function-helper","unsupported raster function json.");{const s=qn(o,e);t.push(s),null!=o._object_id&&e.set(o._object_id,s)}}else t.push(o)}n=t}else n=s.elements}return null!=s._object_id&&e.set(s._object_id,n),n}function Jn(t){const e=t.algorithm??"esriHSVAlgorithm";let{FromColor:s,ToColor:r}=t;if(!Array.isArray(s)){const{r:t,g:e,b:r}=(0,n.xr)({h:s.Hue,s:s.Saturation,v:s.Value});s=[t,e,r,s.AlphaValue]}if(!Array.isArray(r)){const{r:t,g:e,b:s}=(0,n.xr)({h:r.Hue,s:r.Saturation,v:r.Value});r=[t,e,s,r.AlphaValue]}return{type:"algorithmic",algorithm:e,fromColor:s,toColor:r}}function $n(t,e,s){s&&Hn(t,s);const n={renderingRule:{},templates:e};return Xn(t,n),n}function Xn(t,e){if(!t||!e.renderingRule)return;const{renderingRule:s,templates:n}=e,{function:r,arguments:o,_object_id:i}=t;if(!r||!o)return;null!=i&&n.set(i,s),s.rasterFunction=r.type.replace("Function",""),s.outputPixelType=r.pixelType;const a={};s.rasterFunctionArguments=a;for(const t in o){if("type"===t||"object_id"===t||"_object_ref_id"===t)continue;const e=o[t];e&&"object"==typeof e&&"type"in e&&("RasterFunctionTemplate"===e.type||"RasterFunctionVariable"===e.type)?("RasterFunctionVariable"===e.type?a[t]=qn(e,n):(s.rasterFunctionArguments[t]={},Xn(e,{renderingRule:s.rasterFunctionArguments[t],templates:n})),null!=e._object_id&&n.set(e._object_id,a[t])):a[t]=e}switch(a.DEM&&!a.Raster&&(a.Raster=a.DEM,delete a.DEM),s.rasterFunction){case"Stretch":!function(t){t.Statistics?.length&&"object"==typeof t.Statistics&&(t.Statistics=t.Statistics.map((t=>[t.min,t.max,t.mean,t.standardDeviation]))),null!=t.NumberOfStandardDeviation&&(t.NumberOfStandardDeviations=t.NumberOfStandardDeviation,delete t.NumberOfStandardDeviation)}(a);break;case"Colormap":!function(t){"randomcolorramp"===t.ColorRamp?.type?.toLowerCase()&&(delete t.ColorRamp,t.ColormapName="Random"),0===t.ColorSchemeType&&delete t.ColorRamp}(a);break;case"Convolution":!function(t){null!=t.ConvolutionType&&(t.Type=t.ConvolutionType,delete t.ConvolutionType)}(a);break;case"Mask":!function(t){t.NoDataValues?.length&&"string"==typeof t.NoDataValues[0]&&(t.NoDataValues=t.NoDataValues.filter((t=>""!==t)).map((t=>Number(t))))}(a)}}function Kn(t){const{renderingRule:e,templates:s}=t;if("object"!=typeof e||!e?.rasterFunctionArguments||!s.size)return;const{rasterFunctionArguments:n}=e;for(const t in n){const e=n[t],o="_object_ref_id"===t?e:e&&"object"==typeof e&&"_object_ref_id"in e?e._object_ref_id:null;if(null==o)e&&"object"==typeof e&&(e.rasterFunctionArguments&&Kn({renderingRule:e,templates:s}),Array.isArray(e)&&e.forEach(((t,n)=>{if(t&&"object"==typeof t)if(null!=t._object_ref_id){if(!s.has(t._object_ref_id))throw new r.Z("raster-function-helper",`unsupported raster function json. _object_ref_id: ${e} does not exist`);const i=s.get(o);i&&"object"==typeof i?Object.assign(t,i):e[n]=i}else Kn({renderingRule:t,templates:s})})));else{if(!s.has(o))throw new r.Z("raster-function-helper",`unsupported raster function json. _object_ref_id: ${o} does not exist`);const e=s.get(o);"_object_ref_id"!==t?n[t]=e:e&&"object"==typeof e&&Object.assign(n,e)}}}Vn.set("Arithmetic",{desc:"Arithmetic Function",ctor:Bt,rasterArgumentNames:["rasters"]}),Vn.set("Aspect",{desc:"Aspect Function",ctor:Vt,rasterArgumentNames:["raster"]}),Vn.set("BandArithmetic",{desc:"Band Arithmetic Function",ctor:oe,rasterArgumentNames:["raster"]}),Vn.set("Colormap",{desc:"Colormap Function",ctor:Fe,rasterArgumentNames:["raster"]}),Vn.set("ColormapToRGB",{desc:"ColormapToRGB Function",ctor:Be,rasterArgumentNames:["raster"]}),Vn.set("CompositeBand",{desc:"CompositeBand Function",ctor:Ve,rasterArgumentNames:["rasters"]}),Vn.set("ComputeChange",{desc:"ComputeChange Function",ctor:$e,rasterArgumentNames:["rasters"]}),Vn.set("Convolution",{desc:"Convolution Function",ctor:ps,rasterArgumentNames:["raster"]}),Vn.set("ContrastBrightness",{desc:"Contrast Brightness Function",ctor:es,rasterArgumentNames:["raster"]}),Vn.set("ExtractBand",{desc:"ExtractBand Function",ctor:_s,rasterArgumentNames:["raster"]}),Vn.set("Curvature",{desc:"Curvature Function",ctor:ys,rasterArgumentNames:["raster"]}),Vn.set("Hillshade",{desc:"Hillshade Function",ctor:Bs,rasterArgumentNames:["raster"]}),Vn.set("ShadedRelief",{desc:"ShadedRelief Function",ctor:an,rasterArgumentNames:["raster"]}),Vn.set("Grayscale",{desc:"Grayscale Function",ctor:Fs,rasterArgumentNames:["raster"]}),Vn.set("Clip",{desc:"Clip Function",ctor:fe,rasterArgumentNames:["raster"]}),Vn.set("Local",{desc:"Local Function",ctor:Os,rasterArgumentNames:["rasters"]}),Vn.set("Mask",{desc:"Mask Function",ctor:Ws,rasterArgumentNames:["raster"]}),Vn.set("NDVI",{desc:"NDVI Function",ctor:Xs,rasterArgumentNames:["raster"]}),Vn.set("Remap",{desc:"Remap Function",ctor:en,rasterArgumentNames:["raster"]}),Vn.set("Slope",{desc:"Slope Function",ctor:mn,rasterArgumentNames:["raster"]}),Vn.set("Statistics",{desc:"Focal Statistics Function",ctor:An,rasterArgumentNames:["raster"]}),Vn.set("StatisticsHistogram",{desc:"Statistics Histogram Function",ctor:Nn,rasterArgumentNames:["raster"]}),Vn.set("Stretch",{desc:"Stretch Function",ctor:Bn,rasterArgumentNames:["raster"]}),Vn.set("Table",{desc:"Attribute Table Function",ctor:On,rasterArgumentNames:["raster"]})}}]);